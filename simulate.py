#import the required modules

from abaqus import *
from abaqusConstants import *
import section
import regionToolset
import displayGroupMdbToolset as dgm
import part
import material
import assembly
import step
import interaction
import load
import mesh
import optimization
import job
import sketch
import visualization
import xyPlot
import displayGroupOdbToolset as dgo
import connectorBehavior
import os
import sys
import csv
Mdb()
#setup the viewport
session.viewports['Viewport: 1'].setValues(displayedObject=None)


#create the main folder and sub folders to store the cae files
simulationFolderMain= 'C:/72 new simulations/'
simulationFolderSub=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71]

for s in range(len(simulationFolderSub)):
	if not os.path.exists(simulationFolderMain):
		os.makedirs(simulationFolderMain)
		print simulationFolderMain + ' created!'
		c = simulationFolderSub[s]
		c= str(c)
		simulationFolderCreation= simulationFolderMain + c
		if os.path.exists(simulationFolderCreation):
			print simulationFolderCreation + ' exists!'
		if not os.path.exists(simulationFolderCreation):
			os.makedirs(simulationFolderCreation)
			print simulationFolderCreation + ' created!'
	elif os.path.exists(simulationFolderMain):
		print simulationFolderMain + ' exists!'
		c = simulationFolderSub[s]
		c= str(c)
		simulationFolderCreation= simulationFolderMain + c
		if os.path.exists(simulationFolderCreation):
			print simulationFolderCreation + ' exists!'
		if not os.path.exists(simulationFolderCreation):
			os.makedirs(simulationFolderCreation)
			print simulationFolderCreation + ' created!'
			
#create the sets 
#call ut50() for 50mm, ut100() for 100mm, ut150() for 150mm and ut200() for 200mm
def ut50():
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((6.666667, 0.0, 33.333333), ), ((0.0, 3.333333, 16.666667), 
        ), ((0.0, 6.666667, 33.333333), ), ((2.5, 1.666667, 33.333333), ), ((
        1.666667, 5.0, 33.333333), ), ((2.5, 8.333333, 33.333333), ), ((7.5, 
        1.666667, 33.333333), ), ((8.333333, 5.0, 33.333333), ), ((7.5, 
        8.333333, 33.333333), ), ((5.416667, 7.5, 33.333333), ), ((7.083333, 
        5.833333, 33.333333), ), ((6.666667, 3.333333, 33.333333), ), ((
        4.583333, 2.5, 33.333333), ), ((2.916667, 4.166667, 33.333333), ), ((
        3.333333, 6.666667, 33.333333), ), ((16.666667, 0.0, 33.333333), ), ((
        10.0, 3.333333, 16.666667), ), ((10.0, 6.666667, 33.333333), ), ((12.5, 
        1.666667, 33.333333), ), ((11.666667, 5.0, 33.333333), ), ((12.5, 
        8.333333, 33.333333), ), ((17.5, 1.666667, 33.333333), ), ((18.333333, 
        5.0, 33.333333), ), ((17.5, 8.333333, 33.333333), ), ((15.416667, 7.5, 
        33.333333), ), ((17.083333, 5.833333, 33.333333), ), ((16.666667, 
        3.333333, 33.333333), ), ((14.583333, 2.5, 33.333333), ), ((12.916667, 
        4.166667, 33.333333), ), ((13.333333, 6.666667, 33.333333), ), ((
        26.666667, 0.0, 33.333333), ), ((20.0, 3.333333, 16.666667), ), ((20.0, 
        6.666667, 33.333333), ), ((22.5, 1.666667, 33.333333), ), ((21.666667, 
        5.0, 33.333333), ), ((22.5, 8.333333, 33.333333), ), ((27.5, 1.666667, 
        33.333333), ), ((28.333333, 5.0, 33.333333), ), ((27.5, 8.333333, 
        33.333333), ), ((25.416667, 7.5, 33.333333), ), ((27.083333, 5.833333, 
        33.333333), ), ((26.666667, 3.333333, 33.333333), ), ((24.583333, 2.5, 
        33.333333), ), ((22.916667, 4.166667, 33.333333), ), ((23.333333, 
        6.666667, 33.333333), ), ((36.666667, 0.0, 33.333333), ), ((30.0, 
        3.333333, 16.666667), ), ((30.0, 6.666667, 33.333333), ), ((32.5, 
        1.666667, 33.333333), ), ((31.666667, 5.0, 33.333333), ), ((32.5, 
        8.333333, 33.333333), ), ((37.5, 1.666667, 33.333333), ), ((38.333333, 
        5.0, 33.333333), ), ((37.5, 8.333333, 33.333333), ), ((35.416667, 7.5, 
        33.333333), ), ((37.083333, 5.833333, 33.333333), ), ((36.666667, 
        3.333333, 33.333333), ), ((34.583333, 2.5, 33.333333), ), ((32.916667, 
        4.166667, 33.333333), ), ((33.333333, 6.666667, 33.333333), ), ((
        46.666667, 0.0, 33.333333), ), ((50.0, 6.666667, 16.666667), ), ((50.0, 
        3.333333, 33.333333), ), ((40.0, 3.333333, 16.666667), ), ((40.0, 
        6.666667, 33.333333), ), ((42.5, 1.666667, 33.333333), ), ((41.666667, 
        5.0, 33.333333), ), ((42.5, 8.333333, 33.333333), ), ((47.5, 1.666667, 
        33.333333), ), ((48.333333, 5.0, 33.333333), ), ((47.5, 8.333333, 
        33.333333), ), ((45.416667, 7.5, 33.333333), ), ((47.083333, 5.833333, 
        33.333333), ), ((46.666667, 3.333333, 33.333333), ), ((44.583333, 2.5, 
        33.333333), ), ((42.916667, 4.166667, 33.333333), ), ((43.333333, 
        6.666667, 33.333333), ), ((6.666667, 10.0, 33.333333), ), ((0.0, 
        13.333333, 16.666667), ), ((0.0, 16.666667, 33.333333), ), ((2.5, 
        11.666667, 33.333333), ), ((1.666667, 15.0, 33.333333), ), ((2.5, 
        18.333333, 33.333333), ), ((7.5, 11.666667, 33.333333), ), ((8.333333, 
        15.0, 33.333333), ), ((7.5, 18.333333, 33.333333), ), ((5.416667, 17.5, 
        33.333333), ), ((7.083333, 15.833333, 33.333333), ), ((6.666667, 
        13.333333, 33.333333), ), ((4.583333, 12.5, 33.333333), ), ((2.916667, 
        14.166667, 33.333333), ), ((3.333333, 16.666667, 33.333333), ), ((
        16.666667, 10.0, 33.333333), ), ((10.0, 13.333333, 16.666667), ), ((
        10.0, 16.666667, 33.333333), ), ((12.5, 11.666667, 33.333333), ), ((
        11.666667, 15.0, 33.333333), ), ((12.5, 18.333333, 33.333333), ), ((
        17.5, 11.666667, 33.333333), ), ((18.333333, 15.0, 33.333333), ), ((
        17.5, 18.333333, 33.333333), ), ((15.416667, 17.5, 33.333333), ), ((
        17.083333, 15.833333, 33.333333), ), ((16.666667, 13.333333, 
        33.333333), ), ((14.583333, 12.5, 33.333333), ), ((12.916667, 
        14.166667, 33.333333), ), ((13.333333, 16.666667, 33.333333), ), ((
        26.666667, 10.0, 33.333333), ), ((20.0, 13.333333, 16.666667), ), ((
        20.0, 16.666667, 33.333333), ), ((22.5, 11.666667, 33.333333), ), ((
        21.666667, 15.0, 33.333333), ), ((22.5, 18.333333, 33.333333), ), ((
        27.5, 11.666667, 33.333333), ), ((28.333333, 15.0, 33.333333), ), ((
        27.5, 18.333333, 33.333333), ), ((25.416667, 17.5, 33.333333), ), ((
        27.083333, 15.833333, 33.333333), ), ((26.666667, 13.333333, 
        33.333333), ), ((24.583333, 12.5, 33.333333), ), ((22.916667, 
        14.166667, 33.333333), ), ((23.333333, 16.666667, 33.333333), ), ((
        36.666667, 10.0, 33.333333), ), ((30.0, 13.333333, 16.666667), ), ((
        30.0, 16.666667, 33.333333), ), ((32.5, 11.666667, 33.333333), ), ((
        31.666667, 15.0, 33.333333), ), ((32.5, 18.333333, 33.333333), ), ((
        37.5, 11.666667, 33.333333), ), ((38.333333, 15.0, 33.333333), ), ((
        37.5, 18.333333, 33.333333), ), ((35.416667, 17.5, 33.333333), ), ((
        37.083333, 15.833333, 33.333333), ), ((36.666667, 13.333333, 
        33.333333), ), ((34.583333, 12.5, 33.333333), ), ((32.916667, 
        14.166667, 33.333333), ), ((33.333333, 16.666667, 33.333333), ), ((
        46.666667, 10.0, 33.333333), ), ((50.0, 16.666667, 16.666667), ), ((
        50.0, 13.333333, 33.333333), ), ((40.0, 13.333333, 16.666667), ), ((
        40.0, 16.666667, 33.333333), ), ((42.5, 11.666667, 33.333333), ), ((
        41.666667, 15.0, 33.333333), ), ((42.5, 18.333333, 33.333333), ), ((
        47.5, 11.666667, 33.333333), ), ((48.333333, 15.0, 33.333333), ), ((
        47.5, 18.333333, 33.333333), ), ((45.416667, 17.5, 33.333333), ), ((
        47.083333, 15.833333, 33.333333), ), ((46.666667, 13.333333, 
        33.333333), ), ((44.583333, 12.5, 33.333333), ), ((42.916667, 
        14.166667, 33.333333), ), ((43.333333, 16.666667, 33.333333), ), ((
        6.666667, 20.0, 33.333333), ), ((0.0, 23.333333, 16.666667), ), ((0.0, 
        26.666667, 33.333333), ), ((2.5, 21.666667, 33.333333), ), ((1.666667, 
        25.0, 33.333333), ), ((2.5, 28.333333, 33.333333), ), ((7.5, 21.666667, 
        33.333333), ), ((8.333333, 25.0, 33.333333), ), ((7.5, 28.333333, 
        33.333333), ), ((5.416667, 27.5, 33.333333), ), ((7.083333, 25.833333, 
        33.333333), ), ((6.666667, 23.333333, 33.333333), ), ((4.583333, 22.5, 
        33.333333), ), ((2.916667, 24.166667, 33.333333), ), ((3.333333, 
        26.666667, 33.333333), ), ((16.666667, 20.0, 33.333333), ), ((10.0, 
        23.333333, 16.666667), ), ((10.0, 26.666667, 33.333333), ), ((12.5, 
        21.666667, 33.333333), ), ((11.666667, 25.0, 33.333333), ), ((12.5, 
        28.333333, 33.333333), ), ((17.5, 21.666667, 33.333333), ), ((
        18.333333, 25.0, 33.333333), ), ((17.5, 28.333333, 33.333333), ), ((
        15.416667, 27.5, 33.333333), ), ((17.083333, 25.833333, 33.333333), ), 
        ((16.666667, 23.333333, 33.333333), ), ((14.583333, 22.5, 33.333333), 
        ), ((12.916667, 24.166667, 33.333333), ), ((13.333333, 26.666667, 
        33.333333), ), ((26.666667, 20.0, 33.333333), ), ((20.0, 23.333333, 
        16.666667), ), ((20.0, 26.666667, 33.333333), ), ((22.5, 21.666667, 
        33.333333), ), ((21.666667, 25.0, 33.333333), ), ((22.5, 28.333333, 
        33.333333), ), ((27.5, 21.666667, 33.333333), ), ((28.333333, 25.0, 
        33.333333), ), ((27.5, 28.333333, 33.333333), ), ((25.416667, 27.5, 
        33.333333), ), ((27.083333, 25.833333, 33.333333), ), ((26.666667, 
        23.333333, 33.333333), ), ((24.583333, 22.5, 33.333333), ), ((
        22.916667, 24.166667, 33.333333), ), ((23.333333, 26.666667, 
        33.333333), ), ((36.666667, 20.0, 33.333333), ), ((30.0, 23.333333, 
        16.666667), ), ((30.0, 26.666667, 33.333333), ), ((32.5, 21.666667, 
        33.333333), ), ((31.666667, 25.0, 33.333333), ), ((32.5, 28.333333, 
        33.333333), ), ((37.5, 21.666667, 33.333333), ), ((38.333333, 25.0, 
        33.333333), ), ((37.5, 28.333333, 33.333333), ), ((35.416667, 27.5, 
        33.333333), ), ((37.083333, 25.833333, 33.333333), ), ((36.666667, 
        23.333333, 33.333333), ), ((34.583333, 22.5, 33.333333), ), ((
        32.916667, 24.166667, 33.333333), ), ((33.333333, 26.666667, 
        33.333333), ), ((46.666667, 20.0, 33.333333), ), ((50.0, 26.666667, 
        16.666667), ), ((50.0, 23.333333, 33.333333), ), ((40.0, 23.333333, 
        16.666667), ), ((40.0, 26.666667, 33.333333), ), ((42.5, 21.666667, 
        33.333333), ), ((41.666667, 25.0, 33.333333), ), ((42.5, 28.333333, 
        33.333333), ), ((47.5, 21.666667, 33.333333), ), ((48.333333, 25.0, 
        33.333333), ), ((47.5, 28.333333, 33.333333), ), ((45.416667, 27.5, 
        33.333333), ), ((47.083333, 25.833333, 33.333333), ), ((46.666667, 
        23.333333, 33.333333), ), ((44.583333, 22.5, 33.333333), ), ((
        42.916667, 24.166667, 33.333333), ), ((43.333333, 26.666667, 
        33.333333), ), ((6.666667, 30.0, 33.333333), ), ((0.0, 33.333333, 
        16.666667), ), ((0.0, 36.666667, 33.333333), ), ((2.5, 31.666667, 
        33.333333), ), ((1.666667, 35.0, 33.333333), ), ((2.5, 38.333333, 
        33.333333), ), ((7.5, 31.666667, 33.333333), ), ((8.333333, 35.0, 
        33.333333), ), ((7.5, 38.333333, 33.333333), ), ((5.416667, 37.5, 
        33.333333), ), ((7.083333, 35.833333, 33.333333), ), ((6.666667, 
        33.333333, 33.333333), ), ((4.583333, 32.5, 33.333333), ), ((2.916667, 
        34.166667, 33.333333), ), ((3.333333, 36.666667, 33.333333), ), ((
        16.666667, 30.0, 33.333333), ), ((10.0, 33.333333, 16.666667), ), ((
        10.0, 36.666667, 33.333333), ), ((12.5, 31.666667, 33.333333), ), ((
        11.666667, 35.0, 33.333333), ), ((12.5, 38.333333, 33.333333), ), ((
        17.5, 31.666667, 33.333333), ), ((18.333333, 35.0, 33.333333), ), ((
        17.5, 38.333333, 33.333333), ))+f.findAt(((15.416667, 37.5, 33.333333), 
        ), ((17.083333, 35.833333, 33.333333), ), ((16.666667, 33.333333, 
        33.333333), ), ((14.583333, 32.5, 33.333333), ), ((12.916667, 
        34.166667, 33.333333), ), ((13.333333, 36.666667, 33.333333), ), ((
        26.666667, 30.0, 33.333333), ), ((20.0, 33.333333, 16.666667), ), ((
        20.0, 36.666667, 33.333333), ), ((22.5, 31.666667, 33.333333), ), ((
        21.666667, 35.0, 33.333333), ), ((22.5, 38.333333, 33.333333), ), ((
        27.5, 31.666667, 33.333333), ), ((28.333333, 35.0, 33.333333), ), ((
        27.5, 38.333333, 33.333333), ), ((25.416667, 37.5, 33.333333), ), ((
        27.083333, 35.833333, 33.333333), ), ((26.666667, 33.333333, 
        33.333333), ), ((24.583333, 32.5, 33.333333), ), ((22.916667, 
        34.166667, 33.333333), ), ((23.333333, 36.666667, 33.333333), ), ((
        36.666667, 30.0, 33.333333), ), ((30.0, 33.333333, 16.666667), ), ((
        30.0, 36.666667, 33.333333), ), ((32.5, 31.666667, 33.333333), ), ((
        31.666667, 35.0, 33.333333), ), ((32.5, 38.333333, 33.333333), ), ((
        37.5, 31.666667, 33.333333), ), ((38.333333, 35.0, 33.333333), ), ((
        37.5, 38.333333, 33.333333), ), ((35.416667, 37.5, 33.333333), ), ((
        37.083333, 35.833333, 33.333333), ), ((36.666667, 33.333333, 
        33.333333), ), ((34.583333, 32.5, 33.333333), ), ((32.916667, 
        34.166667, 33.333333), ), ((33.333333, 36.666667, 33.333333), ), ((
        46.666667, 30.0, 33.333333), ), ((50.0, 36.666667, 16.666667), ), ((
        50.0, 33.333333, 33.333333), ), ((40.0, 33.333333, 16.666667), ), ((
        40.0, 36.666667, 33.333333), ), ((42.5, 31.666667, 33.333333), ), ((
        41.666667, 35.0, 33.333333), ), ((42.5, 38.333333, 33.333333), ), ((
        47.5, 31.666667, 33.333333), ), ((48.333333, 35.0, 33.333333), ), ((
        47.5, 38.333333, 33.333333), ), ((45.416667, 37.5, 33.333333), ), ((
        47.083333, 35.833333, 33.333333), ), ((46.666667, 33.333333, 
        33.333333), ), ((44.583333, 32.5, 33.333333), ), ((42.916667, 
        34.166667, 33.333333), ), ((43.333333, 36.666667, 33.333333), ), ((
        6.666667, 40.0, 33.333333), ), ((3.333333, 50.0, 33.333333), ), ((0.0, 
        43.333333, 16.666667), ), ((0.0, 46.666667, 33.333333), ), ((2.5, 
        41.666667, 33.333333), ), ((1.666667, 45.0, 33.333333), ), ((2.5, 
        48.333333, 33.333333), ), ((7.5, 41.666667, 33.333333), ), ((8.333333, 
        45.0, 33.333333), ), ((7.5, 48.333333, 33.333333), ), ((5.416667, 47.5, 
        33.333333), ), ((7.083333, 45.833333, 33.333333), ), ((6.666667, 
        43.333333, 33.333333), ), ((4.583333, 42.5, 33.333333), ), ((2.916667, 
        44.166667, 33.333333), ), ((3.333333, 46.666667, 33.333333), ), ((
        16.666667, 40.0, 33.333333), ), ((13.333333, 50.0, 33.333333), ), ((
        10.0, 43.333333, 16.666667), ), ((10.0, 46.666667, 33.333333), ), ((
        12.5, 41.666667, 33.333333), ), ((11.666667, 45.0, 33.333333), ), ((
        12.5, 48.333333, 33.333333), ), ((17.5, 41.666667, 33.333333), ), ((
        18.333333, 45.0, 33.333333), ), ((17.5, 48.333333, 33.333333), ), ((
        15.416667, 47.5, 33.333333), ), ((17.083333, 45.833333, 33.333333), ), 
        ((16.666667, 43.333333, 33.333333), ), ((14.583333, 42.5, 33.333333), 
        ), ((12.916667, 44.166667, 33.333333), ), ((13.333333, 46.666667, 
        33.333333), ), ((26.666667, 40.0, 33.333333), ), ((23.333333, 50.0, 
        33.333333), ), ((20.0, 43.333333, 16.666667), ), ((20.0, 46.666667, 
        33.333333), ), ((22.5, 41.666667, 33.333333), ), ((21.666667, 45.0, 
        33.333333), ), ((22.5, 48.333333, 33.333333), ), ((27.5, 41.666667, 
        33.333333), ), ((28.333333, 45.0, 33.333333), ), ((27.5, 48.333333, 
        33.333333), ), ((25.416667, 47.5, 33.333333), ), ((27.083333, 
        45.833333, 33.333333), ), ((26.666667, 43.333333, 33.333333), ), ((
        24.583333, 42.5, 33.333333), ), ((22.916667, 44.166667, 33.333333), ), 
        ((23.333333, 46.666667, 33.333333), ), ((36.666667, 40.0, 33.333333), 
        ), ((33.333333, 50.0, 33.333333), ), ((30.0, 43.333333, 16.666667), ), 
        ((30.0, 46.666667, 33.333333), ), ((32.5, 41.666667, 33.333333), ), ((
        31.666667, 45.0, 33.333333), ), ((32.5, 48.333333, 33.333333), ), ((
        37.5, 41.666667, 33.333333), ), ((38.333333, 45.0, 33.333333), ), ((
        37.5, 48.333333, 33.333333), ), ((35.416667, 47.5, 33.333333), ), ((
        37.083333, 45.833333, 33.333333), ), ((36.666667, 43.333333, 
        33.333333), ), ((34.583333, 42.5, 33.333333), ), ((32.916667, 
        44.166667, 33.333333), ), ((33.333333, 46.666667, 33.333333), ), ((
        46.666667, 40.0, 33.333333), ), ((50.0, 46.666667, 16.666667), ), ((
        50.0, 43.333333, 33.333333), ), ((43.333333, 50.0, 33.333333), ), ((
        40.0, 43.333333, 16.666667), ), ((40.0, 46.666667, 33.333333), ), ((
        42.5, 41.666667, 33.333333), ), ((41.666667, 45.0, 33.333333), ), ((
        42.5, 48.333333, 33.333333), ), ((47.5, 41.666667, 33.333333), ), ((
        48.333333, 45.0, 33.333333), ), ((47.5, 48.333333, 33.333333), ), ((
        45.416667, 47.5, 33.333333), ), ((47.083333, 45.833333, 33.333333), ), 
        ((46.666667, 43.333333, 33.333333), ), ((44.583333, 42.5, 33.333333), 
        ), ((42.916667, 44.166667, 33.333333), ), ((43.333333, 46.666667, 
        33.333333), ))
	p.Set(faces=faces, name='ut50')

def ut100():
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((6.666667, 0.0, 33.333333), ), ((0.0, 3.333333, 16.666667), 
        ), ((0.0, 6.666667, 33.333333), ), ((2.5, 1.666667, 33.333333), ), ((
        1.666667, 5.0, 33.333333), ), ((2.5, 8.333333, 33.333333), ), ((7.5, 
        1.666667, 33.333333), ), ((8.333333, 5.0, 33.333333), ), ((7.5, 
        8.333333, 33.333333), ), ((5.416667, 7.5, 33.333333), ), ((7.083333, 
        5.833333, 33.333333), ), ((6.666667, 3.333333, 33.333333), ), ((
        4.583333, 2.5, 33.333333), ), ((2.916667, 4.166667, 33.333333), ), ((
        3.333333, 6.666667, 33.333333), ), ((16.666667, 0.0, 33.333333), ), ((
        10.0, 3.333333, 16.666667), ), ((10.0, 6.666667, 33.333333), ), ((12.5, 
        1.666667, 33.333333), ), ((11.666667, 5.0, 33.333333), ), ((12.5, 
        8.333333, 33.333333), ), ((17.5, 1.666667, 33.333333), ), ((18.333333, 
        5.0, 33.333333), ), ((17.5, 8.333333, 33.333333), ), ((15.416667, 7.5, 
        33.333333), ), ((17.083333, 5.833333, 33.333333), ), ((16.666667, 
        3.333333, 33.333333), ), ((14.583333, 2.5, 33.333333), ), ((12.916667, 
        4.166667, 33.333333), ), ((13.333333, 6.666667, 33.333333), ), ((
        26.666667, 0.0, 33.333333), ), ((20.0, 3.333333, 16.666667), ), ((20.0, 
        6.666667, 33.333333), ), ((22.5, 1.666667, 33.333333), ), ((21.666667, 
        5.0, 33.333333), ), ((22.5, 8.333333, 33.333333), ), ((27.5, 1.666667, 
        33.333333), ), ((28.333333, 5.0, 33.333333), ), ((27.5, 8.333333, 
        33.333333), ), ((25.416667, 7.5, 33.333333), ), ((27.083333, 5.833333, 
        33.333333), ), ((26.666667, 3.333333, 33.333333), ), ((24.583333, 2.5, 
        33.333333), ), ((22.916667, 4.166667, 33.333333), ), ((23.333333, 
        6.666667, 33.333333), ), ((36.666667, 0.0, 33.333333), ), ((30.0, 
        3.333333, 16.666667), ), ((30.0, 6.666667, 33.333333), ), ((32.5, 
        1.666667, 33.333333), ), ((31.666667, 5.0, 33.333333), ), ((32.5, 
        8.333333, 33.333333), ), ((37.5, 1.666667, 33.333333), ), ((38.333333, 
        5.0, 33.333333), ), ((37.5, 8.333333, 33.333333), ), ((35.416667, 7.5, 
        33.333333), ), ((37.083333, 5.833333, 33.333333), ), ((36.666667, 
        3.333333, 33.333333), ), ((34.583333, 2.5, 33.333333), ), ((32.916667, 
        4.166667, 33.333333), ), ((33.333333, 6.666667, 33.333333), ), ((
        46.666667, 0.0, 33.333333), ), ((50.0, 6.666667, 16.666667), ), ((50.0, 
        3.333333, 33.333333), ), ((40.0, 3.333333, 16.666667), ), ((40.0, 
        6.666667, 33.333333), ), ((42.5, 1.666667, 33.333333), ), ((41.666667, 
        5.0, 33.333333), ), ((42.5, 8.333333, 33.333333), ), ((47.5, 1.666667, 
        33.333333), ), ((48.333333, 5.0, 33.333333), ), ((47.5, 8.333333, 
        33.333333), ), ((45.416667, 7.5, 33.333333), ), ((47.083333, 5.833333, 
        33.333333), ), ((46.666667, 3.333333, 33.333333), ), ((44.583333, 2.5, 
        33.333333), ), ((42.916667, 4.166667, 33.333333), ), ((43.333333, 
        6.666667, 33.333333), ), ((6.666667, 10.0, 33.333333), ), ((0.0, 
        13.333333, 16.666667), ), ((0.0, 16.666667, 33.333333), ), ((2.5, 
        11.666667, 33.333333), ), ((1.666667, 15.0, 33.333333), ), ((2.5, 
        18.333333, 33.333333), ), ((7.5, 11.666667, 33.333333), ), ((8.333333, 
        15.0, 33.333333), ), ((7.5, 18.333333, 33.333333), ), ((5.416667, 17.5, 
        33.333333), ), ((7.083333, 15.833333, 33.333333), ), ((6.666667, 
        13.333333, 33.333333), ), ((4.583333, 12.5, 33.333333), ), ((2.916667, 
        14.166667, 33.333333), ), ((3.333333, 16.666667, 33.333333), ), ((
        16.666667, 10.0, 33.333333), ), ((10.0, 13.333333, 16.666667), ), ((
        10.0, 16.666667, 33.333333), ), ((12.5, 11.666667, 33.333333), ), ((
        11.666667, 15.0, 33.333333), ), ((12.5, 18.333333, 33.333333), ), ((
        17.5, 11.666667, 33.333333), ), ((18.333333, 15.0, 33.333333), ), ((
        17.5, 18.333333, 33.333333), ), ((15.416667, 17.5, 33.333333), ), ((
        17.083333, 15.833333, 33.333333), ), ((16.666667, 13.333333, 
        33.333333), ), ((14.583333, 12.5, 33.333333), ), ((12.916667, 
        14.166667, 33.333333), ), ((13.333333, 16.666667, 33.333333), ), ((
        26.666667, 10.0, 33.333333), ), ((20.0, 13.333333, 16.666667), ), ((
        20.0, 16.666667, 33.333333), ), ((22.5, 11.666667, 33.333333), ), ((
        21.666667, 15.0, 33.333333), ), ((22.5, 18.333333, 33.333333), ), ((
        27.5, 11.666667, 33.333333), ), ((28.333333, 15.0, 33.333333), ), ((
        27.5, 18.333333, 33.333333), ), ((25.416667, 17.5, 33.333333), ), ((
        27.083333, 15.833333, 33.333333), ), ((26.666667, 13.333333, 
        33.333333), ), ((24.583333, 12.5, 33.333333), ), ((22.916667, 
        14.166667, 33.333333), ), ((23.333333, 16.666667, 33.333333), ), ((
        36.666667, 10.0, 33.333333), ), ((30.0, 13.333333, 16.666667), ), ((
        30.0, 16.666667, 33.333333), ), ((32.5, 11.666667, 33.333333), ), ((
        31.666667, 15.0, 33.333333), ), ((32.5, 18.333333, 33.333333), ), ((
        37.5, 11.666667, 33.333333), ), ((38.333333, 15.0, 33.333333), ), ((
        37.5, 18.333333, 33.333333), ), ((35.416667, 17.5, 33.333333), ), ((
        37.083333, 15.833333, 33.333333), ), ((36.666667, 13.333333, 
        33.333333), ), ((34.583333, 12.5, 33.333333), ), ((32.916667, 
        14.166667, 33.333333), ), ((33.333333, 16.666667, 33.333333), ), ((
        46.666667, 10.0, 33.333333), ), ((50.0, 16.666667, 16.666667), ), ((
        50.0, 13.333333, 33.333333), ), ((40.0, 13.333333, 16.666667), ), ((
        40.0, 16.666667, 33.333333), ), ((42.5, 11.666667, 33.333333), ), ((
        41.666667, 15.0, 33.333333), ), ((42.5, 18.333333, 33.333333), ), ((
        47.5, 11.666667, 33.333333), ), ((48.333333, 15.0, 33.333333), ), ((
        47.5, 18.333333, 33.333333), ), ((45.416667, 17.5, 33.333333), ), ((
        47.083333, 15.833333, 33.333333), ), ((46.666667, 13.333333, 
        33.333333), ), ((44.583333, 12.5, 33.333333), ), ((42.916667, 
        14.166667, 33.333333), ), ((43.333333, 16.666667, 33.333333), ), ((
        6.666667, 20.0, 33.333333), ), ((0.0, 23.333333, 16.666667), ), ((0.0, 
        26.666667, 33.333333), ), ((2.5, 21.666667, 33.333333), ), ((1.666667, 
        25.0, 33.333333), ), ((2.5, 28.333333, 33.333333), ), ((7.5, 21.666667, 
        33.333333), ), ((8.333333, 25.0, 33.333333), ), ((7.5, 28.333333, 
        33.333333), ), ((5.416667, 27.5, 33.333333), ), ((7.083333, 25.833333, 
        33.333333), ), ((6.666667, 23.333333, 33.333333), ), ((4.583333, 22.5, 
        33.333333), ), ((2.916667, 24.166667, 33.333333), ), ((3.333333, 
        26.666667, 33.333333), ), ((16.666667, 20.0, 33.333333), ), ((10.0, 
        23.333333, 16.666667), ), ((10.0, 26.666667, 33.333333), ), ((12.5, 
        21.666667, 33.333333), ), ((11.666667, 25.0, 33.333333), ), ((12.5, 
        28.333333, 33.333333), ), ((17.5, 21.666667, 33.333333), ), ((
        18.333333, 25.0, 33.333333), ), ((17.5, 28.333333, 33.333333), ), ((
        15.416667, 27.5, 33.333333), ), ((17.083333, 25.833333, 33.333333), ), 
        ((16.666667, 23.333333, 33.333333), ), ((14.583333, 22.5, 33.333333), 
        ), ((12.916667, 24.166667, 33.333333), ), ((13.333333, 26.666667, 
        33.333333), ), ((26.666667, 20.0, 33.333333), ), ((20.0, 23.333333, 
        16.666667), ), ((20.0, 26.666667, 33.333333), ), ((22.5, 21.666667, 
        33.333333), ), ((21.666667, 25.0, 33.333333), ), ((22.5, 28.333333, 
        33.333333), ), ((27.5, 21.666667, 33.333333), ), ((28.333333, 25.0, 
        33.333333), ), ((27.5, 28.333333, 33.333333), ), ((25.416667, 27.5, 
        33.333333), ), ((27.083333, 25.833333, 33.333333), ), ((26.666667, 
        23.333333, 33.333333), ), ((24.583333, 22.5, 33.333333), ), ((
        22.916667, 24.166667, 33.333333), ), ((23.333333, 26.666667, 
        33.333333), ), ((36.666667, 20.0, 33.333333), ), ((30.0, 23.333333, 
        16.666667), ), ((30.0, 26.666667, 33.333333), ), ((32.5, 21.666667, 
        33.333333), ), ((31.666667, 25.0, 33.333333), ), ((32.5, 28.333333, 
        33.333333), ), ((37.5, 21.666667, 33.333333), ), ((38.333333, 25.0, 
        33.333333), ), ((37.5, 28.333333, 33.333333), ), ((35.416667, 27.5, 
        33.333333), ), ((37.083333, 25.833333, 33.333333), ), ((36.666667, 
        23.333333, 33.333333), ), ((34.583333, 22.5, 33.333333), ), ((
        32.916667, 24.166667, 33.333333), ), ((33.333333, 26.666667, 
        33.333333), ), ((46.666667, 20.0, 33.333333), ), ((50.0, 26.666667, 
        16.666667), ), ((50.0, 23.333333, 33.333333), ), ((40.0, 23.333333, 
        16.666667), ), ((40.0, 26.666667, 33.333333), ), ((42.5, 21.666667, 
        33.333333), ), ((41.666667, 25.0, 33.333333), ), ((42.5, 28.333333, 
        33.333333), ), ((47.5, 21.666667, 33.333333), ), ((48.333333, 25.0, 
        33.333333), ), ((47.5, 28.333333, 33.333333), ), ((45.416667, 27.5, 
        33.333333), ), ((47.083333, 25.833333, 33.333333), ), ((46.666667, 
        23.333333, 33.333333), ), ((44.583333, 22.5, 33.333333), ), ((
        42.916667, 24.166667, 33.333333), ), ((43.333333, 26.666667, 
        33.333333), ), ((6.666667, 30.0, 33.333333), ), ((0.0, 33.333333, 
        16.666667), ), ((0.0, 36.666667, 33.333333), ), ((2.5, 31.666667, 
        33.333333), ), ((1.666667, 35.0, 33.333333), ), ((2.5, 38.333333, 
        33.333333), ), ((7.5, 31.666667, 33.333333), ), ((8.333333, 35.0, 
        33.333333), ), ((7.5, 38.333333, 33.333333), ), ((5.416667, 37.5, 
        33.333333), ), ((7.083333, 35.833333, 33.333333), ), ((6.666667, 
        33.333333, 33.333333), ), ((4.583333, 32.5, 33.333333), ), ((2.916667, 
        34.166667, 33.333333), ), ((3.333333, 36.666667, 33.333333), ), ((
        16.666667, 30.0, 33.333333), ), ((10.0, 33.333333, 16.666667), ), ((
        10.0, 36.666667, 33.333333), ), ((12.5, 31.666667, 33.333333), ), ((
        11.666667, 35.0, 33.333333), ), ((12.5, 38.333333, 33.333333), ), ((
        17.5, 31.666667, 33.333333), ), ((18.333333, 35.0, 33.333333), ), ((
        17.5, 38.333333, 33.333333), ))+f.findAt(((15.416667, 37.5, 33.333333), 
        ), ((17.083333, 35.833333, 33.333333), ), ((16.666667, 33.333333, 
        33.333333), ), ((14.583333, 32.5, 33.333333), ), ((12.916667, 
        34.166667, 33.333333), ), ((13.333333, 36.666667, 33.333333), ), ((
        26.666667, 30.0, 33.333333), ), ((20.0, 33.333333, 16.666667), ), ((
        20.0, 36.666667, 33.333333), ), ((22.5, 31.666667, 33.333333), ), ((
        21.666667, 35.0, 33.333333), ), ((22.5, 38.333333, 33.333333), ), ((
        27.5, 31.666667, 33.333333), ), ((28.333333, 35.0, 33.333333), ), ((
        27.5, 38.333333, 33.333333), ), ((25.416667, 37.5, 33.333333), ), ((
        27.083333, 35.833333, 33.333333), ), ((26.666667, 33.333333, 
        33.333333), ), ((24.583333, 32.5, 33.333333), ), ((22.916667, 
        34.166667, 33.333333), ), ((23.333333, 36.666667, 33.333333), ), ((
        36.666667, 30.0, 33.333333), ), ((30.0, 33.333333, 16.666667), ), ((
        30.0, 36.666667, 33.333333), ), ((32.5, 31.666667, 33.333333), ), ((
        31.666667, 35.0, 33.333333), ), ((32.5, 38.333333, 33.333333), ), ((
        37.5, 31.666667, 33.333333), ), ((38.333333, 35.0, 33.333333), ), ((
        37.5, 38.333333, 33.333333), ), ((35.416667, 37.5, 33.333333), ), ((
        37.083333, 35.833333, 33.333333), ), ((36.666667, 33.333333, 
        33.333333), ), ((34.583333, 32.5, 33.333333), ), ((32.916667, 
        34.166667, 33.333333), ), ((33.333333, 36.666667, 33.333333), ), ((
        46.666667, 30.0, 33.333333), ), ((50.0, 36.666667, 16.666667), ), ((
        50.0, 33.333333, 33.333333), ), ((40.0, 33.333333, 16.666667), ), ((
        40.0, 36.666667, 33.333333), ), ((42.5, 31.666667, 33.333333), ), ((
        41.666667, 35.0, 33.333333), ), ((42.5, 38.333333, 33.333333), ), ((
        47.5, 31.666667, 33.333333), ), ((48.333333, 35.0, 33.333333), ), ((
        47.5, 38.333333, 33.333333), ), ((45.416667, 37.5, 33.333333), ), ((
        47.083333, 35.833333, 33.333333), ), ((46.666667, 33.333333, 
        33.333333), ), ((44.583333, 32.5, 33.333333), ), ((42.916667, 
        34.166667, 33.333333), ), ((43.333333, 36.666667, 33.333333), ), ((
        6.666667, 40.0, 33.333333), ), ((0.0, 43.333333, 16.666667), ), ((0.0, 
        46.666667, 33.333333), ), ((2.5, 41.666667, 33.333333), ), ((1.666667, 
        45.0, 33.333333), ), ((2.5, 48.333333, 33.333333), ), ((7.5, 41.666667, 
        33.333333), ), ((8.333333, 45.0, 33.333333), ), ((7.5, 48.333333, 
        33.333333), ), ((5.416667, 47.5, 33.333333), ), ((7.083333, 45.833333, 
        33.333333), ), ((6.666667, 43.333333, 33.333333), ), ((4.583333, 42.5, 
        33.333333), ), ((2.916667, 44.166667, 33.333333), ), ((3.333333, 
        46.666667, 33.333333), ), ((16.666667, 40.0, 33.333333), ), ((10.0, 
        43.333333, 16.666667), ), ((10.0, 46.666667, 33.333333), ), ((12.5, 
        41.666667, 33.333333), ), ((11.666667, 45.0, 33.333333), ), ((12.5, 
        48.333333, 33.333333), ), ((17.5, 41.666667, 33.333333), ), ((
        18.333333, 45.0, 33.333333), ), ((17.5, 48.333333, 33.333333), ), ((
        15.416667, 47.5, 33.333333), ), ((17.083333, 45.833333, 33.333333), ), 
        ((16.666667, 43.333333, 33.333333), ), ((14.583333, 42.5, 33.333333), 
        ), ((12.916667, 44.166667, 33.333333), ), ((13.333333, 46.666667, 
        33.333333), ), ((26.666667, 40.0, 33.333333), ), ((20.0, 43.333333, 
        16.666667), ), ((20.0, 46.666667, 33.333333), ), ((22.5, 41.666667, 
        33.333333), ), ((21.666667, 45.0, 33.333333), ), ((22.5, 48.333333, 
        33.333333), ), ((27.5, 41.666667, 33.333333), ), ((28.333333, 45.0, 
        33.333333), ), ((27.5, 48.333333, 33.333333), ), ((25.416667, 47.5, 
        33.333333), ), ((27.083333, 45.833333, 33.333333), ), ((26.666667, 
        43.333333, 33.333333), ), ((24.583333, 42.5, 33.333333), ), ((
        22.916667, 44.166667, 33.333333), ), ((23.333333, 46.666667, 
        33.333333), ), ((36.666667, 40.0, 33.333333), ), ((30.0, 43.333333, 
        16.666667), ), ((30.0, 46.666667, 33.333333), ), ((32.5, 41.666667, 
        33.333333), ), ((31.666667, 45.0, 33.333333), ), ((32.5, 48.333333, 
        33.333333), ), ((37.5, 41.666667, 33.333333), ), ((38.333333, 45.0, 
        33.333333), ), ((37.5, 48.333333, 33.333333), ), ((35.416667, 47.5, 
        33.333333), ), ((37.083333, 45.833333, 33.333333), ), ((36.666667, 
        43.333333, 33.333333), ), ((34.583333, 42.5, 33.333333), ), ((
        32.916667, 44.166667, 33.333333), ), ((33.333333, 46.666667, 
        33.333333), ), ((46.666667, 40.0, 33.333333), ), ((50.0, 46.666667, 
        16.666667), ), ((50.0, 43.333333, 33.333333), ), ((40.0, 43.333333, 
        16.666667), ), ((40.0, 46.666667, 33.333333), ), ((42.5, 41.666667, 
        33.333333), ), ((41.666667, 45.0, 33.333333), ), ((42.5, 48.333333, 
        33.333333), ), ((47.5, 41.666667, 33.333333), ), ((48.333333, 45.0, 
        33.333333), ), ((47.5, 48.333333, 33.333333), ), ((45.416667, 47.5, 
        33.333333), ), ((47.083333, 45.833333, 33.333333), ), ((46.666667, 
        43.333333, 33.333333), ), ((44.583333, 42.5, 33.333333), ), ((
        42.916667, 44.166667, 33.333333), ), ((43.333333, 46.666667, 
        33.333333), ), ((6.666667, 50.0, 33.333333), ), ((0.0, 53.333333, 
        16.666667), ), ((0.0, 56.666667, 33.333333), ), ((2.5, 51.666667, 
        33.333333), ), ((1.666667, 55.0, 33.333333), ), ((2.5, 58.333333, 
        33.333333), ), ((7.5, 51.666667, 33.333333), ), ((8.333333, 55.0, 
        33.333333), ), ((7.5, 58.333333, 33.333333), ), ((5.416667, 57.5, 
        33.333333), ), ((7.083333, 55.833333, 33.333333), ), ((6.666667, 
        53.333333, 33.333333), ), ((4.583333, 52.5, 33.333333), ), ((2.916667, 
        54.166667, 33.333333), ), ((3.333333, 56.666667, 33.333333), ), ((
        16.666667, 50.0, 33.333333), ), ((10.0, 53.333333, 16.666667), ), ((
        10.0, 56.666667, 33.333333), ), ((12.5, 51.666667, 33.333333), ), ((
        11.666667, 55.0, 33.333333), ), ((12.5, 58.333333, 33.333333), ), ((
        17.5, 51.666667, 33.333333), ), ((18.333333, 55.0, 33.333333), ), ((
        17.5, 58.333333, 33.333333), ), ((15.416667, 57.5, 33.333333), ), ((
        17.083333, 55.833333, 33.333333), ), ((16.666667, 53.333333, 
        33.333333), ), ((14.583333, 52.5, 33.333333), ), ((12.916667, 
        54.166667, 33.333333), ), ((13.333333, 56.666667, 33.333333), ), ((
        26.666667, 50.0, 33.333333), ), ((20.0, 53.333333, 16.666667), ), ((
        20.0, 56.666667, 33.333333), ), ((22.5, 51.666667, 33.333333), ), ((
        21.666667, 55.0, 33.333333), ), ((22.5, 58.333333, 33.333333), ), ((
        27.5, 51.666667, 33.333333), ), ((28.333333, 55.0, 33.333333), ), ((
        27.5, 58.333333, 33.333333), ), ((25.416667, 57.5, 33.333333), ), ((
        27.083333, 55.833333, 33.333333), ), ((26.666667, 53.333333, 
        33.333333), ), ((24.583333, 52.5, 33.333333), ), ((22.916667, 
        54.166667, 33.333333), ), ((23.333333, 56.666667, 33.333333), ), ((
        36.666667, 50.0, 33.333333), ), ((30.0, 53.333333, 16.666667), ), ((
        30.0, 56.666667, 33.333333), ), ((32.5, 51.666667, 33.333333), ), ((
        31.666667, 55.0, 33.333333), ), ((32.5, 58.333333, 33.333333), ), ((
        37.5, 51.666667, 33.333333), ), ((38.333333, 55.0, 33.333333), ), ((
        37.5, 58.333333, 33.333333), ), ((35.416667, 57.5, 33.333333), ), ((
        37.083333, 55.833333, 33.333333), ), ((36.666667, 53.333333, 
        33.333333), ), ((34.583333, 52.5, 33.333333), ), ((32.916667, 
        54.166667, 33.333333), ), ((33.333333, 56.666667, 33.333333), ), ((
        46.666667, 50.0, 33.333333), ), ((50.0, 56.666667, 16.666667), ), ((
        50.0, 53.333333, 33.333333), ), ((40.0, 53.333333, 16.666667), ), ((
        40.0, 56.666667, 33.333333), ), ((42.5, 51.666667, 33.333333), ), ((
        41.666667, 55.0, 33.333333), ), ((42.5, 58.333333, 33.333333), ), ((
        47.5, 51.666667, 33.333333), ), ((48.333333, 55.0, 33.333333), ), ((
        47.5, 58.333333, 33.333333), ), ((45.416667, 57.5, 33.333333), ), ((
        47.083333, 55.833333, 33.333333), ), ((46.666667, 53.333333, 
        33.333333), ), ((44.583333, 52.5, 33.333333), ), ((42.916667, 
        54.166667, 33.333333), ), ((43.333333, 56.666667, 33.333333), ), ((
        6.666667, 60.0, 33.333333), ), ((0.0, 63.333333, 16.666667), ), ((0.0, 
        66.666667, 33.333333), ), ((2.5, 61.666667, 33.333333), ), ((1.666667, 
        65.0, 33.333333), ), ((2.5, 68.333333, 33.333333), ), ((7.5, 61.666667, 
        33.333333), ), ((8.333333, 65.0, 33.333333), ), ((7.5, 68.333333, 
        33.333333), ), ((5.416667, 67.5, 33.333333), ), ((7.083333, 65.833333, 
        33.333333), ), ((6.666667, 63.333333, 33.333333), ), ((4.583333, 62.5, 
        33.333333), ), ((2.916667, 64.166667, 33.333333), ), ((3.333333, 
        66.666667, 33.333333), ), ((16.666667, 60.0, 33.333333), ), ((10.0, 
        63.333333, 16.666667), ), ((10.0, 66.666667, 33.333333), ), ((12.5, 
        61.666667, 33.333333), ), ((11.666667, 65.0, 33.333333), ), ((12.5, 
        68.333333, 33.333333), ), ((17.5, 61.666667, 33.333333), ), ((
        18.333333, 65.0, 33.333333), ), ((17.5, 68.333333, 33.333333), ), ((
        15.416667, 67.5, 33.333333), ), ((17.083333, 65.833333, 33.333333), ), 
        ((16.666667, 63.333333, 33.333333), ), ((14.583333, 62.5, 33.333333), 
        ), ((12.916667, 64.166667, 33.333333), ), ((13.333333, 66.666667, 
        33.333333), ), ((26.666667, 60.0, 33.333333), ), ((20.0, 63.333333, 
        16.666667), ), ((20.0, 66.666667, 33.333333), ), ((22.5, 61.666667, 
        33.333333), ), ((21.666667, 65.0, 33.333333), ), ((22.5, 68.333333, 
        33.333333), ), ((27.5, 61.666667, 33.333333), ), ((28.333333, 65.0, 
        33.333333), ), ((27.5, 68.333333, 33.333333), ), ((25.416667, 67.5, 
        33.333333), ), ((27.083333, 65.833333, 33.333333), ), ((26.666667, 
        63.333333, 33.333333), ), ((24.583333, 62.5, 33.333333), ), ((
        22.916667, 64.166667, 33.333333), ), ((23.333333, 66.666667, 
        33.333333), ), ((36.666667, 60.0, 33.333333), ), ((30.0, 63.333333, 
        16.666667), ), ((30.0, 66.666667, 33.333333), ))+f.findAt(((32.5, 
        61.666667, 33.333333), ), ((31.666667, 65.0, 33.333333), ), ((32.5, 
        68.333333, 33.333333), ), ((37.5, 61.666667, 33.333333), ), ((
        38.333333, 65.0, 33.333333), ), ((37.5, 68.333333, 33.333333), ), ((
        35.416667, 67.5, 33.333333), ), ((37.083333, 65.833333, 33.333333), ), 
        ((36.666667, 63.333333, 33.333333), ), ((34.583333, 62.5, 33.333333), 
        ), ((32.916667, 64.166667, 33.333333), ), ((33.333333, 66.666667, 
        33.333333), ), ((46.666667, 60.0, 33.333333), ), ((50.0, 66.666667, 
        16.666667), ), ((50.0, 63.333333, 33.333333), ), ((40.0, 63.333333, 
        16.666667), ), ((40.0, 66.666667, 33.333333), ), ((42.5, 61.666667, 
        33.333333), ), ((41.666667, 65.0, 33.333333), ), ((42.5, 68.333333, 
        33.333333), ), ((47.5, 61.666667, 33.333333), ), ((48.333333, 65.0, 
        33.333333), ), ((47.5, 68.333333, 33.333333), ), ((45.416667, 67.5, 
        33.333333), ), ((47.083333, 65.833333, 33.333333), ), ((46.666667, 
        63.333333, 33.333333), ), ((44.583333, 62.5, 33.333333), ), ((
        42.916667, 64.166667, 33.333333), ), ((43.333333, 66.666667, 
        33.333333), ), ((6.666667, 70.0, 33.333333), ), ((0.0, 73.333333, 
        16.666667), ), ((0.0, 76.666667, 33.333333), ), ((2.5, 71.666667, 
        33.333333), ), ((1.666667, 75.0, 33.333333), ), ((2.5, 78.333333, 
        33.333333), ), ((7.5, 71.666667, 33.333333), ), ((8.333333, 75.0, 
        33.333333), ), ((7.5, 78.333333, 33.333333), ), ((5.416667, 77.5, 
        33.333333), ), ((7.083333, 75.833333, 33.333333), ), ((6.666667, 
        73.333333, 33.333333), ), ((4.583333, 72.5, 33.333333), ), ((2.916667, 
        74.166667, 33.333333), ), ((3.333333, 76.666667, 33.333333), ), ((
        16.666667, 70.0, 33.333333), ), ((10.0, 73.333333, 16.666667), ), ((
        10.0, 76.666667, 33.333333), ), ((12.5, 71.666667, 33.333333), ), ((
        11.666667, 75.0, 33.333333), ), ((12.5, 78.333333, 33.333333), ), ((
        17.5, 71.666667, 33.333333), ), ((18.333333, 75.0, 33.333333), ), ((
        17.5, 78.333333, 33.333333), ), ((15.416667, 77.5, 33.333333), ), ((
        17.083333, 75.833333, 33.333333), ), ((16.666667, 73.333333, 
        33.333333), ), ((14.583333, 72.5, 33.333333), ), ((12.916667, 
        74.166667, 33.333333), ), ((13.333333, 76.666667, 33.333333), ), ((
        26.666667, 70.0, 33.333333), ), ((20.0, 73.333333, 16.666667), ), ((
        20.0, 76.666667, 33.333333), ), ((22.5, 71.666667, 33.333333), ), ((
        21.666667, 75.0, 33.333333), ), ((22.5, 78.333333, 33.333333), ), ((
        27.5, 71.666667, 33.333333), ), ((28.333333, 75.0, 33.333333), ), ((
        27.5, 78.333333, 33.333333), ), ((25.416667, 77.5, 33.333333), ), ((
        27.083333, 75.833333, 33.333333), ), ((26.666667, 73.333333, 
        33.333333), ), ((24.583333, 72.5, 33.333333), ), ((22.916667, 
        74.166667, 33.333333), ), ((23.333333, 76.666667, 33.333333), ), ((
        36.666667, 70.0, 33.333333), ), ((30.0, 73.333333, 16.666667), ), ((
        30.0, 76.666667, 33.333333), ), ((32.5, 71.666667, 33.333333), ), ((
        31.666667, 75.0, 33.333333), ), ((32.5, 78.333333, 33.333333), ), ((
        37.5, 71.666667, 33.333333), ), ((38.333333, 75.0, 33.333333), ), ((
        37.5, 78.333333, 33.333333), ), ((35.416667, 77.5, 33.333333), ), ((
        37.083333, 75.833333, 33.333333), ), ((36.666667, 73.333333, 
        33.333333), ), ((34.583333, 72.5, 33.333333), ), ((32.916667, 
        74.166667, 33.333333), ), ((33.333333, 76.666667, 33.333333), ), ((
        46.666667, 70.0, 33.333333), ), ((50.0, 76.666667, 16.666667), ), ((
        50.0, 73.333333, 33.333333), ), ((40.0, 73.333333, 16.666667), ), ((
        40.0, 76.666667, 33.333333), ), ((42.5, 71.666667, 33.333333), ), ((
        41.666667, 75.0, 33.333333), ), ((42.5, 78.333333, 33.333333), ), ((
        47.5, 71.666667, 33.333333), ), ((48.333333, 75.0, 33.333333), ), ((
        47.5, 78.333333, 33.333333), ), ((45.416667, 77.5, 33.333333), ), ((
        47.083333, 75.833333, 33.333333), ), ((46.666667, 73.333333, 
        33.333333), ), ((44.583333, 72.5, 33.333333), ), ((42.916667, 
        74.166667, 33.333333), ), ((43.333333, 76.666667, 33.333333), ), ((
        6.666667, 80.0, 33.333333), ), ((0.0, 83.333333, 16.666667), ), ((0.0, 
        86.666667, 33.333333), ), ((2.5, 81.666667, 33.333333), ), ((1.666667, 
        85.0, 33.333333), ), ((2.5, 88.333333, 33.333333), ), ((7.5, 81.666667, 
        33.333333), ), ((8.333333, 85.0, 33.333333), ), ((7.5, 88.333333, 
        33.333333), ), ((5.416667, 87.5, 33.333333), ), ((7.083333, 85.833333, 
        33.333333), ), ((6.666667, 83.333333, 33.333333), ), ((4.583333, 82.5, 
        33.333333), ), ((2.916667, 84.166667, 33.333333), ), ((3.333333, 
        86.666667, 33.333333), ), ((16.666667, 80.0, 33.333333), ), ((10.0, 
        83.333333, 16.666667), ), ((10.0, 86.666667, 33.333333), ), ((12.5, 
        81.666667, 33.333333), ), ((11.666667, 85.0, 33.333333), ), ((12.5, 
        88.333333, 33.333333), ), ((17.5, 81.666667, 33.333333), ), ((
        18.333333, 85.0, 33.333333), ), ((17.5, 88.333333, 33.333333), ), ((
        15.416667, 87.5, 33.333333), ), ((17.083333, 85.833333, 33.333333), ), 
        ((16.666667, 83.333333, 33.333333), ), ((14.583333, 82.5, 33.333333), 
        ), ((12.916667, 84.166667, 33.333333), ), ((13.333333, 86.666667, 
        33.333333), ), ((26.666667, 80.0, 33.333333), ), ((20.0, 83.333333, 
        16.666667), ), ((20.0, 86.666667, 33.333333), ), ((22.5, 81.666667, 
        33.333333), ), ((21.666667, 85.0, 33.333333), ), ((22.5, 88.333333, 
        33.333333), ), ((27.5, 81.666667, 33.333333), ), ((28.333333, 85.0, 
        33.333333), ), ((27.5, 88.333333, 33.333333), ), ((25.416667, 87.5, 
        33.333333), ), ((27.083333, 85.833333, 33.333333), ), ((26.666667, 
        83.333333, 33.333333), ), ((24.583333, 82.5, 33.333333), ), ((
        22.916667, 84.166667, 33.333333), ), ((23.333333, 86.666667, 
        33.333333), ), ((36.666667, 80.0, 33.333333), ), ((30.0, 83.333333, 
        16.666667), ), ((30.0, 86.666667, 33.333333), ), ((32.5, 81.666667, 
        33.333333), ), ((31.666667, 85.0, 33.333333), ), ((32.5, 88.333333, 
        33.333333), ), ((37.5, 81.666667, 33.333333), ), ((38.333333, 85.0, 
        33.333333), ), ((37.5, 88.333333, 33.333333), ), ((35.416667, 87.5, 
        33.333333), ), ((37.083333, 85.833333, 33.333333), ), ((36.666667, 
        83.333333, 33.333333), ), ((34.583333, 82.5, 33.333333), ), ((
        32.916667, 84.166667, 33.333333), ), ((33.333333, 86.666667, 
        33.333333), ), ((46.666667, 80.0, 33.333333), ), ((50.0, 86.666667, 
        16.666667), ), ((50.0, 83.333333, 33.333333), ), ((40.0, 83.333333, 
        16.666667), ), ((40.0, 86.666667, 33.333333), ), ((42.5, 81.666667, 
        33.333333), ), ((41.666667, 85.0, 33.333333), ), ((42.5, 88.333333, 
        33.333333), ), ((47.5, 81.666667, 33.333333), ), ((48.333333, 85.0, 
        33.333333), ), ((47.5, 88.333333, 33.333333), ), ((45.416667, 87.5, 
        33.333333), ), ((47.083333, 85.833333, 33.333333), ), ((46.666667, 
        83.333333, 33.333333), ), ((44.583333, 82.5, 33.333333), ), ((
        42.916667, 84.166667, 33.333333), ), ((43.333333, 86.666667, 
        33.333333), ), ((6.666667, 90.0, 33.333333), ), ((3.333333, 100.0, 
        33.333333), ), ((0.0, 93.333333, 16.666667), ), ((0.0, 96.666667, 
        33.333333), ), ((2.5, 91.666667, 33.333333), ), ((1.666667, 95.0, 
        33.333333), ), ((2.5, 98.333333, 33.333333), ), ((7.5, 91.666667, 
        33.333333), ), ((8.333333, 95.0, 33.333333), ), ((7.5, 98.333333, 
        33.333333), ), ((5.416667, 97.5, 33.333333), ), ((7.083333, 95.833333, 
        33.333333), ), ((6.666667, 93.333333, 33.333333), ), ((4.583333, 92.5, 
        33.333333), ), ((2.916667, 94.166667, 33.333333), ), ((3.333333, 
        96.666667, 33.333333), ), ((16.666667, 90.0, 33.333333), ), ((
        13.333333, 100.0, 33.333333), ), ((10.0, 93.333333, 16.666667), ), ((
        10.0, 96.666667, 33.333333), ), ((12.5, 91.666667, 33.333333), ), ((
        11.666667, 95.0, 33.333333), ), ((12.5, 98.333333, 33.333333), ), ((
        17.5, 91.666667, 33.333333), ), ((18.333333, 95.0, 33.333333), ), ((
        17.5, 98.333333, 33.333333), ), ((15.416667, 97.5, 33.333333), ), ((
        17.083333, 95.833333, 33.333333), ), ((16.666667, 93.333333, 
        33.333333), ), ((14.583333, 92.5, 33.333333), ), ((12.916667, 
        94.166667, 33.333333), ), ((13.333333, 96.666667, 33.333333), ), ((
        26.666667, 90.0, 33.333333), ), ((23.333333, 100.0, 33.333333), ), ((
        20.0, 93.333333, 16.666667), ), ((20.0, 96.666667, 33.333333), ), ((
        22.5, 91.666667, 33.333333), ), ((21.666667, 95.0, 33.333333), ), ((
        22.5, 98.333333, 33.333333), ), ((27.5, 91.666667, 33.333333), ), ((
        28.333333, 95.0, 33.333333), ), ((27.5, 98.333333, 33.333333), ), ((
        25.416667, 97.5, 33.333333), ), ((27.083333, 95.833333, 33.333333), ), 
        ((26.666667, 93.333333, 33.333333), ), ((24.583333, 92.5, 33.333333), 
        ), ((22.916667, 94.166667, 33.333333), ), ((23.333333, 96.666667, 
        33.333333), ), ((36.666667, 90.0, 33.333333), ), ((33.333333, 100.0, 
        33.333333), ), ((30.0, 93.333333, 16.666667), ), ((30.0, 96.666667, 
        33.333333), ), ((32.5, 91.666667, 33.333333), ), ((31.666667, 95.0, 
        33.333333), ), ((32.5, 98.333333, 33.333333), ), ((37.5, 91.666667, 
        33.333333), ), ((38.333333, 95.0, 33.333333), ), ((37.5, 98.333333, 
        33.333333), ), ((35.416667, 97.5, 33.333333), ), ((37.083333, 
        95.833333, 33.333333), ), ((36.666667, 93.333333, 33.333333), ), ((
        34.583333, 92.5, 33.333333), ), ((32.916667, 94.166667, 33.333333), ), 
        ((33.333333, 96.666667, 33.333333), ), ((46.666667, 90.0, 33.333333), 
        ), ((50.0, 96.666667, 16.666667), ), ((50.0, 93.333333, 33.333333), ), 
        ((43.333333, 100.0, 33.333333), ), ((40.0, 93.333333, 16.666667), ), ((
        40.0, 96.666667, 33.333333), ), ((42.5, 91.666667, 33.333333), ), ((
        41.666667, 95.0, 33.333333), ))+f.findAt(((42.5, 98.333333, 33.333333), 
        ), ((47.5, 91.666667, 33.333333), ), ((48.333333, 95.0, 33.333333), ), 
        ((47.5, 98.333333, 33.333333), ), ((45.416667, 97.5, 33.333333), ), ((
        47.083333, 95.833333, 33.333333), ), ((46.666667, 93.333333, 
        33.333333), ), ((44.583333, 92.5, 33.333333), ), ((42.916667, 
        94.166667, 33.333333), ), ((43.333333, 96.666667, 33.333333), ))
	p.Set(faces=faces, name='ut100')
	
def ut150():
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((6.666667, 0.0, 33.333333), ), ((0.0, 3.333333, 16.666667), 
        ), ((0.0, 6.666667, 33.333333), ), ((2.5, 1.666667, 33.333333), ), ((
        1.666667, 5.0, 33.333333), ), ((2.5, 8.333333, 33.333333), ), ((7.5, 
        1.666667, 33.333333), ), ((8.333333, 5.0, 33.333333), ), ((7.5, 
        8.333333, 33.333333), ), ((5.416667, 7.5, 33.333333), ), ((7.083333, 
        5.833333, 33.333333), ), ((6.666667, 3.333333, 33.333333), ), ((
        4.583333, 2.5, 33.333333), ), ((2.916667, 4.166667, 33.333333), ), ((
        3.333333, 6.666667, 33.333333), ), ((16.666667, 0.0, 33.333333), ), ((
        10.0, 3.333333, 16.666667), ), ((10.0, 6.666667, 33.333333), ), ((12.5, 
        1.666667, 33.333333), ), ((11.666667, 5.0, 33.333333), ), ((12.5, 
        8.333333, 33.333333), ), ((17.5, 1.666667, 33.333333), ), ((18.333333, 
        5.0, 33.333333), ), ((17.5, 8.333333, 33.333333), ), ((15.416667, 7.5, 
        33.333333), ), ((17.083333, 5.833333, 33.333333), ), ((16.666667, 
        3.333333, 33.333333), ), ((14.583333, 2.5, 33.333333), ), ((12.916667, 
        4.166667, 33.333333), ), ((13.333333, 6.666667, 33.333333), ), ((
        26.666667, 0.0, 33.333333), ), ((20.0, 3.333333, 16.666667), ), ((20.0, 
        6.666667, 33.333333), ), ((22.5, 1.666667, 33.333333), ), ((21.666667, 
        5.0, 33.333333), ), ((22.5, 8.333333, 33.333333), ), ((27.5, 1.666667, 
        33.333333), ), ((28.333333, 5.0, 33.333333), ), ((27.5, 8.333333, 
        33.333333), ), ((25.416667, 7.5, 33.333333), ), ((27.083333, 5.833333, 
        33.333333), ), ((26.666667, 3.333333, 33.333333), ), ((24.583333, 2.5, 
        33.333333), ), ((22.916667, 4.166667, 33.333333), ), ((23.333333, 
        6.666667, 33.333333), ), ((36.666667, 0.0, 33.333333), ), ((30.0, 
        3.333333, 16.666667), ), ((30.0, 6.666667, 33.333333), ), ((32.5, 
        1.666667, 33.333333), ), ((31.666667, 5.0, 33.333333), ), ((32.5, 
        8.333333, 33.333333), ), ((37.5, 1.666667, 33.333333), ), ((38.333333, 
        5.0, 33.333333), ), ((37.5, 8.333333, 33.333333), ), ((35.416667, 7.5, 
        33.333333), ), ((37.083333, 5.833333, 33.333333), ), ((36.666667, 
        3.333333, 33.333333), ), ((34.583333, 2.5, 33.333333), ), ((32.916667, 
        4.166667, 33.333333), ), ((33.333333, 6.666667, 33.333333), ), ((
        46.666667, 0.0, 33.333333), ), ((50.0, 6.666667, 16.666667), ), ((50.0, 
        3.333333, 33.333333), ), ((40.0, 3.333333, 16.666667), ), ((40.0, 
        6.666667, 33.333333), ), ((42.5, 1.666667, 33.333333), ), ((41.666667, 
        5.0, 33.333333), ), ((42.5, 8.333333, 33.333333), ), ((47.5, 1.666667, 
        33.333333), ), ((48.333333, 5.0, 33.333333), ), ((47.5, 8.333333, 
        33.333333), ), ((45.416667, 7.5, 33.333333), ), ((47.083333, 5.833333, 
        33.333333), ), ((46.666667, 3.333333, 33.333333), ), ((44.583333, 2.5, 
        33.333333), ), ((42.916667, 4.166667, 33.333333), ), ((43.333333, 
        6.666667, 33.333333), ), ((6.666667, 10.0, 33.333333), ), ((0.0, 
        13.333333, 16.666667), ), ((0.0, 16.666667, 33.333333), ), ((2.5, 
        11.666667, 33.333333), ), ((1.666667, 15.0, 33.333333), ), ((2.5, 
        18.333333, 33.333333), ), ((7.5, 11.666667, 33.333333), ), ((8.333333, 
        15.0, 33.333333), ), ((7.5, 18.333333, 33.333333), ), ((5.416667, 17.5, 
        33.333333), ), ((7.083333, 15.833333, 33.333333), ), ((6.666667, 
        13.333333, 33.333333), ), ((4.583333, 12.5, 33.333333), ), ((2.916667, 
        14.166667, 33.333333), ), ((3.333333, 16.666667, 33.333333), ), ((
        16.666667, 10.0, 33.333333), ), ((10.0, 13.333333, 16.666667), ), ((
        10.0, 16.666667, 33.333333), ), ((12.5, 11.666667, 33.333333), ), ((
        11.666667, 15.0, 33.333333), ), ((12.5, 18.333333, 33.333333), ), ((
        17.5, 11.666667, 33.333333), ), ((18.333333, 15.0, 33.333333), ), ((
        17.5, 18.333333, 33.333333), ), ((15.416667, 17.5, 33.333333), ), ((
        17.083333, 15.833333, 33.333333), ), ((16.666667, 13.333333, 
        33.333333), ), ((14.583333, 12.5, 33.333333), ), ((12.916667, 
        14.166667, 33.333333), ), ((13.333333, 16.666667, 33.333333), ), ((
        26.666667, 10.0, 33.333333), ), ((20.0, 13.333333, 16.666667), ), ((
        20.0, 16.666667, 33.333333), ), ((22.5, 11.666667, 33.333333), ), ((
        21.666667, 15.0, 33.333333), ), ((22.5, 18.333333, 33.333333), ), ((
        27.5, 11.666667, 33.333333), ), ((28.333333, 15.0, 33.333333), ), ((
        27.5, 18.333333, 33.333333), ), ((25.416667, 17.5, 33.333333), ), ((
        27.083333, 15.833333, 33.333333), ), ((26.666667, 13.333333, 
        33.333333), ), ((24.583333, 12.5, 33.333333), ), ((22.916667, 
        14.166667, 33.333333), ), ((23.333333, 16.666667, 33.333333), ), ((
        36.666667, 10.0, 33.333333), ), ((30.0, 13.333333, 16.666667), ), ((
        30.0, 16.666667, 33.333333), ), ((32.5, 11.666667, 33.333333), ), ((
        31.666667, 15.0, 33.333333), ), ((32.5, 18.333333, 33.333333), ), ((
        37.5, 11.666667, 33.333333), ), ((38.333333, 15.0, 33.333333), ), ((
        37.5, 18.333333, 33.333333), ), ((35.416667, 17.5, 33.333333), ), ((
        37.083333, 15.833333, 33.333333), ), ((36.666667, 13.333333, 
        33.333333), ), ((34.583333, 12.5, 33.333333), ), ((32.916667, 
        14.166667, 33.333333), ), ((33.333333, 16.666667, 33.333333), ), ((
        46.666667, 10.0, 33.333333), ), ((50.0, 16.666667, 16.666667), ), ((
        50.0, 13.333333, 33.333333), ), ((40.0, 13.333333, 16.666667), ), ((
        40.0, 16.666667, 33.333333), ), ((42.5, 11.666667, 33.333333), ), ((
        41.666667, 15.0, 33.333333), ), ((42.5, 18.333333, 33.333333), ), ((
        47.5, 11.666667, 33.333333), ), ((48.333333, 15.0, 33.333333), ), ((
        47.5, 18.333333, 33.333333), ), ((45.416667, 17.5, 33.333333), ), ((
        47.083333, 15.833333, 33.333333), ), ((46.666667, 13.333333, 
        33.333333), ), ((44.583333, 12.5, 33.333333), ), ((42.916667, 
        14.166667, 33.333333), ), ((43.333333, 16.666667, 33.333333), ), ((
        6.666667, 20.0, 33.333333), ), ((0.0, 23.333333, 16.666667), ), ((0.0, 
        26.666667, 33.333333), ), ((2.5, 21.666667, 33.333333), ), ((1.666667, 
        25.0, 33.333333), ), ((2.5, 28.333333, 33.333333), ), ((7.5, 21.666667, 
        33.333333), ), ((8.333333, 25.0, 33.333333), ), ((7.5, 28.333333, 
        33.333333), ), ((5.416667, 27.5, 33.333333), ), ((7.083333, 25.833333, 
        33.333333), ), ((6.666667, 23.333333, 33.333333), ), ((4.583333, 22.5, 
        33.333333), ), ((2.916667, 24.166667, 33.333333), ), ((3.333333, 
        26.666667, 33.333333), ), ((16.666667, 20.0, 33.333333), ), ((10.0, 
        23.333333, 16.666667), ), ((10.0, 26.666667, 33.333333), ), ((12.5, 
        21.666667, 33.333333), ), ((11.666667, 25.0, 33.333333), ), ((12.5, 
        28.333333, 33.333333), ), ((17.5, 21.666667, 33.333333), ), ((
        18.333333, 25.0, 33.333333), ), ((17.5, 28.333333, 33.333333), ), ((
        15.416667, 27.5, 33.333333), ), ((17.083333, 25.833333, 33.333333), ), 
        ((16.666667, 23.333333, 33.333333), ), ((14.583333, 22.5, 33.333333), 
        ), ((12.916667, 24.166667, 33.333333), ), ((13.333333, 26.666667, 
        33.333333), ), ((26.666667, 20.0, 33.333333), ), ((20.0, 23.333333, 
        16.666667), ), ((20.0, 26.666667, 33.333333), ), ((22.5, 21.666667, 
        33.333333), ), ((21.666667, 25.0, 33.333333), ), ((22.5, 28.333333, 
        33.333333), ), ((27.5, 21.666667, 33.333333), ), ((28.333333, 25.0, 
        33.333333), ), ((27.5, 28.333333, 33.333333), ), ((25.416667, 27.5, 
        33.333333), ), ((27.083333, 25.833333, 33.333333), ), ((26.666667, 
        23.333333, 33.333333), ), ((24.583333, 22.5, 33.333333), ), ((
        22.916667, 24.166667, 33.333333), ), ((23.333333, 26.666667, 
        33.333333), ), ((36.666667, 20.0, 33.333333), ), ((30.0, 23.333333, 
        16.666667), ), ((30.0, 26.666667, 33.333333), ), ((32.5, 21.666667, 
        33.333333), ), ((31.666667, 25.0, 33.333333), ), ((32.5, 28.333333, 
        33.333333), ), ((37.5, 21.666667, 33.333333), ), ((38.333333, 25.0, 
        33.333333), ), ((37.5, 28.333333, 33.333333), ), ((35.416667, 27.5, 
        33.333333), ), ((37.083333, 25.833333, 33.333333), ), ((36.666667, 
        23.333333, 33.333333), ), ((34.583333, 22.5, 33.333333), ), ((
        32.916667, 24.166667, 33.333333), ), ((33.333333, 26.666667, 
        33.333333), ), ((46.666667, 20.0, 33.333333), ), ((50.0, 26.666667, 
        16.666667), ), ((50.0, 23.333333, 33.333333), ), ((40.0, 23.333333, 
        16.666667), ), ((40.0, 26.666667, 33.333333), ), ((42.5, 21.666667, 
        33.333333), ), ((41.666667, 25.0, 33.333333), ), ((42.5, 28.333333, 
        33.333333), ), ((47.5, 21.666667, 33.333333), ), ((48.333333, 25.0, 
        33.333333), ), ((47.5, 28.333333, 33.333333), ), ((45.416667, 27.5, 
        33.333333), ), ((47.083333, 25.833333, 33.333333), ), ((46.666667, 
        23.333333, 33.333333), ), ((44.583333, 22.5, 33.333333), ), ((
        42.916667, 24.166667, 33.333333), ), ((43.333333, 26.666667, 
        33.333333), ), ((6.666667, 30.0, 33.333333), ), ((0.0, 33.333333, 
        16.666667), ), ((0.0, 36.666667, 33.333333), ), ((2.5, 31.666667, 
        33.333333), ), ((1.666667, 35.0, 33.333333), ), ((2.5, 38.333333, 
        33.333333), ), ((7.5, 31.666667, 33.333333), ), ((8.333333, 35.0, 
        33.333333), ), ((7.5, 38.333333, 33.333333), ), ((5.416667, 37.5, 
        33.333333), ), ((7.083333, 35.833333, 33.333333), ), ((6.666667, 
        33.333333, 33.333333), ), ((4.583333, 32.5, 33.333333), ), ((2.916667, 
        34.166667, 33.333333), ), ((3.333333, 36.666667, 33.333333), ), ((
        16.666667, 30.0, 33.333333), ), ((10.0, 33.333333, 16.666667), ), ((
        10.0, 36.666667, 33.333333), ), ((12.5, 31.666667, 33.333333), ), ((
        11.666667, 35.0, 33.333333), ), ((12.5, 38.333333, 33.333333), ), ((
        17.5, 31.666667, 33.333333), ), ((18.333333, 35.0, 33.333333), ), ((
        17.5, 38.333333, 33.333333), ))+f.findAt(((15.416667, 37.5, 33.333333), 
        ), ((17.083333, 35.833333, 33.333333), ), ((16.666667, 33.333333, 
        33.333333), ), ((14.583333, 32.5, 33.333333), ), ((12.916667, 
        34.166667, 33.333333), ), ((13.333333, 36.666667, 33.333333), ), ((
        26.666667, 30.0, 33.333333), ), ((20.0, 33.333333, 16.666667), ), ((
        20.0, 36.666667, 33.333333), ), ((22.5, 31.666667, 33.333333), ), ((
        21.666667, 35.0, 33.333333), ), ((22.5, 38.333333, 33.333333), ), ((
        27.5, 31.666667, 33.333333), ), ((28.333333, 35.0, 33.333333), ), ((
        27.5, 38.333333, 33.333333), ), ((25.416667, 37.5, 33.333333), ), ((
        27.083333, 35.833333, 33.333333), ), ((26.666667, 33.333333, 
        33.333333), ), ((24.583333, 32.5, 33.333333), ), ((22.916667, 
        34.166667, 33.333333), ), ((23.333333, 36.666667, 33.333333), ), ((
        36.666667, 30.0, 33.333333), ), ((30.0, 33.333333, 16.666667), ), ((
        30.0, 36.666667, 33.333333), ), ((32.5, 31.666667, 33.333333), ), ((
        31.666667, 35.0, 33.333333), ), ((32.5, 38.333333, 33.333333), ), ((
        37.5, 31.666667, 33.333333), ), ((38.333333, 35.0, 33.333333), ), ((
        37.5, 38.333333, 33.333333), ), ((35.416667, 37.5, 33.333333), ), ((
        37.083333, 35.833333, 33.333333), ), ((36.666667, 33.333333, 
        33.333333), ), ((34.583333, 32.5, 33.333333), ), ((32.916667, 
        34.166667, 33.333333), ), ((33.333333, 36.666667, 33.333333), ), ((
        46.666667, 30.0, 33.333333), ), ((50.0, 36.666667, 16.666667), ), ((
        50.0, 33.333333, 33.333333), ), ((40.0, 33.333333, 16.666667), ), ((
        40.0, 36.666667, 33.333333), ), ((42.5, 31.666667, 33.333333), ), ((
        41.666667, 35.0, 33.333333), ), ((42.5, 38.333333, 33.333333), ), ((
        47.5, 31.666667, 33.333333), ), ((48.333333, 35.0, 33.333333), ), ((
        47.5, 38.333333, 33.333333), ), ((45.416667, 37.5, 33.333333), ), ((
        47.083333, 35.833333, 33.333333), ), ((46.666667, 33.333333, 
        33.333333), ), ((44.583333, 32.5, 33.333333), ), ((42.916667, 
        34.166667, 33.333333), ), ((43.333333, 36.666667, 33.333333), ), ((
        6.666667, 40.0, 33.333333), ), ((0.0, 43.333333, 16.666667), ), ((0.0, 
        46.666667, 33.333333), ), ((2.5, 41.666667, 33.333333), ), ((1.666667, 
        45.0, 33.333333), ), ((2.5, 48.333333, 33.333333), ), ((7.5, 41.666667, 
        33.333333), ), ((8.333333, 45.0, 33.333333), ), ((7.5, 48.333333, 
        33.333333), ), ((5.416667, 47.5, 33.333333), ), ((7.083333, 45.833333, 
        33.333333), ), ((6.666667, 43.333333, 33.333333), ), ((4.583333, 42.5, 
        33.333333), ), ((2.916667, 44.166667, 33.333333), ), ((3.333333, 
        46.666667, 33.333333), ), ((16.666667, 40.0, 33.333333), ), ((10.0, 
        43.333333, 16.666667), ), ((10.0, 46.666667, 33.333333), ), ((12.5, 
        41.666667, 33.333333), ), ((11.666667, 45.0, 33.333333), ), ((12.5, 
        48.333333, 33.333333), ), ((17.5, 41.666667, 33.333333), ), ((
        18.333333, 45.0, 33.333333), ), ((17.5, 48.333333, 33.333333), ), ((
        15.416667, 47.5, 33.333333), ), ((17.083333, 45.833333, 33.333333), ), 
        ((16.666667, 43.333333, 33.333333), ), ((14.583333, 42.5, 33.333333), 
        ), ((12.916667, 44.166667, 33.333333), ), ((13.333333, 46.666667, 
        33.333333), ), ((26.666667, 40.0, 33.333333), ), ((20.0, 43.333333, 
        16.666667), ), ((20.0, 46.666667, 33.333333), ), ((22.5, 41.666667, 
        33.333333), ), ((21.666667, 45.0, 33.333333), ), ((22.5, 48.333333, 
        33.333333), ), ((27.5, 41.666667, 33.333333), ), ((28.333333, 45.0, 
        33.333333), ), ((27.5, 48.333333, 33.333333), ), ((25.416667, 47.5, 
        33.333333), ), ((27.083333, 45.833333, 33.333333), ), ((26.666667, 
        43.333333, 33.333333), ), ((24.583333, 42.5, 33.333333), ), ((
        22.916667, 44.166667, 33.333333), ), ((23.333333, 46.666667, 
        33.333333), ), ((36.666667, 40.0, 33.333333), ), ((30.0, 43.333333, 
        16.666667), ), ((30.0, 46.666667, 33.333333), ), ((32.5, 41.666667, 
        33.333333), ), ((31.666667, 45.0, 33.333333), ), ((32.5, 48.333333, 
        33.333333), ), ((37.5, 41.666667, 33.333333), ), ((38.333333, 45.0, 
        33.333333), ), ((37.5, 48.333333, 33.333333), ), ((35.416667, 47.5, 
        33.333333), ), ((37.083333, 45.833333, 33.333333), ), ((36.666667, 
        43.333333, 33.333333), ), ((34.583333, 42.5, 33.333333), ), ((
        32.916667, 44.166667, 33.333333), ), ((33.333333, 46.666667, 
        33.333333), ), ((46.666667, 40.0, 33.333333), ), ((50.0, 46.666667, 
        16.666667), ), ((50.0, 43.333333, 33.333333), ), ((40.0, 43.333333, 
        16.666667), ), ((40.0, 46.666667, 33.333333), ), ((42.5, 41.666667, 
        33.333333), ), ((41.666667, 45.0, 33.333333), ), ((42.5, 48.333333, 
        33.333333), ), ((47.5, 41.666667, 33.333333), ), ((48.333333, 45.0, 
        33.333333), ), ((47.5, 48.333333, 33.333333), ), ((45.416667, 47.5, 
        33.333333), ), ((47.083333, 45.833333, 33.333333), ), ((46.666667, 
        43.333333, 33.333333), ), ((44.583333, 42.5, 33.333333), ), ((
        42.916667, 44.166667, 33.333333), ), ((43.333333, 46.666667, 
        33.333333), ), ((6.666667, 50.0, 33.333333), ), ((0.0, 53.333333, 
        16.666667), ), ((0.0, 56.666667, 33.333333), ), ((2.5, 51.666667, 
        33.333333), ), ((1.666667, 55.0, 33.333333), ), ((2.5, 58.333333, 
        33.333333), ), ((7.5, 51.666667, 33.333333), ), ((8.333333, 55.0, 
        33.333333), ), ((7.5, 58.333333, 33.333333), ), ((5.416667, 57.5, 
        33.333333), ), ((7.083333, 55.833333, 33.333333), ), ((6.666667, 
        53.333333, 33.333333), ), ((4.583333, 52.5, 33.333333), ), ((2.916667, 
        54.166667, 33.333333), ), ((3.333333, 56.666667, 33.333333), ), ((
        16.666667, 50.0, 33.333333), ), ((10.0, 53.333333, 16.666667), ), ((
        10.0, 56.666667, 33.333333), ), ((12.5, 51.666667, 33.333333), ), ((
        11.666667, 55.0, 33.333333), ), ((12.5, 58.333333, 33.333333), ), ((
        17.5, 51.666667, 33.333333), ), ((18.333333, 55.0, 33.333333), ), ((
        17.5, 58.333333, 33.333333), ), ((15.416667, 57.5, 33.333333), ), ((
        17.083333, 55.833333, 33.333333), ), ((16.666667, 53.333333, 
        33.333333), ), ((14.583333, 52.5, 33.333333), ), ((12.916667, 
        54.166667, 33.333333), ), ((13.333333, 56.666667, 33.333333), ), ((
        26.666667, 50.0, 33.333333), ), ((20.0, 53.333333, 16.666667), ), ((
        20.0, 56.666667, 33.333333), ), ((22.5, 51.666667, 33.333333), ), ((
        21.666667, 55.0, 33.333333), ), ((22.5, 58.333333, 33.333333), ), ((
        27.5, 51.666667, 33.333333), ), ((28.333333, 55.0, 33.333333), ), ((
        27.5, 58.333333, 33.333333), ), ((25.416667, 57.5, 33.333333), ), ((
        27.083333, 55.833333, 33.333333), ), ((26.666667, 53.333333, 
        33.333333), ), ((24.583333, 52.5, 33.333333), ), ((22.916667, 
        54.166667, 33.333333), ), ((23.333333, 56.666667, 33.333333), ), ((
        36.666667, 50.0, 33.333333), ), ((30.0, 53.333333, 16.666667), ), ((
        30.0, 56.666667, 33.333333), ), ((32.5, 51.666667, 33.333333), ), ((
        31.666667, 55.0, 33.333333), ), ((32.5, 58.333333, 33.333333), ), ((
        37.5, 51.666667, 33.333333), ), ((38.333333, 55.0, 33.333333), ), ((
        37.5, 58.333333, 33.333333), ), ((35.416667, 57.5, 33.333333), ), ((
        37.083333, 55.833333, 33.333333), ), ((36.666667, 53.333333, 
        33.333333), ), ((34.583333, 52.5, 33.333333), ), ((32.916667, 
        54.166667, 33.333333), ), ((33.333333, 56.666667, 33.333333), ), ((
        46.666667, 50.0, 33.333333), ), ((50.0, 56.666667, 16.666667), ), ((
        50.0, 53.333333, 33.333333), ), ((40.0, 53.333333, 16.666667), ), ((
        40.0, 56.666667, 33.333333), ), ((42.5, 51.666667, 33.333333), ), ((
        41.666667, 55.0, 33.333333), ), ((42.5, 58.333333, 33.333333), ), ((
        47.5, 51.666667, 33.333333), ), ((48.333333, 55.0, 33.333333), ), ((
        47.5, 58.333333, 33.333333), ), ((45.416667, 57.5, 33.333333), ), ((
        47.083333, 55.833333, 33.333333), ), ((46.666667, 53.333333, 
        33.333333), ), ((44.583333, 52.5, 33.333333), ), ((42.916667, 
        54.166667, 33.333333), ), ((43.333333, 56.666667, 33.333333), ), ((
        6.666667, 60.0, 33.333333), ), ((0.0, 63.333333, 16.666667), ), ((0.0, 
        66.666667, 33.333333), ), ((2.5, 61.666667, 33.333333), ), ((1.666667, 
        65.0, 33.333333), ), ((2.5, 68.333333, 33.333333), ), ((7.5, 61.666667, 
        33.333333), ), ((8.333333, 65.0, 33.333333), ), ((7.5, 68.333333, 
        33.333333), ), ((5.416667, 67.5, 33.333333), ), ((7.083333, 65.833333, 
        33.333333), ), ((6.666667, 63.333333, 33.333333), ), ((4.583333, 62.5, 
        33.333333), ), ((2.916667, 64.166667, 33.333333), ), ((3.333333, 
        66.666667, 33.333333), ), ((16.666667, 60.0, 33.333333), ), ((10.0, 
        63.333333, 16.666667), ), ((10.0, 66.666667, 33.333333), ), ((12.5, 
        61.666667, 33.333333), ), ((11.666667, 65.0, 33.333333), ), ((12.5, 
        68.333333, 33.333333), ), ((17.5, 61.666667, 33.333333), ), ((
        18.333333, 65.0, 33.333333), ), ((17.5, 68.333333, 33.333333), ), ((
        15.416667, 67.5, 33.333333), ), ((17.083333, 65.833333, 33.333333), ), 
        ((16.666667, 63.333333, 33.333333), ), ((14.583333, 62.5, 33.333333), 
        ), ((12.916667, 64.166667, 33.333333), ), ((13.333333, 66.666667, 
        33.333333), ), ((26.666667, 60.0, 33.333333), ), ((20.0, 63.333333, 
        16.666667), ), ((20.0, 66.666667, 33.333333), ), ((22.5, 61.666667, 
        33.333333), ), ((21.666667, 65.0, 33.333333), ), ((22.5, 68.333333, 
        33.333333), ), ((27.5, 61.666667, 33.333333), ), ((28.333333, 65.0, 
        33.333333), ), ((27.5, 68.333333, 33.333333), ), ((25.416667, 67.5, 
        33.333333), ), ((27.083333, 65.833333, 33.333333), ), ((26.666667, 
        63.333333, 33.333333), ), ((24.583333, 62.5, 33.333333), ), ((
        22.916667, 64.166667, 33.333333), ), ((23.333333, 66.666667, 
        33.333333), ), ((36.666667, 60.0, 33.333333), ), ((30.0, 63.333333, 
        16.666667), ), ((30.0, 66.666667, 33.333333), ))+f.findAt(((32.5, 
        61.666667, 33.333333), ), ((31.666667, 65.0, 33.333333), ), ((32.5, 
        68.333333, 33.333333), ), ((37.5, 61.666667, 33.333333), ), ((
        38.333333, 65.0, 33.333333), ), ((37.5, 68.333333, 33.333333), ), ((
        35.416667, 67.5, 33.333333), ), ((37.083333, 65.833333, 33.333333), ), 
        ((36.666667, 63.333333, 33.333333), ), ((34.583333, 62.5, 33.333333), 
        ), ((32.916667, 64.166667, 33.333333), ), ((33.333333, 66.666667, 
        33.333333), ), ((46.666667, 60.0, 33.333333), ), ((50.0, 66.666667, 
        16.666667), ), ((50.0, 63.333333, 33.333333), ), ((40.0, 63.333333, 
        16.666667), ), ((40.0, 66.666667, 33.333333), ), ((42.5, 61.666667, 
        33.333333), ), ((41.666667, 65.0, 33.333333), ), ((42.5, 68.333333, 
        33.333333), ), ((47.5, 61.666667, 33.333333), ), ((48.333333, 65.0, 
        33.333333), ), ((47.5, 68.333333, 33.333333), ), ((45.416667, 67.5, 
        33.333333), ), ((47.083333, 65.833333, 33.333333), ), ((46.666667, 
        63.333333, 33.333333), ), ((44.583333, 62.5, 33.333333), ), ((
        42.916667, 64.166667, 33.333333), ), ((43.333333, 66.666667, 
        33.333333), ), ((6.666667, 70.0, 33.333333), ), ((0.0, 73.333333, 
        16.666667), ), ((0.0, 76.666667, 33.333333), ), ((2.5, 71.666667, 
        33.333333), ), ((1.666667, 75.0, 33.333333), ), ((2.5, 78.333333, 
        33.333333), ), ((7.5, 71.666667, 33.333333), ), ((8.333333, 75.0, 
        33.333333), ), ((7.5, 78.333333, 33.333333), ), ((5.416667, 77.5, 
        33.333333), ), ((7.083333, 75.833333, 33.333333), ), ((6.666667, 
        73.333333, 33.333333), ), ((4.583333, 72.5, 33.333333), ), ((2.916667, 
        74.166667, 33.333333), ), ((3.333333, 76.666667, 33.333333), ), ((
        16.666667, 70.0, 33.333333), ), ((10.0, 73.333333, 16.666667), ), ((
        10.0, 76.666667, 33.333333), ), ((12.5, 71.666667, 33.333333), ), ((
        11.666667, 75.0, 33.333333), ), ((12.5, 78.333333, 33.333333), ), ((
        17.5, 71.666667, 33.333333), ), ((18.333333, 75.0, 33.333333), ), ((
        17.5, 78.333333, 33.333333), ), ((15.416667, 77.5, 33.333333), ), ((
        17.083333, 75.833333, 33.333333), ), ((16.666667, 73.333333, 
        33.333333), ), ((14.583333, 72.5, 33.333333), ), ((12.916667, 
        74.166667, 33.333333), ), ((13.333333, 76.666667, 33.333333), ), ((
        26.666667, 70.0, 33.333333), ), ((20.0, 73.333333, 16.666667), ), ((
        20.0, 76.666667, 33.333333), ), ((22.5, 71.666667, 33.333333), ), ((
        21.666667, 75.0, 33.333333), ), ((22.5, 78.333333, 33.333333), ), ((
        27.5, 71.666667, 33.333333), ), ((28.333333, 75.0, 33.333333), ), ((
        27.5, 78.333333, 33.333333), ), ((25.416667, 77.5, 33.333333), ), ((
        27.083333, 75.833333, 33.333333), ), ((26.666667, 73.333333, 
        33.333333), ), ((24.583333, 72.5, 33.333333), ), ((22.916667, 
        74.166667, 33.333333), ), ((23.333333, 76.666667, 33.333333), ), ((
        36.666667, 70.0, 33.333333), ), ((30.0, 73.333333, 16.666667), ), ((
        30.0, 76.666667, 33.333333), ), ((32.5, 71.666667, 33.333333), ), ((
        31.666667, 75.0, 33.333333), ), ((32.5, 78.333333, 33.333333), ), ((
        37.5, 71.666667, 33.333333), ), ((38.333333, 75.0, 33.333333), ), ((
        37.5, 78.333333, 33.333333), ), ((35.416667, 77.5, 33.333333), ), ((
        37.083333, 75.833333, 33.333333), ), ((36.666667, 73.333333, 
        33.333333), ), ((34.583333, 72.5, 33.333333), ), ((32.916667, 
        74.166667, 33.333333), ), ((33.333333, 76.666667, 33.333333), ), ((
        46.666667, 70.0, 33.333333), ), ((50.0, 76.666667, 16.666667), ), ((
        50.0, 73.333333, 33.333333), ), ((40.0, 73.333333, 16.666667), ), ((
        40.0, 76.666667, 33.333333), ), ((42.5, 71.666667, 33.333333), ), ((
        41.666667, 75.0, 33.333333), ), ((42.5, 78.333333, 33.333333), ), ((
        47.5, 71.666667, 33.333333), ), ((48.333333, 75.0, 33.333333), ), ((
        47.5, 78.333333, 33.333333), ), ((45.416667, 77.5, 33.333333), ), ((
        47.083333, 75.833333, 33.333333), ), ((46.666667, 73.333333, 
        33.333333), ), ((44.583333, 72.5, 33.333333), ), ((42.916667, 
        74.166667, 33.333333), ), ((43.333333, 76.666667, 33.333333), ), ((
        6.666667, 80.0, 33.333333), ), ((0.0, 83.333333, 16.666667), ), ((0.0, 
        86.666667, 33.333333), ), ((2.5, 81.666667, 33.333333), ), ((1.666667, 
        85.0, 33.333333), ), ((2.5, 88.333333, 33.333333), ), ((7.5, 81.666667, 
        33.333333), ), ((8.333333, 85.0, 33.333333), ), ((7.5, 88.333333, 
        33.333333), ), ((5.416667, 87.5, 33.333333), ), ((7.083333, 85.833333, 
        33.333333), ), ((6.666667, 83.333333, 33.333333), ), ((4.583333, 82.5, 
        33.333333), ), ((2.916667, 84.166667, 33.333333), ), ((3.333333, 
        86.666667, 33.333333), ), ((16.666667, 80.0, 33.333333), ), ((10.0, 
        83.333333, 16.666667), ), ((10.0, 86.666667, 33.333333), ), ((12.5, 
        81.666667, 33.333333), ), ((11.666667, 85.0, 33.333333), ), ((12.5, 
        88.333333, 33.333333), ), ((17.5, 81.666667, 33.333333), ), ((
        18.333333, 85.0, 33.333333), ), ((17.5, 88.333333, 33.333333), ), ((
        15.416667, 87.5, 33.333333), ), ((17.083333, 85.833333, 33.333333), ), 
        ((16.666667, 83.333333, 33.333333), ), ((14.583333, 82.5, 33.333333), 
        ), ((12.916667, 84.166667, 33.333333), ), ((13.333333, 86.666667, 
        33.333333), ), ((26.666667, 80.0, 33.333333), ), ((20.0, 83.333333, 
        16.666667), ), ((20.0, 86.666667, 33.333333), ), ((22.5, 81.666667, 
        33.333333), ), ((21.666667, 85.0, 33.333333), ), ((22.5, 88.333333, 
        33.333333), ), ((27.5, 81.666667, 33.333333), ), ((28.333333, 85.0, 
        33.333333), ), ((27.5, 88.333333, 33.333333), ), ((25.416667, 87.5, 
        33.333333), ), ((27.083333, 85.833333, 33.333333), ), ((26.666667, 
        83.333333, 33.333333), ), ((24.583333, 82.5, 33.333333), ), ((
        22.916667, 84.166667, 33.333333), ), ((23.333333, 86.666667, 
        33.333333), ), ((36.666667, 80.0, 33.333333), ), ((30.0, 83.333333, 
        16.666667), ), ((30.0, 86.666667, 33.333333), ), ((32.5, 81.666667, 
        33.333333), ), ((31.666667, 85.0, 33.333333), ), ((32.5, 88.333333, 
        33.333333), ), ((37.5, 81.666667, 33.333333), ), ((38.333333, 85.0, 
        33.333333), ), ((37.5, 88.333333, 33.333333), ), ((35.416667, 87.5, 
        33.333333), ), ((37.083333, 85.833333, 33.333333), ), ((36.666667, 
        83.333333, 33.333333), ), ((34.583333, 82.5, 33.333333), ), ((
        32.916667, 84.166667, 33.333333), ), ((33.333333, 86.666667, 
        33.333333), ), ((46.666667, 80.0, 33.333333), ), ((50.0, 86.666667, 
        16.666667), ), ((50.0, 83.333333, 33.333333), ), ((40.0, 83.333333, 
        16.666667), ), ((40.0, 86.666667, 33.333333), ), ((42.5, 81.666667, 
        33.333333), ), ((41.666667, 85.0, 33.333333), ), ((42.5, 88.333333, 
        33.333333), ), ((47.5, 81.666667, 33.333333), ), ((48.333333, 85.0, 
        33.333333), ), ((47.5, 88.333333, 33.333333), ), ((45.416667, 87.5, 
        33.333333), ), ((47.083333, 85.833333, 33.333333), ), ((46.666667, 
        83.333333, 33.333333), ), ((44.583333, 82.5, 33.333333), ), ((
        42.916667, 84.166667, 33.333333), ), ((43.333333, 86.666667, 
        33.333333), ), ((6.666667, 90.0, 33.333333), ), ((0.0, 93.333333, 
        16.666667), ), ((0.0, 96.666667, 33.333333), ), ((2.5, 91.666667, 
        33.333333), ), ((1.666667, 95.0, 33.333333), ), ((2.5, 98.333333, 
        33.333333), ), ((7.5, 91.666667, 33.333333), ), ((8.333333, 95.0, 
        33.333333), ), ((7.5, 98.333333, 33.333333), ), ((5.416667, 97.5, 
        33.333333), ), ((7.083333, 95.833333, 33.333333), ), ((6.666667, 
        93.333333, 33.333333), ), ((4.583333, 92.5, 33.333333), ), ((2.916667, 
        94.166667, 33.333333), ), ((3.333333, 96.666667, 33.333333), ), ((
        16.666667, 90.0, 33.333333), ), ((10.0, 93.333333, 16.666667), ), ((
        10.0, 96.666667, 33.333333), ), ((12.5, 91.666667, 33.333333), ), ((
        11.666667, 95.0, 33.333333), ), ((12.5, 98.333333, 33.333333), ), ((
        17.5, 91.666667, 33.333333), ), ((18.333333, 95.0, 33.333333), ), ((
        17.5, 98.333333, 33.333333), ), ((15.416667, 97.5, 33.333333), ), ((
        17.083333, 95.833333, 33.333333), ), ((16.666667, 93.333333, 
        33.333333), ), ((14.583333, 92.5, 33.333333), ), ((12.916667, 
        94.166667, 33.333333), ), ((13.333333, 96.666667, 33.333333), ), ((
        26.666667, 90.0, 33.333333), ), ((20.0, 93.333333, 16.666667), ), ((
        20.0, 96.666667, 33.333333), ), ((22.5, 91.666667, 33.333333), ), ((
        21.666667, 95.0, 33.333333), ), ((22.5, 98.333333, 33.333333), ), ((
        27.5, 91.666667, 33.333333), ), ((28.333333, 95.0, 33.333333), ), ((
        27.5, 98.333333, 33.333333), ), ((25.416667, 97.5, 33.333333), ), ((
        27.083333, 95.833333, 33.333333), ), ((26.666667, 93.333333, 
        33.333333), ), ((24.583333, 92.5, 33.333333), ), ((22.916667, 
        94.166667, 33.333333), ), ((23.333333, 96.666667, 33.333333), ), ((
        36.666667, 90.0, 33.333333), ), ((30.0, 93.333333, 16.666667), ), ((
        30.0, 96.666667, 33.333333), ), ((32.5, 91.666667, 33.333333), ), ((
        31.666667, 95.0, 33.333333), ), ((32.5, 98.333333, 33.333333), ), ((
        37.5, 91.666667, 33.333333), ), ((38.333333, 95.0, 33.333333), ), ((
        37.5, 98.333333, 33.333333), ), ((35.416667, 97.5, 33.333333), ), ((
        37.083333, 95.833333, 33.333333), ), ((36.666667, 93.333333, 
        33.333333), ), ((34.583333, 92.5, 33.333333), ), ((32.916667, 
        94.166667, 33.333333), ), ((33.333333, 96.666667, 33.333333), ), ((
        46.666667, 90.0, 33.333333), ), ((50.0, 96.666667, 16.666667), ), ((
        50.0, 93.333333, 33.333333), ), ((40.0, 93.333333, 16.666667), ), ((
        40.0, 96.666667, 33.333333), ), ((42.5, 91.666667, 33.333333), ), ((
        41.666667, 95.0, 33.333333), ), ((42.5, 98.333333, 33.333333), ), ((
        47.5, 91.666667, 33.333333), ), ((48.333333, 95.0, 33.333333), ), ((
        47.5, 98.333333, 33.333333), ), ((45.416667, 97.5, 33.333333), ))+\
        f.findAt(((47.083333, 95.833333, 33.333333), ), ((46.666667, 93.333333, 
        33.333333), ), ((44.583333, 92.5, 33.333333), ), ((42.916667, 
        94.166667, 33.333333), ), ((43.333333, 96.666667, 33.333333), ), ((
        6.666667, 100.0, 33.333333), ), ((0.0, 103.333333, 16.666667), ), ((
        0.0, 106.666667, 33.333333), ), ((2.5, 101.666667, 33.333333), ), ((
        1.666667, 105.0, 33.333333), ), ((2.5, 108.333333, 33.333333), ), ((
        7.5, 101.666667, 33.333333), ), ((8.333333, 105.0, 33.333333), ), ((
        7.5, 108.333333, 33.333333), ), ((5.416667, 107.5, 33.333333), ), ((
        7.083333, 105.833333, 33.333333), ), ((6.666667, 103.333333, 
        33.333333), ), ((4.583333, 102.5, 33.333333), ), ((2.916667, 
        104.166667, 33.333333), ), ((3.333333, 106.666667, 33.333333), ), ((
        16.666667, 100.0, 33.333333), ), ((10.0, 103.333333, 16.666667), ), ((
        10.0, 106.666667, 33.333333), ), ((12.5, 101.666667, 33.333333), ), ((
        11.666667, 105.0, 33.333333), ), ((12.5, 108.333333, 33.333333), ), ((
        17.5, 101.666667, 33.333333), ), ((18.333333, 105.0, 33.333333), ), ((
        17.5, 108.333333, 33.333333), ), ((15.416667, 107.5, 33.333333), ), ((
        17.083333, 105.833333, 33.333333), ), ((16.666667, 103.333333, 
        33.333333), ), ((14.583333, 102.5, 33.333333), ), ((12.916667, 
        104.166667, 33.333333), ), ((13.333333, 106.666667, 33.333333), ), ((
        26.666667, 100.0, 33.333333), ), ((20.0, 103.333333, 16.666667), ), ((
        20.0, 106.666667, 33.333333), ), ((22.5, 101.666667, 33.333333), ), ((
        21.666667, 105.0, 33.333333), ), ((22.5, 108.333333, 33.333333), ), ((
        27.5, 101.666667, 33.333333), ), ((28.333333, 105.0, 33.333333), ), ((
        27.5, 108.333333, 33.333333), ), ((25.416667, 107.5, 33.333333), ), ((
        27.083333, 105.833333, 33.333333), ), ((26.666667, 103.333333, 
        33.333333), ), ((24.583333, 102.5, 33.333333), ), ((22.916667, 
        104.166667, 33.333333), ), ((23.333333, 106.666667, 33.333333), ), ((
        36.666667, 100.0, 33.333333), ), ((30.0, 103.333333, 16.666667), ), ((
        30.0, 106.666667, 33.333333), ), ((32.5, 101.666667, 33.333333), ), ((
        31.666667, 105.0, 33.333333), ), ((32.5, 108.333333, 33.333333), ), ((
        37.5, 101.666667, 33.333333), ), ((38.333333, 105.0, 33.333333), ), ((
        37.5, 108.333333, 33.333333), ), ((35.416667, 107.5, 33.333333), ), ((
        37.083333, 105.833333, 33.333333), ), ((36.666667, 103.333333, 
        33.333333), ), ((34.583333, 102.5, 33.333333), ), ((32.916667, 
        104.166667, 33.333333), ), ((33.333333, 106.666667, 33.333333), ), ((
        46.666667, 100.0, 33.333333), ), ((50.0, 106.666667, 16.666667), ), ((
        50.0, 103.333333, 33.333333), ), ((40.0, 103.333333, 16.666667), ), ((
        40.0, 106.666667, 33.333333), ), ((42.5, 101.666667, 33.333333), ), ((
        41.666667, 105.0, 33.333333), ), ((42.5, 108.333333, 33.333333), ), ((
        47.5, 101.666667, 33.333333), ), ((48.333333, 105.0, 33.333333), ), ((
        47.5, 108.333333, 33.333333), ), ((45.416667, 107.5, 33.333333), ), ((
        47.083333, 105.833333, 33.333333), ), ((46.666667, 103.333333, 
        33.333333), ), ((44.583333, 102.5, 33.333333), ), ((42.916667, 
        104.166667, 33.333333), ), ((43.333333, 106.666667, 33.333333), ), ((
        6.666667, 110.0, 33.333333), ), ((0.0, 113.333333, 16.666667), ), ((
        0.0, 116.666667, 33.333333), ), ((2.5, 111.666667, 33.333333), ), ((
        1.666667, 115.0, 33.333333), ), ((2.5, 118.333333, 33.333333), ), ((
        7.5, 111.666667, 33.333333), ), ((8.333333, 115.0, 33.333333), ), ((
        7.5, 118.333333, 33.333333), ), ((5.416667, 117.5, 33.333333), ), ((
        7.083333, 115.833333, 33.333333), ), ((6.666667, 113.333333, 
        33.333333), ), ((4.583333, 112.5, 33.333333), ), ((2.916667, 
        114.166667, 33.333333), ), ((3.333333, 116.666667, 33.333333), ), ((
        16.666667, 110.0, 33.333333), ), ((10.0, 113.333333, 16.666667), ), ((
        10.0, 116.666667, 33.333333), ), ((12.5, 111.666667, 33.333333), ), ((
        11.666667, 115.0, 33.333333), ), ((12.5, 118.333333, 33.333333), ), ((
        17.5, 111.666667, 33.333333), ), ((18.333333, 115.0, 33.333333), ), ((
        17.5, 118.333333, 33.333333), ), ((15.416667, 117.5, 33.333333), ), ((
        17.083333, 115.833333, 33.333333), ), ((16.666667, 113.333333, 
        33.333333), ), ((14.583333, 112.5, 33.333333), ), ((12.916667, 
        114.166667, 33.333333), ), ((13.333333, 116.666667, 33.333333), ), ((
        26.666667, 110.0, 33.333333), ), ((20.0, 113.333333, 16.666667), ), ((
        20.0, 116.666667, 33.333333), ), ((22.5, 111.666667, 33.333333), ), ((
        21.666667, 115.0, 33.333333), ), ((22.5, 118.333333, 33.333333), ), ((
        27.5, 111.666667, 33.333333), ), ((28.333333, 115.0, 33.333333), ), ((
        27.5, 118.333333, 33.333333), ), ((25.416667, 117.5, 33.333333), ), ((
        27.083333, 115.833333, 33.333333), ), ((26.666667, 113.333333, 
        33.333333), ), ((24.583333, 112.5, 33.333333), ), ((22.916667, 
        114.166667, 33.333333), ), ((23.333333, 116.666667, 33.333333), ), ((
        36.666667, 110.0, 33.333333), ), ((30.0, 113.333333, 16.666667), ), ((
        30.0, 116.666667, 33.333333), ), ((32.5, 111.666667, 33.333333), ), ((
        31.666667, 115.0, 33.333333), ), ((32.5, 118.333333, 33.333333), ), ((
        37.5, 111.666667, 33.333333), ), ((38.333333, 115.0, 33.333333), ), ((
        37.5, 118.333333, 33.333333), ), ((35.416667, 117.5, 33.333333), ), ((
        37.083333, 115.833333, 33.333333), ), ((36.666667, 113.333333, 
        33.333333), ), ((34.583333, 112.5, 33.333333), ), ((32.916667, 
        114.166667, 33.333333), ), ((33.333333, 116.666667, 33.333333), ), ((
        46.666667, 110.0, 33.333333), ), ((50.0, 116.666667, 16.666667), ), ((
        50.0, 113.333333, 33.333333), ), ((40.0, 113.333333, 16.666667), ), ((
        40.0, 116.666667, 33.333333), ), ((42.5, 111.666667, 33.333333), ), ((
        41.666667, 115.0, 33.333333), ), ((42.5, 118.333333, 33.333333), ), ((
        47.5, 111.666667, 33.333333), ), ((48.333333, 115.0, 33.333333), ), ((
        47.5, 118.333333, 33.333333), ), ((45.416667, 117.5, 33.333333), ), ((
        47.083333, 115.833333, 33.333333), ), ((46.666667, 113.333333, 
        33.333333), ), ((44.583333, 112.5, 33.333333), ), ((42.916667, 
        114.166667, 33.333333), ), ((43.333333, 116.666667, 33.333333), ), ((
        6.666667, 120.0, 33.333333), ), ((0.0, 123.333333, 16.666667), ), ((
        0.0, 126.666667, 33.333333), ), ((2.5, 121.666667, 33.333333), ), ((
        1.666667, 125.0, 33.333333), ), ((2.5, 128.333333, 33.333333), ), ((
        7.5, 121.666667, 33.333333), ), ((8.333333, 125.0, 33.333333), ), ((
        7.5, 128.333333, 33.333333), ), ((5.416667, 127.5, 33.333333), ), ((
        7.083333, 125.833333, 33.333333), ), ((6.666667, 123.333333, 
        33.333333), ), ((4.583333, 122.5, 33.333333), ), ((2.916667, 
        124.166667, 33.333333), ), ((3.333333, 126.666667, 33.333333), ), ((
        16.666667, 120.0, 33.333333), ), ((10.0, 123.333333, 16.666667), ), ((
        10.0, 126.666667, 33.333333), ), ((12.5, 121.666667, 33.333333), ), ((
        11.666667, 125.0, 33.333333), ), ((12.5, 128.333333, 33.333333), ), ((
        17.5, 121.666667, 33.333333), ), ((18.333333, 125.0, 33.333333), ), ((
        17.5, 128.333333, 33.333333), ), ((15.416667, 127.5, 33.333333), ), ((
        17.083333, 125.833333, 33.333333), ), ((16.666667, 123.333333, 
        33.333333), ), ((14.583333, 122.5, 33.333333), ), ((12.916667, 
        124.166667, 33.333333), ), ((13.333333, 126.666667, 33.333333), ), ((
        26.666667, 120.0, 33.333333), ), ((20.0, 123.333333, 16.666667), ), ((
        20.0, 126.666667, 33.333333), ), ((22.5, 121.666667, 33.333333), ), ((
        21.666667, 125.0, 33.333333), ), ((22.5, 128.333333, 33.333333), ), ((
        27.5, 121.666667, 33.333333), ), ((28.333333, 125.0, 33.333333), ), ((
        27.5, 128.333333, 33.333333), ), ((25.416667, 127.5, 33.333333), ), ((
        27.083333, 125.833333, 33.333333), ), ((26.666667, 123.333333, 
        33.333333), ), ((24.583333, 122.5, 33.333333), ), ((22.916667, 
        124.166667, 33.333333), ), ((23.333333, 126.666667, 33.333333), ), ((
        36.666667, 120.0, 33.333333), ), ((30.0, 123.333333, 16.666667), ), ((
        30.0, 126.666667, 33.333333), ), ((32.5, 121.666667, 33.333333), ), ((
        31.666667, 125.0, 33.333333), ), ((32.5, 128.333333, 33.333333), ), ((
        37.5, 121.666667, 33.333333), ), ((38.333333, 125.0, 33.333333), ), ((
        37.5, 128.333333, 33.333333), ), ((35.416667, 127.5, 33.333333), ), ((
        37.083333, 125.833333, 33.333333), ), ((36.666667, 123.333333, 
        33.333333), ), ((34.583333, 122.5, 33.333333), ), ((32.916667, 
        124.166667, 33.333333), ), ((33.333333, 126.666667, 33.333333), ), ((
        46.666667, 120.0, 33.333333), ), ((50.0, 126.666667, 16.666667), ), ((
        50.0, 123.333333, 33.333333), ), ((40.0, 123.333333, 16.666667), ), ((
        40.0, 126.666667, 33.333333), ), ((42.5, 121.666667, 33.333333), ), ((
        41.666667, 125.0, 33.333333), ), ((42.5, 128.333333, 33.333333), ), ((
        47.5, 121.666667, 33.333333), ), ((48.333333, 125.0, 33.333333), ), ((
        47.5, 128.333333, 33.333333), ), ((45.416667, 127.5, 33.333333), ), ((
        47.083333, 125.833333, 33.333333), ), ((46.666667, 123.333333, 
        33.333333), ), ((44.583333, 122.5, 33.333333), ), ((42.916667, 
        124.166667, 33.333333), ), ((43.333333, 126.666667, 33.333333), ), ((
        6.666667, 130.0, 33.333333), ), ((0.0, 133.333333, 16.666667), ), ((
        0.0, 136.666667, 33.333333), ), ((2.5, 131.666667, 33.333333), ), ((
        1.666667, 135.0, 33.333333), ), ((2.5, 138.333333, 33.333333), ), ((
        7.5, 131.666667, 33.333333), ), ((8.333333, 135.0, 33.333333), ), ((
        7.5, 138.333333, 33.333333), ), ((5.416667, 137.5, 33.333333), ), ((
        7.083333, 135.833333, 33.333333), ), ((6.666667, 133.333333, 
        33.333333), ), ((4.583333, 132.5, 33.333333), ), ((2.916667, 
        134.166667, 33.333333), ), ((3.333333, 136.666667, 33.333333), ), ((
        16.666667, 130.0, 33.333333), ), ((10.0, 133.333333, 16.666667), ), ((
        10.0, 136.666667, 33.333333), ), ((12.5, 131.666667, 33.333333), ))+\
        f.findAt(((11.666667, 135.0, 33.333333), ), ((12.5, 138.333333, 
        33.333333), ), ((17.5, 131.666667, 33.333333), ), ((18.333333, 135.0, 
        33.333333), ), ((17.5, 138.333333, 33.333333), ), ((15.416667, 137.5, 
        33.333333), ), ((17.083333, 135.833333, 33.333333), ), ((16.666667, 
        133.333333, 33.333333), ), ((14.583333, 132.5, 33.333333), ), ((
        12.916667, 134.166667, 33.333333), ), ((13.333333, 136.666667, 
        33.333333), ), ((26.666667, 130.0, 33.333333), ), ((20.0, 133.333333, 
        16.666667), ), ((20.0, 136.666667, 33.333333), ), ((22.5, 131.666667, 
        33.333333), ), ((21.666667, 135.0, 33.333333), ), ((22.5, 138.333333, 
        33.333333), ), ((27.5, 131.666667, 33.333333), ), ((28.333333, 135.0, 
        33.333333), ), ((27.5, 138.333333, 33.333333), ), ((25.416667, 137.5, 
        33.333333), ), ((27.083333, 135.833333, 33.333333), ), ((26.666667, 
        133.333333, 33.333333), ), ((24.583333, 132.5, 33.333333), ), ((
        22.916667, 134.166667, 33.333333), ), ((23.333333, 136.666667, 
        33.333333), ), ((36.666667, 130.0, 33.333333), ), ((30.0, 133.333333, 
        16.666667), ), ((30.0, 136.666667, 33.333333), ), ((32.5, 131.666667, 
        33.333333), ), ((31.666667, 135.0, 33.333333), ), ((32.5, 138.333333, 
        33.333333), ), ((37.5, 131.666667, 33.333333), ), ((38.333333, 135.0, 
        33.333333), ), ((37.5, 138.333333, 33.333333), ), ((35.416667, 137.5, 
        33.333333), ), ((37.083333, 135.833333, 33.333333), ), ((36.666667, 
        133.333333, 33.333333), ), ((34.583333, 132.5, 33.333333), ), ((
        32.916667, 134.166667, 33.333333), ), ((33.333333, 136.666667, 
        33.333333), ), ((46.666667, 130.0, 33.333333), ), ((50.0, 136.666667, 
        16.666667), ), ((50.0, 133.333333, 33.333333), ), ((40.0, 133.333333, 
        16.666667), ), ((40.0, 136.666667, 33.333333), ), ((42.5, 131.666667, 
        33.333333), ), ((41.666667, 135.0, 33.333333), ), ((42.5, 138.333333, 
        33.333333), ), ((47.5, 131.666667, 33.333333), ), ((48.333333, 135.0, 
        33.333333), ), ((47.5, 138.333333, 33.333333), ), ((45.416667, 137.5, 
        33.333333), ), ((47.083333, 135.833333, 33.333333), ), ((46.666667, 
        133.333333, 33.333333), ), ((44.583333, 132.5, 33.333333), ), ((
        42.916667, 134.166667, 33.333333), ), ((43.333333, 136.666667, 
        33.333333), ), ((6.666667, 140.0, 33.333333), ), ((3.333333, 150.0, 
        33.333333), ), ((0.0, 143.333333, 16.666667), ), ((0.0, 146.666667, 
        33.333333), ), ((2.5, 141.666667, 33.333333), ), ((1.666667, 145.0, 
        33.333333), ), ((2.5, 148.333333, 33.333333), ), ((7.5, 141.666667, 
        33.333333), ), ((8.333333, 145.0, 33.333333), ), ((7.5, 148.333333, 
        33.333333), ), ((5.416667, 147.5, 33.333333), ), ((7.083333, 
        145.833333, 33.333333), ), ((6.666667, 143.333333, 33.333333), ), ((
        4.583333, 142.5, 33.333333), ), ((2.916667, 144.166667, 33.333333), ), 
        ((3.333333, 146.666667, 33.333333), ), ((16.666667, 140.0, 33.333333), 
        ), ((13.333333, 150.0, 33.333333), ), ((10.0, 143.333333, 16.666667), 
        ), ((10.0, 146.666667, 33.333333), ), ((12.5, 141.666667, 33.333333), 
        ), ((11.666667, 145.0, 33.333333), ), ((12.5, 148.333333, 33.333333), 
        ), ((17.5, 141.666667, 33.333333), ), ((18.333333, 145.0, 33.333333), 
        ), ((17.5, 148.333333, 33.333333), ), ((15.416667, 147.5, 33.333333), 
        ), ((17.083333, 145.833333, 33.333333), ), ((16.666667, 143.333333, 
        33.333333), ), ((14.583333, 142.5, 33.333333), ), ((12.916667, 
        144.166667, 33.333333), ), ((13.333333, 146.666667, 33.333333), ), ((
        26.666667, 140.0, 33.333333), ), ((23.333333, 150.0, 33.333333), ), ((
        20.0, 143.333333, 16.666667), ), ((20.0, 146.666667, 33.333333), ), ((
        22.5, 141.666667, 33.333333), ), ((21.666667, 145.0, 33.333333), ), ((
        22.5, 148.333333, 33.333333), ), ((27.5, 141.666667, 33.333333), ), ((
        28.333333, 145.0, 33.333333), ), ((27.5, 148.333333, 33.333333), ), ((
        25.416667, 147.5, 33.333333), ), ((27.083333, 145.833333, 33.333333), 
        ), ((26.666667, 143.333333, 33.333333), ), ((24.583333, 142.5, 
        33.333333), ), ((22.916667, 144.166667, 33.333333), ), ((23.333333, 
        146.666667, 33.333333), ), ((36.666667, 140.0, 33.333333), ), ((
        33.333333, 150.0, 33.333333), ), ((30.0, 143.333333, 16.666667), ), ((
        30.0, 146.666667, 33.333333), ), ((32.5, 141.666667, 33.333333), ), ((
        31.666667, 145.0, 33.333333), ), ((32.5, 148.333333, 33.333333), ), ((
        37.5, 141.666667, 33.333333), ), ((38.333333, 145.0, 33.333333), ), ((
        37.5, 148.333333, 33.333333), ), ((35.416667, 147.5, 33.333333), ), ((
        37.083333, 145.833333, 33.333333), ), ((36.666667, 143.333333, 
        33.333333), ), ((34.583333, 142.5, 33.333333), ), ((32.916667, 
        144.166667, 33.333333), ), ((33.333333, 146.666667, 33.333333), ), ((
        46.666667, 140.0, 33.333333), ), ((50.0, 146.666667, 16.666667), ), ((
        50.0, 143.333333, 33.333333), ), ((43.333333, 150.0, 33.333333), ), ((
        40.0, 143.333333, 16.666667), ), ((40.0, 146.666667, 33.333333), ), ((
        42.5, 141.666667, 33.333333), ), ((41.666667, 145.0, 33.333333), ), ((
        42.5, 148.333333, 33.333333), ), ((47.5, 141.666667, 33.333333), ), ((
        48.333333, 145.0, 33.333333), ), ((47.5, 148.333333, 33.333333), ), ((
        45.416667, 147.5, 33.333333), ), ((47.083333, 145.833333, 33.333333), 
        ), ((46.666667, 143.333333, 33.333333), ), ((44.583333, 142.5, 
        33.333333), ), ((42.916667, 144.166667, 33.333333), ), ((43.333333, 
        146.666667, 33.333333), ))
	p.Set(faces=faces, name='ut150')
	
def ut200():
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((6.666667, 0.0, 33.333333), ), ((0.0, 3.333333, 16.666667), 
        ), ((0.0, 6.666667, 33.333333), ), ((2.5, 1.666667, 33.333333), ), ((
        1.666667, 5.0, 33.333333), ), ((2.5, 8.333333, 33.333333), ), ((7.5, 
        1.666667, 33.333333), ), ((8.333333, 5.0, 33.333333), ), ((7.5, 
        8.333333, 33.333333), ), ((5.416667, 7.5, 33.333333), ), ((7.083333, 
        5.833333, 33.333333), ), ((6.666667, 3.333333, 33.333333), ), ((
        4.583333, 2.5, 33.333333), ), ((2.916667, 4.166667, 33.333333), ), ((
        3.333333, 6.666667, 33.333333), ), ((16.666667, 0.0, 33.333333), ), ((
        10.0, 3.333333, 16.666667), ), ((10.0, 6.666667, 33.333333), ), ((12.5, 
        1.666667, 33.333333), ), ((11.666667, 5.0, 33.333333), ), ((12.5, 
        8.333333, 33.333333), ), ((17.5, 1.666667, 33.333333), ), ((18.333333, 
        5.0, 33.333333), ), ((17.5, 8.333333, 33.333333), ), ((15.416667, 7.5, 
        33.333333), ), ((17.083333, 5.833333, 33.333333), ), ((16.666667, 
        3.333333, 33.333333), ), ((14.583333, 2.5, 33.333333), ), ((12.916667, 
        4.166667, 33.333333), ), ((13.333333, 6.666667, 33.333333), ), ((
        26.666667, 0.0, 33.333333), ), ((20.0, 3.333333, 16.666667), ), ((20.0, 
        6.666667, 33.333333), ), ((22.5, 1.666667, 33.333333), ), ((21.666667, 
        5.0, 33.333333), ), ((22.5, 8.333333, 33.333333), ), ((27.5, 1.666667, 
        33.333333), ), ((28.333333, 5.0, 33.333333), ), ((27.5, 8.333333, 
        33.333333), ), ((25.416667, 7.5, 33.333333), ), ((27.083333, 5.833333, 
        33.333333), ), ((26.666667, 3.333333, 33.333333), ), ((24.583333, 2.5, 
        33.333333), ), ((22.916667, 4.166667, 33.333333), ), ((23.333333, 
        6.666667, 33.333333), ), ((36.666667, 0.0, 33.333333), ), ((30.0, 
        3.333333, 16.666667), ), ((30.0, 6.666667, 33.333333), ), ((32.5, 
        1.666667, 33.333333), ), ((31.666667, 5.0, 33.333333), ), ((32.5, 
        8.333333, 33.333333), ), ((37.5, 1.666667, 33.333333), ), ((38.333333, 
        5.0, 33.333333), ), ((37.5, 8.333333, 33.333333), ), ((35.416667, 7.5, 
        33.333333), ), ((37.083333, 5.833333, 33.333333), ), ((36.666667, 
        3.333333, 33.333333), ), ((34.583333, 2.5, 33.333333), ), ((32.916667, 
        4.166667, 33.333333), ), ((33.333333, 6.666667, 33.333333), ), ((
        46.666667, 0.0, 33.333333), ), ((50.0, 6.666667, 16.666667), ), ((50.0, 
        3.333333, 33.333333), ), ((40.0, 3.333333, 16.666667), ), ((40.0, 
        6.666667, 33.333333), ), ((42.5, 1.666667, 33.333333), ), ((41.666667, 
        5.0, 33.333333), ), ((42.5, 8.333333, 33.333333), ), ((47.5, 1.666667, 
        33.333333), ), ((48.333333, 5.0, 33.333333), ), ((47.5, 8.333333, 
        33.333333), ), ((45.416667, 7.5, 33.333333), ), ((47.083333, 5.833333, 
        33.333333), ), ((46.666667, 3.333333, 33.333333), ), ((44.583333, 2.5, 
        33.333333), ), ((42.916667, 4.166667, 33.333333), ), ((43.333333, 
        6.666667, 33.333333), ), ((6.666667, 10.0, 33.333333), ), ((0.0, 
        13.333333, 16.666667), ), ((0.0, 16.666667, 33.333333), ), ((2.5, 
        11.666667, 33.333333), ), ((1.666667, 15.0, 33.333333), ), ((2.5, 
        18.333333, 33.333333), ), ((7.5, 11.666667, 33.333333), ), ((8.333333, 
        15.0, 33.333333), ), ((7.5, 18.333333, 33.333333), ), ((5.416667, 17.5, 
        33.333333), ), ((7.083333, 15.833333, 33.333333), ), ((6.666667, 
        13.333333, 33.333333), ), ((4.583333, 12.5, 33.333333), ), ((2.916667, 
        14.166667, 33.333333), ), ((3.333333, 16.666667, 33.333333), ), ((
        16.666667, 10.0, 33.333333), ), ((10.0, 13.333333, 16.666667), ), ((
        10.0, 16.666667, 33.333333), ), ((12.5, 11.666667, 33.333333), ), ((
        11.666667, 15.0, 33.333333), ), ((12.5, 18.333333, 33.333333), ), ((
        17.5, 11.666667, 33.333333), ), ((18.333333, 15.0, 33.333333), ), ((
        17.5, 18.333333, 33.333333), ), ((15.416667, 17.5, 33.333333), ), ((
        17.083333, 15.833333, 33.333333), ), ((16.666667, 13.333333, 
        33.333333), ), ((14.583333, 12.5, 33.333333), ), ((12.916667, 
        14.166667, 33.333333), ), ((13.333333, 16.666667, 33.333333), ), ((
        26.666667, 10.0, 33.333333), ), ((20.0, 13.333333, 16.666667), ), ((
        20.0, 16.666667, 33.333333), ), ((22.5, 11.666667, 33.333333), ), ((
        21.666667, 15.0, 33.333333), ), ((22.5, 18.333333, 33.333333), ), ((
        27.5, 11.666667, 33.333333), ), ((28.333333, 15.0, 33.333333), ), ((
        27.5, 18.333333, 33.333333), ), ((25.416667, 17.5, 33.333333), ), ((
        27.083333, 15.833333, 33.333333), ), ((26.666667, 13.333333, 
        33.333333), ), ((24.583333, 12.5, 33.333333), ), ((22.916667, 
        14.166667, 33.333333), ), ((23.333333, 16.666667, 33.333333), ), ((
        36.666667, 10.0, 33.333333), ), ((30.0, 13.333333, 16.666667), ), ((
        30.0, 16.666667, 33.333333), ), ((32.5, 11.666667, 33.333333), ), ((
        31.666667, 15.0, 33.333333), ), ((32.5, 18.333333, 33.333333), ), ((
        37.5, 11.666667, 33.333333), ), ((38.333333, 15.0, 33.333333), ), ((
        37.5, 18.333333, 33.333333), ), ((35.416667, 17.5, 33.333333), ), ((
        37.083333, 15.833333, 33.333333), ), ((36.666667, 13.333333, 
        33.333333), ), ((34.583333, 12.5, 33.333333), ), ((32.916667, 
        14.166667, 33.333333), ), ((33.333333, 16.666667, 33.333333), ), ((
        46.666667, 10.0, 33.333333), ), ((50.0, 16.666667, 16.666667), ), ((
        50.0, 13.333333, 33.333333), ), ((40.0, 13.333333, 16.666667), ), ((
        40.0, 16.666667, 33.333333), ), ((42.5, 11.666667, 33.333333), ), ((
        41.666667, 15.0, 33.333333), ), ((42.5, 18.333333, 33.333333), ), ((
        47.5, 11.666667, 33.333333), ), ((48.333333, 15.0, 33.333333), ), ((
        47.5, 18.333333, 33.333333), ), ((45.416667, 17.5, 33.333333), ), ((
        47.083333, 15.833333, 33.333333), ), ((46.666667, 13.333333, 
        33.333333), ), ((44.583333, 12.5, 33.333333), ), ((42.916667, 
        14.166667, 33.333333), ), ((43.333333, 16.666667, 33.333333), ), ((
        6.666667, 20.0, 33.333333), ), ((0.0, 23.333333, 16.666667), ), ((0.0, 
        26.666667, 33.333333), ), ((2.5, 21.666667, 33.333333), ), ((1.666667, 
        25.0, 33.333333), ), ((2.5, 28.333333, 33.333333), ), ((7.5, 21.666667, 
        33.333333), ), ((8.333333, 25.0, 33.333333), ), ((7.5, 28.333333, 
        33.333333), ), ((5.416667, 27.5, 33.333333), ), ((7.083333, 25.833333, 
        33.333333), ), ((6.666667, 23.333333, 33.333333), ), ((4.583333, 22.5, 
        33.333333), ), ((2.916667, 24.166667, 33.333333), ), ((3.333333, 
        26.666667, 33.333333), ), ((16.666667, 20.0, 33.333333), ), ((10.0, 
        23.333333, 16.666667), ), ((10.0, 26.666667, 33.333333), ), ((12.5, 
        21.666667, 33.333333), ), ((11.666667, 25.0, 33.333333), ), ((12.5, 
        28.333333, 33.333333), ), ((17.5, 21.666667, 33.333333), ), ((
        18.333333, 25.0, 33.333333), ), ((17.5, 28.333333, 33.333333), ), ((
        15.416667, 27.5, 33.333333), ), ((17.083333, 25.833333, 33.333333), ), 
        ((16.666667, 23.333333, 33.333333), ), ((14.583333, 22.5, 33.333333), 
        ), ((12.916667, 24.166667, 33.333333), ), ((13.333333, 26.666667, 
        33.333333), ), ((26.666667, 20.0, 33.333333), ), ((20.0, 23.333333, 
        16.666667), ), ((20.0, 26.666667, 33.333333), ), ((22.5, 21.666667, 
        33.333333), ), ((21.666667, 25.0, 33.333333), ), ((22.5, 28.333333, 
        33.333333), ), ((27.5, 21.666667, 33.333333), ), ((28.333333, 25.0, 
        33.333333), ), ((27.5, 28.333333, 33.333333), ), ((25.416667, 27.5, 
        33.333333), ), ((27.083333, 25.833333, 33.333333), ), ((26.666667, 
        23.333333, 33.333333), ), ((24.583333, 22.5, 33.333333), ), ((
        22.916667, 24.166667, 33.333333), ), ((23.333333, 26.666667, 
        33.333333), ), ((36.666667, 20.0, 33.333333), ), ((30.0, 23.333333, 
        16.666667), ), ((30.0, 26.666667, 33.333333), ), ((32.5, 21.666667, 
        33.333333), ), ((31.666667, 25.0, 33.333333), ), ((32.5, 28.333333, 
        33.333333), ), ((37.5, 21.666667, 33.333333), ), ((38.333333, 25.0, 
        33.333333), ), ((37.5, 28.333333, 33.333333), ), ((35.416667, 27.5, 
        33.333333), ), ((37.083333, 25.833333, 33.333333), ), ((36.666667, 
        23.333333, 33.333333), ), ((34.583333, 22.5, 33.333333), ), ((
        32.916667, 24.166667, 33.333333), ), ((33.333333, 26.666667, 
        33.333333), ), ((46.666667, 20.0, 33.333333), ), ((50.0, 26.666667, 
        16.666667), ), ((50.0, 23.333333, 33.333333), ), ((40.0, 23.333333, 
        16.666667), ), ((40.0, 26.666667, 33.333333), ), ((42.5, 21.666667, 
        33.333333), ), ((41.666667, 25.0, 33.333333), ), ((42.5, 28.333333, 
        33.333333), ), ((47.5, 21.666667, 33.333333), ), ((48.333333, 25.0, 
        33.333333), ), ((47.5, 28.333333, 33.333333), ), ((45.416667, 27.5, 
        33.333333), ), ((47.083333, 25.833333, 33.333333), ), ((46.666667, 
        23.333333, 33.333333), ), ((44.583333, 22.5, 33.333333), ), ((
        42.916667, 24.166667, 33.333333), ), ((43.333333, 26.666667, 
        33.333333), ), ((6.666667, 30.0, 33.333333), ), ((0.0, 33.333333, 
        16.666667), ), ((0.0, 36.666667, 33.333333), ), ((2.5, 31.666667, 
        33.333333), ), ((1.666667, 35.0, 33.333333), ), ((2.5, 38.333333, 
        33.333333), ), ((7.5, 31.666667, 33.333333), ), ((8.333333, 35.0, 
        33.333333), ), ((7.5, 38.333333, 33.333333), ), ((5.416667, 37.5, 
        33.333333), ), ((7.083333, 35.833333, 33.333333), ), ((6.666667, 
        33.333333, 33.333333), ), ((4.583333, 32.5, 33.333333), ), ((2.916667, 
        34.166667, 33.333333), ), ((3.333333, 36.666667, 33.333333), ), ((
        16.666667, 30.0, 33.333333), ), ((10.0, 33.333333, 16.666667), ), ((
        10.0, 36.666667, 33.333333), ), ((12.5, 31.666667, 33.333333), ), ((
        11.666667, 35.0, 33.333333), ), ((12.5, 38.333333, 33.333333), ), ((
        17.5, 31.666667, 33.333333), ), ((18.333333, 35.0, 33.333333), ), ((
        17.5, 38.333333, 33.333333), ))+f.findAt(((15.416667, 37.5, 33.333333), 
        ), ((17.083333, 35.833333, 33.333333), ), ((16.666667, 33.333333, 
        33.333333), ), ((14.583333, 32.5, 33.333333), ), ((12.916667, 
        34.166667, 33.333333), ), ((13.333333, 36.666667, 33.333333), ), ((
        26.666667, 30.0, 33.333333), ), ((20.0, 33.333333, 16.666667), ), ((
        20.0, 36.666667, 33.333333), ), ((22.5, 31.666667, 33.333333), ), ((
        21.666667, 35.0, 33.333333), ), ((22.5, 38.333333, 33.333333), ), ((
        27.5, 31.666667, 33.333333), ), ((28.333333, 35.0, 33.333333), ), ((
        27.5, 38.333333, 33.333333), ), ((25.416667, 37.5, 33.333333), ), ((
        27.083333, 35.833333, 33.333333), ), ((26.666667, 33.333333, 
        33.333333), ), ((24.583333, 32.5, 33.333333), ), ((22.916667, 
        34.166667, 33.333333), ), ((23.333333, 36.666667, 33.333333), ), ((
        36.666667, 30.0, 33.333333), ), ((30.0, 33.333333, 16.666667), ), ((
        30.0, 36.666667, 33.333333), ), ((32.5, 31.666667, 33.333333), ), ((
        31.666667, 35.0, 33.333333), ), ((32.5, 38.333333, 33.333333), ), ((
        37.5, 31.666667, 33.333333), ), ((38.333333, 35.0, 33.333333), ), ((
        37.5, 38.333333, 33.333333), ), ((35.416667, 37.5, 33.333333), ), ((
        37.083333, 35.833333, 33.333333), ), ((36.666667, 33.333333, 
        33.333333), ), ((34.583333, 32.5, 33.333333), ), ((32.916667, 
        34.166667, 33.333333), ), ((33.333333, 36.666667, 33.333333), ), ((
        46.666667, 30.0, 33.333333), ), ((50.0, 36.666667, 16.666667), ), ((
        50.0, 33.333333, 33.333333), ), ((40.0, 33.333333, 16.666667), ), ((
        40.0, 36.666667, 33.333333), ), ((42.5, 31.666667, 33.333333), ), ((
        41.666667, 35.0, 33.333333), ), ((42.5, 38.333333, 33.333333), ), ((
        47.5, 31.666667, 33.333333), ), ((48.333333, 35.0, 33.333333), ), ((
        47.5, 38.333333, 33.333333), ), ((45.416667, 37.5, 33.333333), ), ((
        47.083333, 35.833333, 33.333333), ), ((46.666667, 33.333333, 
        33.333333), ), ((44.583333, 32.5, 33.333333), ), ((42.916667, 
        34.166667, 33.333333), ), ((43.333333, 36.666667, 33.333333), ), ((
        6.666667, 40.0, 33.333333), ), ((0.0, 43.333333, 16.666667), ), ((0.0, 
        46.666667, 33.333333), ), ((2.5, 41.666667, 33.333333), ), ((1.666667, 
        45.0, 33.333333), ), ((2.5, 48.333333, 33.333333), ), ((7.5, 41.666667, 
        33.333333), ), ((8.333333, 45.0, 33.333333), ), ((7.5, 48.333333, 
        33.333333), ), ((5.416667, 47.5, 33.333333), ), ((7.083333, 45.833333, 
        33.333333), ), ((6.666667, 43.333333, 33.333333), ), ((4.583333, 42.5, 
        33.333333), ), ((2.916667, 44.166667, 33.333333), ), ((3.333333, 
        46.666667, 33.333333), ), ((16.666667, 40.0, 33.333333), ), ((10.0, 
        43.333333, 16.666667), ), ((10.0, 46.666667, 33.333333), ), ((12.5, 
        41.666667, 33.333333), ), ((11.666667, 45.0, 33.333333), ), ((12.5, 
        48.333333, 33.333333), ), ((17.5, 41.666667, 33.333333), ), ((
        18.333333, 45.0, 33.333333), ), ((17.5, 48.333333, 33.333333), ), ((
        15.416667, 47.5, 33.333333), ), ((17.083333, 45.833333, 33.333333), ), 
        ((16.666667, 43.333333, 33.333333), ), ((14.583333, 42.5, 33.333333), 
        ), ((12.916667, 44.166667, 33.333333), ), ((13.333333, 46.666667, 
        33.333333), ), ((26.666667, 40.0, 33.333333), ), ((20.0, 43.333333, 
        16.666667), ), ((20.0, 46.666667, 33.333333), ), ((22.5, 41.666667, 
        33.333333), ), ((21.666667, 45.0, 33.333333), ), ((22.5, 48.333333, 
        33.333333), ), ((27.5, 41.666667, 33.333333), ), ((28.333333, 45.0, 
        33.333333), ), ((27.5, 48.333333, 33.333333), ), ((25.416667, 47.5, 
        33.333333), ), ((27.083333, 45.833333, 33.333333), ), ((26.666667, 
        43.333333, 33.333333), ), ((24.583333, 42.5, 33.333333), ), ((
        22.916667, 44.166667, 33.333333), ), ((23.333333, 46.666667, 
        33.333333), ), ((36.666667, 40.0, 33.333333), ), ((30.0, 43.333333, 
        16.666667), ), ((30.0, 46.666667, 33.333333), ), ((32.5, 41.666667, 
        33.333333), ), ((31.666667, 45.0, 33.333333), ), ((32.5, 48.333333, 
        33.333333), ), ((37.5, 41.666667, 33.333333), ), ((38.333333, 45.0, 
        33.333333), ), ((37.5, 48.333333, 33.333333), ), ((35.416667, 47.5, 
        33.333333), ), ((37.083333, 45.833333, 33.333333), ), ((36.666667, 
        43.333333, 33.333333), ), ((34.583333, 42.5, 33.333333), ), ((
        32.916667, 44.166667, 33.333333), ), ((33.333333, 46.666667, 
        33.333333), ), ((46.666667, 40.0, 33.333333), ), ((50.0, 46.666667, 
        16.666667), ), ((50.0, 43.333333, 33.333333), ), ((40.0, 43.333333, 
        16.666667), ), ((40.0, 46.666667, 33.333333), ), ((42.5, 41.666667, 
        33.333333), ), ((41.666667, 45.0, 33.333333), ), ((42.5, 48.333333, 
        33.333333), ), ((47.5, 41.666667, 33.333333), ), ((48.333333, 45.0, 
        33.333333), ), ((47.5, 48.333333, 33.333333), ), ((45.416667, 47.5, 
        33.333333), ), ((47.083333, 45.833333, 33.333333), ), ((46.666667, 
        43.333333, 33.333333), ), ((44.583333, 42.5, 33.333333), ), ((
        42.916667, 44.166667, 33.333333), ), ((43.333333, 46.666667, 
        33.333333), ), ((6.666667, 50.0, 33.333333), ), ((0.0, 53.333333, 
        16.666667), ), ((0.0, 56.666667, 33.333333), ), ((2.5, 51.666667, 
        33.333333), ), ((1.666667, 55.0, 33.333333), ), ((2.5, 58.333333, 
        33.333333), ), ((7.5, 51.666667, 33.333333), ), ((8.333333, 55.0, 
        33.333333), ), ((7.5, 58.333333, 33.333333), ), ((5.416667, 57.5, 
        33.333333), ), ((7.083333, 55.833333, 33.333333), ), ((6.666667, 
        53.333333, 33.333333), ), ((4.583333, 52.5, 33.333333), ), ((2.916667, 
        54.166667, 33.333333), ), ((3.333333, 56.666667, 33.333333), ), ((
        16.666667, 50.0, 33.333333), ), ((10.0, 53.333333, 16.666667), ), ((
        10.0, 56.666667, 33.333333), ), ((12.5, 51.666667, 33.333333), ), ((
        11.666667, 55.0, 33.333333), ), ((12.5, 58.333333, 33.333333), ), ((
        17.5, 51.666667, 33.333333), ), ((18.333333, 55.0, 33.333333), ), ((
        17.5, 58.333333, 33.333333), ), ((15.416667, 57.5, 33.333333), ), ((
        17.083333, 55.833333, 33.333333), ), ((16.666667, 53.333333, 
        33.333333), ), ((14.583333, 52.5, 33.333333), ), ((12.916667, 
        54.166667, 33.333333), ), ((13.333333, 56.666667, 33.333333), ), ((
        26.666667, 50.0, 33.333333), ), ((20.0, 53.333333, 16.666667), ), ((
        20.0, 56.666667, 33.333333), ), ((22.5, 51.666667, 33.333333), ), ((
        21.666667, 55.0, 33.333333), ), ((22.5, 58.333333, 33.333333), ), ((
        27.5, 51.666667, 33.333333), ), ((28.333333, 55.0, 33.333333), ), ((
        27.5, 58.333333, 33.333333), ), ((25.416667, 57.5, 33.333333), ), ((
        27.083333, 55.833333, 33.333333), ), ((26.666667, 53.333333, 
        33.333333), ), ((24.583333, 52.5, 33.333333), ), ((22.916667, 
        54.166667, 33.333333), ), ((23.333333, 56.666667, 33.333333), ), ((
        36.666667, 50.0, 33.333333), ), ((30.0, 53.333333, 16.666667), ), ((
        30.0, 56.666667, 33.333333), ), ((32.5, 51.666667, 33.333333), ), ((
        31.666667, 55.0, 33.333333), ), ((32.5, 58.333333, 33.333333), ), ((
        37.5, 51.666667, 33.333333), ), ((38.333333, 55.0, 33.333333), ), ((
        37.5, 58.333333, 33.333333), ), ((35.416667, 57.5, 33.333333), ), ((
        37.083333, 55.833333, 33.333333), ), ((36.666667, 53.333333, 
        33.333333), ), ((34.583333, 52.5, 33.333333), ), ((32.916667, 
        54.166667, 33.333333), ), ((33.333333, 56.666667, 33.333333), ), ((
        46.666667, 50.0, 33.333333), ), ((50.0, 56.666667, 16.666667), ), ((
        50.0, 53.333333, 33.333333), ), ((40.0, 53.333333, 16.666667), ), ((
        40.0, 56.666667, 33.333333), ), ((42.5, 51.666667, 33.333333), ), ((
        41.666667, 55.0, 33.333333), ), ((42.5, 58.333333, 33.333333), ), ((
        47.5, 51.666667, 33.333333), ), ((48.333333, 55.0, 33.333333), ), ((
        47.5, 58.333333, 33.333333), ), ((45.416667, 57.5, 33.333333), ), ((
        47.083333, 55.833333, 33.333333), ), ((46.666667, 53.333333, 
        33.333333), ), ((44.583333, 52.5, 33.333333), ), ((42.916667, 
        54.166667, 33.333333), ), ((43.333333, 56.666667, 33.333333), ), ((
        6.666667, 60.0, 33.333333), ), ((0.0, 63.333333, 16.666667), ), ((0.0, 
        66.666667, 33.333333), ), ((2.5, 61.666667, 33.333333), ), ((1.666667, 
        65.0, 33.333333), ), ((2.5, 68.333333, 33.333333), ), ((7.5, 61.666667, 
        33.333333), ), ((8.333333, 65.0, 33.333333), ), ((7.5, 68.333333, 
        33.333333), ), ((5.416667, 67.5, 33.333333), ), ((7.083333, 65.833333, 
        33.333333), ), ((6.666667, 63.333333, 33.333333), ), ((4.583333, 62.5, 
        33.333333), ), ((2.916667, 64.166667, 33.333333), ), ((3.333333, 
        66.666667, 33.333333), ), ((16.666667, 60.0, 33.333333), ), ((10.0, 
        63.333333, 16.666667), ), ((10.0, 66.666667, 33.333333), ), ((12.5, 
        61.666667, 33.333333), ), ((11.666667, 65.0, 33.333333), ), ((12.5, 
        68.333333, 33.333333), ), ((17.5, 61.666667, 33.333333), ), ((
        18.333333, 65.0, 33.333333), ), ((17.5, 68.333333, 33.333333), ), ((
        15.416667, 67.5, 33.333333), ), ((17.083333, 65.833333, 33.333333), ), 
        ((16.666667, 63.333333, 33.333333), ), ((14.583333, 62.5, 33.333333), 
        ), ((12.916667, 64.166667, 33.333333), ), ((13.333333, 66.666667, 
        33.333333), ), ((26.666667, 60.0, 33.333333), ), ((20.0, 63.333333, 
        16.666667), ), ((20.0, 66.666667, 33.333333), ), ((22.5, 61.666667, 
        33.333333), ), ((21.666667, 65.0, 33.333333), ), ((22.5, 68.333333, 
        33.333333), ), ((27.5, 61.666667, 33.333333), ), ((28.333333, 65.0, 
        33.333333), ), ((27.5, 68.333333, 33.333333), ), ((25.416667, 67.5, 
        33.333333), ), ((27.083333, 65.833333, 33.333333), ), ((26.666667, 
        63.333333, 33.333333), ), ((24.583333, 62.5, 33.333333), ), ((
        22.916667, 64.166667, 33.333333), ), ((23.333333, 66.666667, 
        33.333333), ), ((36.666667, 60.0, 33.333333), ), ((30.0, 63.333333, 
        16.666667), ), ((30.0, 66.666667, 33.333333), ))+f.findAt(((32.5, 
        61.666667, 33.333333), ), ((31.666667, 65.0, 33.333333), ), ((32.5, 
        68.333333, 33.333333), ), ((37.5, 61.666667, 33.333333), ), ((
        38.333333, 65.0, 33.333333), ), ((37.5, 68.333333, 33.333333), ), ((
        35.416667, 67.5, 33.333333), ), ((37.083333, 65.833333, 33.333333), ), 
        ((36.666667, 63.333333, 33.333333), ), ((34.583333, 62.5, 33.333333), 
        ), ((32.916667, 64.166667, 33.333333), ), ((33.333333, 66.666667, 
        33.333333), ), ((46.666667, 60.0, 33.333333), ), ((50.0, 66.666667, 
        16.666667), ), ((50.0, 63.333333, 33.333333), ), ((40.0, 63.333333, 
        16.666667), ), ((40.0, 66.666667, 33.333333), ), ((42.5, 61.666667, 
        33.333333), ), ((41.666667, 65.0, 33.333333), ), ((42.5, 68.333333, 
        33.333333), ), ((47.5, 61.666667, 33.333333), ), ((48.333333, 65.0, 
        33.333333), ), ((47.5, 68.333333, 33.333333), ), ((45.416667, 67.5, 
        33.333333), ), ((47.083333, 65.833333, 33.333333), ), ((46.666667, 
        63.333333, 33.333333), ), ((44.583333, 62.5, 33.333333), ), ((
        42.916667, 64.166667, 33.333333), ), ((43.333333, 66.666667, 
        33.333333), ), ((6.666667, 70.0, 33.333333), ), ((0.0, 73.333333, 
        16.666667), ), ((0.0, 76.666667, 33.333333), ), ((2.5, 71.666667, 
        33.333333), ), ((1.666667, 75.0, 33.333333), ), ((2.5, 78.333333, 
        33.333333), ), ((7.5, 71.666667, 33.333333), ), ((8.333333, 75.0, 
        33.333333), ), ((7.5, 78.333333, 33.333333), ), ((5.416667, 77.5, 
        33.333333), ), ((7.083333, 75.833333, 33.333333), ), ((6.666667, 
        73.333333, 33.333333), ), ((4.583333, 72.5, 33.333333), ), ((2.916667, 
        74.166667, 33.333333), ), ((3.333333, 76.666667, 33.333333), ), ((
        16.666667, 70.0, 33.333333), ), ((10.0, 73.333333, 16.666667), ), ((
        10.0, 76.666667, 33.333333), ), ((12.5, 71.666667, 33.333333), ), ((
        11.666667, 75.0, 33.333333), ), ((12.5, 78.333333, 33.333333), ), ((
        17.5, 71.666667, 33.333333), ), ((18.333333, 75.0, 33.333333), ), ((
        17.5, 78.333333, 33.333333), ), ((15.416667, 77.5, 33.333333), ), ((
        17.083333, 75.833333, 33.333333), ), ((16.666667, 73.333333, 
        33.333333), ), ((14.583333, 72.5, 33.333333), ), ((12.916667, 
        74.166667, 33.333333), ), ((13.333333, 76.666667, 33.333333), ), ((
        26.666667, 70.0, 33.333333), ), ((20.0, 73.333333, 16.666667), ), ((
        20.0, 76.666667, 33.333333), ), ((22.5, 71.666667, 33.333333), ), ((
        21.666667, 75.0, 33.333333), ), ((22.5, 78.333333, 33.333333), ), ((
        27.5, 71.666667, 33.333333), ), ((28.333333, 75.0, 33.333333), ), ((
        27.5, 78.333333, 33.333333), ), ((25.416667, 77.5, 33.333333), ), ((
        27.083333, 75.833333, 33.333333), ), ((26.666667, 73.333333, 
        33.333333), ), ((24.583333, 72.5, 33.333333), ), ((22.916667, 
        74.166667, 33.333333), ), ((23.333333, 76.666667, 33.333333), ), ((
        36.666667, 70.0, 33.333333), ), ((30.0, 73.333333, 16.666667), ), ((
        30.0, 76.666667, 33.333333), ), ((32.5, 71.666667, 33.333333), ), ((
        31.666667, 75.0, 33.333333), ), ((32.5, 78.333333, 33.333333), ), ((
        37.5, 71.666667, 33.333333), ), ((38.333333, 75.0, 33.333333), ), ((
        37.5, 78.333333, 33.333333), ), ((35.416667, 77.5, 33.333333), ), ((
        37.083333, 75.833333, 33.333333), ), ((36.666667, 73.333333, 
        33.333333), ), ((34.583333, 72.5, 33.333333), ), ((32.916667, 
        74.166667, 33.333333), ), ((33.333333, 76.666667, 33.333333), ), ((
        46.666667, 70.0, 33.333333), ), ((50.0, 76.666667, 16.666667), ), ((
        50.0, 73.333333, 33.333333), ), ((40.0, 73.333333, 16.666667), ), ((
        40.0, 76.666667, 33.333333), ), ((42.5, 71.666667, 33.333333), ), ((
        41.666667, 75.0, 33.333333), ), ((42.5, 78.333333, 33.333333), ), ((
        47.5, 71.666667, 33.333333), ), ((48.333333, 75.0, 33.333333), ), ((
        47.5, 78.333333, 33.333333), ), ((45.416667, 77.5, 33.333333), ), ((
        47.083333, 75.833333, 33.333333), ), ((46.666667, 73.333333, 
        33.333333), ), ((44.583333, 72.5, 33.333333), ), ((42.916667, 
        74.166667, 33.333333), ), ((43.333333, 76.666667, 33.333333), ), ((
        6.666667, 80.0, 33.333333), ), ((0.0, 83.333333, 16.666667), ), ((0.0, 
        86.666667, 33.333333), ), ((2.5, 81.666667, 33.333333), ), ((1.666667, 
        85.0, 33.333333), ), ((2.5, 88.333333, 33.333333), ), ((7.5, 81.666667, 
        33.333333), ), ((8.333333, 85.0, 33.333333), ), ((7.5, 88.333333, 
        33.333333), ), ((5.416667, 87.5, 33.333333), ), ((7.083333, 85.833333, 
        33.333333), ), ((6.666667, 83.333333, 33.333333), ), ((4.583333, 82.5, 
        33.333333), ), ((2.916667, 84.166667, 33.333333), ), ((3.333333, 
        86.666667, 33.333333), ), ((16.666667, 80.0, 33.333333), ), ((10.0, 
        83.333333, 16.666667), ), ((10.0, 86.666667, 33.333333), ), ((12.5, 
        81.666667, 33.333333), ), ((11.666667, 85.0, 33.333333), ), ((12.5, 
        88.333333, 33.333333), ), ((17.5, 81.666667, 33.333333), ), ((
        18.333333, 85.0, 33.333333), ), ((17.5, 88.333333, 33.333333), ), ((
        15.416667, 87.5, 33.333333), ), ((17.083333, 85.833333, 33.333333), ), 
        ((16.666667, 83.333333, 33.333333), ), ((14.583333, 82.5, 33.333333), 
        ), ((12.916667, 84.166667, 33.333333), ), ((13.333333, 86.666667, 
        33.333333), ), ((26.666667, 80.0, 33.333333), ), ((20.0, 83.333333, 
        16.666667), ), ((20.0, 86.666667, 33.333333), ), ((22.5, 81.666667, 
        33.333333), ), ((21.666667, 85.0, 33.333333), ), ((22.5, 88.333333, 
        33.333333), ), ((27.5, 81.666667, 33.333333), ), ((28.333333, 85.0, 
        33.333333), ), ((27.5, 88.333333, 33.333333), ), ((25.416667, 87.5, 
        33.333333), ), ((27.083333, 85.833333, 33.333333), ), ((26.666667, 
        83.333333, 33.333333), ), ((24.583333, 82.5, 33.333333), ), ((
        22.916667, 84.166667, 33.333333), ), ((23.333333, 86.666667, 
        33.333333), ), ((36.666667, 80.0, 33.333333), ), ((30.0, 83.333333, 
        16.666667), ), ((30.0, 86.666667, 33.333333), ), ((32.5, 81.666667, 
        33.333333), ), ((31.666667, 85.0, 33.333333), ), ((32.5, 88.333333, 
        33.333333), ), ((37.5, 81.666667, 33.333333), ), ((38.333333, 85.0, 
        33.333333), ), ((37.5, 88.333333, 33.333333), ), ((35.416667, 87.5, 
        33.333333), ), ((37.083333, 85.833333, 33.333333), ), ((36.666667, 
        83.333333, 33.333333), ), ((34.583333, 82.5, 33.333333), ), ((
        32.916667, 84.166667, 33.333333), ), ((33.333333, 86.666667, 
        33.333333), ), ((46.666667, 80.0, 33.333333), ), ((50.0, 86.666667, 
        16.666667), ), ((50.0, 83.333333, 33.333333), ), ((40.0, 83.333333, 
        16.666667), ), ((40.0, 86.666667, 33.333333), ), ((42.5, 81.666667, 
        33.333333), ), ((41.666667, 85.0, 33.333333), ), ((42.5, 88.333333, 
        33.333333), ), ((47.5, 81.666667, 33.333333), ), ((48.333333, 85.0, 
        33.333333), ), ((47.5, 88.333333, 33.333333), ), ((45.416667, 87.5, 
        33.333333), ), ((47.083333, 85.833333, 33.333333), ), ((46.666667, 
        83.333333, 33.333333), ), ((44.583333, 82.5, 33.333333), ), ((
        42.916667, 84.166667, 33.333333), ), ((43.333333, 86.666667, 
        33.333333), ), ((6.666667, 90.0, 33.333333), ), ((0.0, 93.333333, 
        16.666667), ), ((0.0, 96.666667, 33.333333), ), ((2.5, 91.666667, 
        33.333333), ), ((1.666667, 95.0, 33.333333), ), ((2.5, 98.333333, 
        33.333333), ), ((7.5, 91.666667, 33.333333), ), ((8.333333, 95.0, 
        33.333333), ), ((7.5, 98.333333, 33.333333), ), ((5.416667, 97.5, 
        33.333333), ), ((7.083333, 95.833333, 33.333333), ), ((6.666667, 
        93.333333, 33.333333), ), ((4.583333, 92.5, 33.333333), ), ((2.916667, 
        94.166667, 33.333333), ), ((3.333333, 96.666667, 33.333333), ), ((
        16.666667, 90.0, 33.333333), ), ((10.0, 93.333333, 16.666667), ), ((
        10.0, 96.666667, 33.333333), ), ((12.5, 91.666667, 33.333333), ), ((
        11.666667, 95.0, 33.333333), ), ((12.5, 98.333333, 33.333333), ), ((
        17.5, 91.666667, 33.333333), ), ((18.333333, 95.0, 33.333333), ), ((
        17.5, 98.333333, 33.333333), ), ((15.416667, 97.5, 33.333333), ), ((
        17.083333, 95.833333, 33.333333), ), ((16.666667, 93.333333, 
        33.333333), ), ((14.583333, 92.5, 33.333333), ), ((12.916667, 
        94.166667, 33.333333), ), ((13.333333, 96.666667, 33.333333), ), ((
        26.666667, 90.0, 33.333333), ), ((20.0, 93.333333, 16.666667), ), ((
        20.0, 96.666667, 33.333333), ), ((22.5, 91.666667, 33.333333), ), ((
        21.666667, 95.0, 33.333333), ), ((22.5, 98.333333, 33.333333), ), ((
        27.5, 91.666667, 33.333333), ), ((28.333333, 95.0, 33.333333), ), ((
        27.5, 98.333333, 33.333333), ), ((25.416667, 97.5, 33.333333), ), ((
        27.083333, 95.833333, 33.333333), ), ((26.666667, 93.333333, 
        33.333333), ), ((24.583333, 92.5, 33.333333), ), ((22.916667, 
        94.166667, 33.333333), ), ((23.333333, 96.666667, 33.333333), ), ((
        36.666667, 90.0, 33.333333), ), ((30.0, 93.333333, 16.666667), ), ((
        30.0, 96.666667, 33.333333), ), ((32.5, 91.666667, 33.333333), ), ((
        31.666667, 95.0, 33.333333), ), ((32.5, 98.333333, 33.333333), ), ((
        37.5, 91.666667, 33.333333), ), ((38.333333, 95.0, 33.333333), ), ((
        37.5, 98.333333, 33.333333), ), ((35.416667, 97.5, 33.333333), ), ((
        37.083333, 95.833333, 33.333333), ), ((36.666667, 93.333333, 
        33.333333), ), ((34.583333, 92.5, 33.333333), ), ((32.916667, 
        94.166667, 33.333333), ), ((33.333333, 96.666667, 33.333333), ), ((
        46.666667, 90.0, 33.333333), ), ((50.0, 96.666667, 16.666667), ), ((
        50.0, 93.333333, 33.333333), ), ((40.0, 93.333333, 16.666667), ), ((
        40.0, 96.666667, 33.333333), ), ((42.5, 91.666667, 33.333333), ), ((
        41.666667, 95.0, 33.333333), ), ((42.5, 98.333333, 33.333333), ), ((
        47.5, 91.666667, 33.333333), ), ((48.333333, 95.0, 33.333333), ), ((
        47.5, 98.333333, 33.333333), ), ((45.416667, 97.5, 33.333333), ))+\
        f.findAt(((47.083333, 95.833333, 33.333333), ), ((46.666667, 93.333333, 
        33.333333), ), ((44.583333, 92.5, 33.333333), ), ((42.916667, 
        94.166667, 33.333333), ), ((43.333333, 96.666667, 33.333333), ), ((
        6.666667, 100.0, 33.333333), ), ((0.0, 103.333333, 16.666667), ), ((
        0.0, 106.666667, 33.333333), ), ((2.5, 101.666667, 33.333333), ), ((
        1.666667, 105.0, 33.333333), ), ((2.5, 108.333333, 33.333333), ), ((
        7.5, 101.666667, 33.333333), ), ((8.333333, 105.0, 33.333333), ), ((
        7.5, 108.333333, 33.333333), ), ((5.416667, 107.5, 33.333333), ), ((
        7.083333, 105.833333, 33.333333), ), ((6.666667, 103.333333, 
        33.333333), ), ((4.583333, 102.5, 33.333333), ), ((2.916667, 
        104.166667, 33.333333), ), ((3.333333, 106.666667, 33.333333), ), ((
        16.666667, 100.0, 33.333333), ), ((10.0, 103.333333, 16.666667), ), ((
        10.0, 106.666667, 33.333333), ), ((12.5, 101.666667, 33.333333), ), ((
        11.666667, 105.0, 33.333333), ), ((12.5, 108.333333, 33.333333), ), ((
        17.5, 101.666667, 33.333333), ), ((18.333333, 105.0, 33.333333), ), ((
        17.5, 108.333333, 33.333333), ), ((15.416667, 107.5, 33.333333), ), ((
        17.083333, 105.833333, 33.333333), ), ((16.666667, 103.333333, 
        33.333333), ), ((14.583333, 102.5, 33.333333), ), ((12.916667, 
        104.166667, 33.333333), ), ((13.333333, 106.666667, 33.333333), ), ((
        26.666667, 100.0, 33.333333), ), ((20.0, 103.333333, 16.666667), ), ((
        20.0, 106.666667, 33.333333), ), ((22.5, 101.666667, 33.333333), ), ((
        21.666667, 105.0, 33.333333), ), ((22.5, 108.333333, 33.333333), ), ((
        27.5, 101.666667, 33.333333), ), ((28.333333, 105.0, 33.333333), ), ((
        27.5, 108.333333, 33.333333), ), ((25.416667, 107.5, 33.333333), ), ((
        27.083333, 105.833333, 33.333333), ), ((26.666667, 103.333333, 
        33.333333), ), ((24.583333, 102.5, 33.333333), ), ((22.916667, 
        104.166667, 33.333333), ), ((23.333333, 106.666667, 33.333333), ), ((
        36.666667, 100.0, 33.333333), ), ((30.0, 103.333333, 16.666667), ), ((
        30.0, 106.666667, 33.333333), ), ((32.5, 101.666667, 33.333333), ), ((
        31.666667, 105.0, 33.333333), ), ((32.5, 108.333333, 33.333333), ), ((
        37.5, 101.666667, 33.333333), ), ((38.333333, 105.0, 33.333333), ), ((
        37.5, 108.333333, 33.333333), ), ((35.416667, 107.5, 33.333333), ), ((
        37.083333, 105.833333, 33.333333), ), ((36.666667, 103.333333, 
        33.333333), ), ((34.583333, 102.5, 33.333333), ), ((32.916667, 
        104.166667, 33.333333), ), ((33.333333, 106.666667, 33.333333), ), ((
        46.666667, 100.0, 33.333333), ), ((50.0, 106.666667, 16.666667), ), ((
        50.0, 103.333333, 33.333333), ), ((40.0, 103.333333, 16.666667), ), ((
        40.0, 106.666667, 33.333333), ), ((42.5, 101.666667, 33.333333), ), ((
        41.666667, 105.0, 33.333333), ), ((42.5, 108.333333, 33.333333), ), ((
        47.5, 101.666667, 33.333333), ), ((48.333333, 105.0, 33.333333), ), ((
        47.5, 108.333333, 33.333333), ), ((45.416667, 107.5, 33.333333), ), ((
        47.083333, 105.833333, 33.333333), ), ((46.666667, 103.333333, 
        33.333333), ), ((44.583333, 102.5, 33.333333), ), ((42.916667, 
        104.166667, 33.333333), ), ((43.333333, 106.666667, 33.333333), ), ((
        6.666667, 110.0, 33.333333), ), ((0.0, 113.333333, 16.666667), ), ((
        0.0, 116.666667, 33.333333), ), ((2.5, 111.666667, 33.333333), ), ((
        1.666667, 115.0, 33.333333), ), ((2.5, 118.333333, 33.333333), ), ((
        7.5, 111.666667, 33.333333), ), ((8.333333, 115.0, 33.333333), ), ((
        7.5, 118.333333, 33.333333), ), ((5.416667, 117.5, 33.333333), ), ((
        7.083333, 115.833333, 33.333333), ), ((6.666667, 113.333333, 
        33.333333), ), ((4.583333, 112.5, 33.333333), ), ((2.916667, 
        114.166667, 33.333333), ), ((3.333333, 116.666667, 33.333333), ), ((
        16.666667, 110.0, 33.333333), ), ((10.0, 113.333333, 16.666667), ), ((
        10.0, 116.666667, 33.333333), ), ((12.5, 111.666667, 33.333333), ), ((
        11.666667, 115.0, 33.333333), ), ((12.5, 118.333333, 33.333333), ), ((
        17.5, 111.666667, 33.333333), ), ((18.333333, 115.0, 33.333333), ), ((
        17.5, 118.333333, 33.333333), ), ((15.416667, 117.5, 33.333333), ), ((
        17.083333, 115.833333, 33.333333), ), ((16.666667, 113.333333, 
        33.333333), ), ((14.583333, 112.5, 33.333333), ), ((12.916667, 
        114.166667, 33.333333), ), ((13.333333, 116.666667, 33.333333), ), ((
        26.666667, 110.0, 33.333333), ), ((20.0, 113.333333, 16.666667), ), ((
        20.0, 116.666667, 33.333333), ), ((22.5, 111.666667, 33.333333), ), ((
        21.666667, 115.0, 33.333333), ), ((22.5, 118.333333, 33.333333), ), ((
        27.5, 111.666667, 33.333333), ), ((28.333333, 115.0, 33.333333), ), ((
        27.5, 118.333333, 33.333333), ), ((25.416667, 117.5, 33.333333), ), ((
        27.083333, 115.833333, 33.333333), ), ((26.666667, 113.333333, 
        33.333333), ), ((24.583333, 112.5, 33.333333), ), ((22.916667, 
        114.166667, 33.333333), ), ((23.333333, 116.666667, 33.333333), ), ((
        36.666667, 110.0, 33.333333), ), ((30.0, 113.333333, 16.666667), ), ((
        30.0, 116.666667, 33.333333), ), ((32.5, 111.666667, 33.333333), ), ((
        31.666667, 115.0, 33.333333), ), ((32.5, 118.333333, 33.333333), ), ((
        37.5, 111.666667, 33.333333), ), ((38.333333, 115.0, 33.333333), ), ((
        37.5, 118.333333, 33.333333), ), ((35.416667, 117.5, 33.333333), ), ((
        37.083333, 115.833333, 33.333333), ), ((36.666667, 113.333333, 
        33.333333), ), ((34.583333, 112.5, 33.333333), ), ((32.916667, 
        114.166667, 33.333333), ), ((33.333333, 116.666667, 33.333333), ), ((
        46.666667, 110.0, 33.333333), ), ((50.0, 116.666667, 16.666667), ), ((
        50.0, 113.333333, 33.333333), ), ((40.0, 113.333333, 16.666667), ), ((
        40.0, 116.666667, 33.333333), ), ((42.5, 111.666667, 33.333333), ), ((
        41.666667, 115.0, 33.333333), ), ((42.5, 118.333333, 33.333333), ), ((
        47.5, 111.666667, 33.333333), ), ((48.333333, 115.0, 33.333333), ), ((
        47.5, 118.333333, 33.333333), ), ((45.416667, 117.5, 33.333333), ), ((
        47.083333, 115.833333, 33.333333), ), ((46.666667, 113.333333, 
        33.333333), ), ((44.583333, 112.5, 33.333333), ), ((42.916667, 
        114.166667, 33.333333), ), ((43.333333, 116.666667, 33.333333), ), ((
        6.666667, 120.0, 33.333333), ), ((0.0, 123.333333, 16.666667), ), ((
        0.0, 126.666667, 33.333333), ), ((2.5, 121.666667, 33.333333), ), ((
        1.666667, 125.0, 33.333333), ), ((2.5, 128.333333, 33.333333), ), ((
        7.5, 121.666667, 33.333333), ), ((8.333333, 125.0, 33.333333), ), ((
        7.5, 128.333333, 33.333333), ), ((5.416667, 127.5, 33.333333), ), ((
        7.083333, 125.833333, 33.333333), ), ((6.666667, 123.333333, 
        33.333333), ), ((4.583333, 122.5, 33.333333), ), ((2.916667, 
        124.166667, 33.333333), ), ((3.333333, 126.666667, 33.333333), ), ((
        16.666667, 120.0, 33.333333), ), ((10.0, 123.333333, 16.666667), ), ((
        10.0, 126.666667, 33.333333), ), ((12.5, 121.666667, 33.333333), ), ((
        11.666667, 125.0, 33.333333), ), ((12.5, 128.333333, 33.333333), ), ((
        17.5, 121.666667, 33.333333), ), ((18.333333, 125.0, 33.333333), ), ((
        17.5, 128.333333, 33.333333), ), ((15.416667, 127.5, 33.333333), ), ((
        17.083333, 125.833333, 33.333333), ), ((16.666667, 123.333333, 
        33.333333), ), ((14.583333, 122.5, 33.333333), ), ((12.916667, 
        124.166667, 33.333333), ), ((13.333333, 126.666667, 33.333333), ), ((
        26.666667, 120.0, 33.333333), ), ((20.0, 123.333333, 16.666667), ), ((
        20.0, 126.666667, 33.333333), ), ((22.5, 121.666667, 33.333333), ), ((
        21.666667, 125.0, 33.333333), ), ((22.5, 128.333333, 33.333333), ), ((
        27.5, 121.666667, 33.333333), ), ((28.333333, 125.0, 33.333333), ), ((
        27.5, 128.333333, 33.333333), ), ((25.416667, 127.5, 33.333333), ), ((
        27.083333, 125.833333, 33.333333), ), ((26.666667, 123.333333, 
        33.333333), ), ((24.583333, 122.5, 33.333333), ), ((22.916667, 
        124.166667, 33.333333), ), ((23.333333, 126.666667, 33.333333), ), ((
        36.666667, 120.0, 33.333333), ), ((30.0, 123.333333, 16.666667), ), ((
        30.0, 126.666667, 33.333333), ), ((32.5, 121.666667, 33.333333), ), ((
        31.666667, 125.0, 33.333333), ), ((32.5, 128.333333, 33.333333), ), ((
        37.5, 121.666667, 33.333333), ), ((38.333333, 125.0, 33.333333), ), ((
        37.5, 128.333333, 33.333333), ), ((35.416667, 127.5, 33.333333), ), ((
        37.083333, 125.833333, 33.333333), ), ((36.666667, 123.333333, 
        33.333333), ), ((34.583333, 122.5, 33.333333), ), ((32.916667, 
        124.166667, 33.333333), ), ((33.333333, 126.666667, 33.333333), ), ((
        46.666667, 120.0, 33.333333), ), ((50.0, 126.666667, 16.666667), ), ((
        50.0, 123.333333, 33.333333), ), ((40.0, 123.333333, 16.666667), ), ((
        40.0, 126.666667, 33.333333), ), ((42.5, 121.666667, 33.333333), ), ((
        41.666667, 125.0, 33.333333), ), ((42.5, 128.333333, 33.333333), ), ((
        47.5, 121.666667, 33.333333), ), ((48.333333, 125.0, 33.333333), ), ((
        47.5, 128.333333, 33.333333), ), ((45.416667, 127.5, 33.333333), ), ((
        47.083333, 125.833333, 33.333333), ), ((46.666667, 123.333333, 
        33.333333), ), ((44.583333, 122.5, 33.333333), ), ((42.916667, 
        124.166667, 33.333333), ), ((43.333333, 126.666667, 33.333333), ), ((
        6.666667, 130.0, 33.333333), ), ((0.0, 133.333333, 16.666667), ), ((
        0.0, 136.666667, 33.333333), ), ((2.5, 131.666667, 33.333333), ), ((
        1.666667, 135.0, 33.333333), ), ((2.5, 138.333333, 33.333333), ), ((
        7.5, 131.666667, 33.333333), ), ((8.333333, 135.0, 33.333333), ), ((
        7.5, 138.333333, 33.333333), ), ((5.416667, 137.5, 33.333333), ), ((
        7.083333, 135.833333, 33.333333), ), ((6.666667, 133.333333, 
        33.333333), ), ((4.583333, 132.5, 33.333333), ), ((2.916667, 
        134.166667, 33.333333), ), ((3.333333, 136.666667, 33.333333), ), ((
        16.666667, 130.0, 33.333333), ), ((10.0, 133.333333, 16.666667), ), ((
        10.0, 136.666667, 33.333333), ), ((12.5, 131.666667, 33.333333), ))+\
        f.findAt(((11.666667, 135.0, 33.333333), ), ((12.5, 138.333333, 
        33.333333), ), ((17.5, 131.666667, 33.333333), ), ((18.333333, 135.0, 
        33.333333), ), ((17.5, 138.333333, 33.333333), ), ((15.416667, 137.5, 
        33.333333), ), ((17.083333, 135.833333, 33.333333), ), ((16.666667, 
        133.333333, 33.333333), ), ((14.583333, 132.5, 33.333333), ), ((
        12.916667, 134.166667, 33.333333), ), ((13.333333, 136.666667, 
        33.333333), ), ((26.666667, 130.0, 33.333333), ), ((20.0, 133.333333, 
        16.666667), ), ((20.0, 136.666667, 33.333333), ), ((22.5, 131.666667, 
        33.333333), ), ((21.666667, 135.0, 33.333333), ), ((22.5, 138.333333, 
        33.333333), ), ((27.5, 131.666667, 33.333333), ), ((28.333333, 135.0, 
        33.333333), ), ((27.5, 138.333333, 33.333333), ), ((25.416667, 137.5, 
        33.333333), ), ((27.083333, 135.833333, 33.333333), ), ((26.666667, 
        133.333333, 33.333333), ), ((24.583333, 132.5, 33.333333), ), ((
        22.916667, 134.166667, 33.333333), ), ((23.333333, 136.666667, 
        33.333333), ), ((36.666667, 130.0, 33.333333), ), ((30.0, 133.333333, 
        16.666667), ), ((30.0, 136.666667, 33.333333), ), ((32.5, 131.666667, 
        33.333333), ), ((31.666667, 135.0, 33.333333), ), ((32.5, 138.333333, 
        33.333333), ), ((37.5, 131.666667, 33.333333), ), ((38.333333, 135.0, 
        33.333333), ), ((37.5, 138.333333, 33.333333), ), ((35.416667, 137.5, 
        33.333333), ), ((37.083333, 135.833333, 33.333333), ), ((36.666667, 
        133.333333, 33.333333), ), ((34.583333, 132.5, 33.333333), ), ((
        32.916667, 134.166667, 33.333333), ), ((33.333333, 136.666667, 
        33.333333), ), ((46.666667, 130.0, 33.333333), ), ((50.0, 136.666667, 
        16.666667), ), ((50.0, 133.333333, 33.333333), ), ((40.0, 133.333333, 
        16.666667), ), ((40.0, 136.666667, 33.333333), ), ((42.5, 131.666667, 
        33.333333), ), ((41.666667, 135.0, 33.333333), ), ((42.5, 138.333333, 
        33.333333), ), ((47.5, 131.666667, 33.333333), ), ((48.333333, 135.0, 
        33.333333), ), ((47.5, 138.333333, 33.333333), ), ((45.416667, 137.5, 
        33.333333), ), ((47.083333, 135.833333, 33.333333), ), ((46.666667, 
        133.333333, 33.333333), ), ((44.583333, 132.5, 33.333333), ), ((
        42.916667, 134.166667, 33.333333), ), ((43.333333, 136.666667, 
        33.333333), ), ((6.666667, 140.0, 33.333333), ), ((0.0, 143.333333, 
        16.666667), ), ((0.0, 146.666667, 33.333333), ), ((2.5, 141.666667, 
        33.333333), ), ((1.666667, 145.0, 33.333333), ), ((2.5, 148.333333, 
        33.333333), ), ((7.5, 141.666667, 33.333333), ), ((8.333333, 145.0, 
        33.333333), ), ((7.5, 148.333333, 33.333333), ), ((5.416667, 147.5, 
        33.333333), ), ((7.083333, 145.833333, 33.333333), ), ((6.666667, 
        143.333333, 33.333333), ), ((4.583333, 142.5, 33.333333), ), ((
        2.916667, 144.166667, 33.333333), ), ((3.333333, 146.666667, 
        33.333333), ), ((16.666667, 140.0, 33.333333), ), ((10.0, 143.333333, 
        16.666667), ), ((10.0, 146.666667, 33.333333), ), ((12.5, 141.666667, 
        33.333333), ), ((11.666667, 145.0, 33.333333), ), ((12.5, 148.333333, 
        33.333333), ), ((17.5, 141.666667, 33.333333), ), ((18.333333, 145.0, 
        33.333333), ), ((17.5, 148.333333, 33.333333), ), ((15.416667, 147.5, 
        33.333333), ), ((17.083333, 145.833333, 33.333333), ), ((16.666667, 
        143.333333, 33.333333), ), ((14.583333, 142.5, 33.333333), ), ((
        12.916667, 144.166667, 33.333333), ), ((13.333333, 146.666667, 
        33.333333), ), ((26.666667, 140.0, 33.333333), ), ((20.0, 143.333333, 
        16.666667), ), ((20.0, 146.666667, 33.333333), ), ((22.5, 141.666667, 
        33.333333), ), ((21.666667, 145.0, 33.333333), ), ((22.5, 148.333333, 
        33.333333), ), ((27.5, 141.666667, 33.333333), ), ((28.333333, 145.0, 
        33.333333), ), ((27.5, 148.333333, 33.333333), ), ((25.416667, 147.5, 
        33.333333), ), ((27.083333, 145.833333, 33.333333), ), ((26.666667, 
        143.333333, 33.333333), ), ((24.583333, 142.5, 33.333333), ), ((
        22.916667, 144.166667, 33.333333), ), ((23.333333, 146.666667, 
        33.333333), ), ((36.666667, 140.0, 33.333333), ), ((30.0, 143.333333, 
        16.666667), ), ((30.0, 146.666667, 33.333333), ), ((32.5, 141.666667, 
        33.333333), ), ((31.666667, 145.0, 33.333333), ), ((32.5, 148.333333, 
        33.333333), ), ((37.5, 141.666667, 33.333333), ), ((38.333333, 145.0, 
        33.333333), ), ((37.5, 148.333333, 33.333333), ), ((35.416667, 147.5, 
        33.333333), ), ((37.083333, 145.833333, 33.333333), ), ((36.666667, 
        143.333333, 33.333333), ), ((34.583333, 142.5, 33.333333), ), ((
        32.916667, 144.166667, 33.333333), ), ((33.333333, 146.666667, 
        33.333333), ), ((46.666667, 140.0, 33.333333), ), ((50.0, 146.666667, 
        16.666667), ), ((50.0, 143.333333, 33.333333), ), ((40.0, 143.333333, 
        16.666667), ), ((40.0, 146.666667, 33.333333), ), ((42.5, 141.666667, 
        33.333333), ), ((41.666667, 145.0, 33.333333), ), ((42.5, 148.333333, 
        33.333333), ), ((47.5, 141.666667, 33.333333), ), ((48.333333, 145.0, 
        33.333333), ), ((47.5, 148.333333, 33.333333), ), ((45.416667, 147.5, 
        33.333333), ), ((47.083333, 145.833333, 33.333333), ), ((46.666667, 
        143.333333, 33.333333), ), ((44.583333, 142.5, 33.333333), ), ((
        42.916667, 144.166667, 33.333333), ), ((43.333333, 146.666667, 
        33.333333), ), ((6.666667, 150.0, 33.333333), ), ((0.0, 153.333333, 
        16.666667), ), ((0.0, 156.666667, 33.333333), ), ((2.5, 151.666667, 
        33.333333), ), ((1.666667, 155.0, 33.333333), ), ((2.5, 158.333333, 
        33.333333), ), ((7.5, 151.666667, 33.333333), ), ((8.333333, 155.0, 
        33.333333), ), ((7.5, 158.333333, 33.333333), ), ((5.416667, 157.5, 
        33.333333), ), ((7.083333, 155.833333, 33.333333), ), ((6.666667, 
        153.333333, 33.333333), ), ((4.583333, 152.5, 33.333333), ), ((
        2.916667, 154.166667, 33.333333), ), ((3.333333, 156.666667, 
        33.333333), ), ((16.666667, 150.0, 33.333333), ), ((10.0, 153.333333, 
        16.666667), ), ((10.0, 156.666667, 33.333333), ), ((12.5, 151.666667, 
        33.333333), ), ((11.666667, 155.0, 33.333333), ), ((12.5, 158.333333, 
        33.333333), ), ((17.5, 151.666667, 33.333333), ), ((18.333333, 155.0, 
        33.333333), ), ((17.5, 158.333333, 33.333333), ), ((15.416667, 157.5, 
        33.333333), ), ((17.083333, 155.833333, 33.333333), ), ((16.666667, 
        153.333333, 33.333333), ), ((14.583333, 152.5, 33.333333), ), ((
        12.916667, 154.166667, 33.333333), ), ((13.333333, 156.666667, 
        33.333333), ), ((26.666667, 150.0, 33.333333), ), ((20.0, 153.333333, 
        16.666667), ), ((20.0, 156.666667, 33.333333), ), ((22.5, 151.666667, 
        33.333333), ), ((21.666667, 155.0, 33.333333), ), ((22.5, 158.333333, 
        33.333333), ), ((27.5, 151.666667, 33.333333), ), ((28.333333, 155.0, 
        33.333333), ), ((27.5, 158.333333, 33.333333), ), ((25.416667, 157.5, 
        33.333333), ), ((27.083333, 155.833333, 33.333333), ), ((26.666667, 
        153.333333, 33.333333), ), ((24.583333, 152.5, 33.333333), ), ((
        22.916667, 154.166667, 33.333333), ), ((23.333333, 156.666667, 
        33.333333), ), ((36.666667, 150.0, 33.333333), ), ((30.0, 153.333333, 
        16.666667), ), ((30.0, 156.666667, 33.333333), ), ((32.5, 151.666667, 
        33.333333), ), ((31.666667, 155.0, 33.333333), ), ((32.5, 158.333333, 
        33.333333), ), ((37.5, 151.666667, 33.333333), ), ((38.333333, 155.0, 
        33.333333), ), ((37.5, 158.333333, 33.333333), ), ((35.416667, 157.5, 
        33.333333), ), ((37.083333, 155.833333, 33.333333), ), ((36.666667, 
        153.333333, 33.333333), ), ((34.583333, 152.5, 33.333333), ), ((
        32.916667, 154.166667, 33.333333), ), ((33.333333, 156.666667, 
        33.333333), ), ((46.666667, 150.0, 33.333333), ), ((50.0, 156.666667, 
        16.666667), ), ((50.0, 153.333333, 33.333333), ), ((40.0, 153.333333, 
        16.666667), ), ((40.0, 156.666667, 33.333333), ), ((42.5, 151.666667, 
        33.333333), ), ((41.666667, 155.0, 33.333333), ), ((42.5, 158.333333, 
        33.333333), ), ((47.5, 151.666667, 33.333333), ), ((48.333333, 155.0, 
        33.333333), ), ((47.5, 158.333333, 33.333333), ), ((45.416667, 157.5, 
        33.333333), ), ((47.083333, 155.833333, 33.333333), ), ((46.666667, 
        153.333333, 33.333333), ), ((44.583333, 152.5, 33.333333), ), ((
        42.916667, 154.166667, 33.333333), ), ((43.333333, 156.666667, 
        33.333333), ), ((6.666667, 160.0, 33.333333), ), ((0.0, 163.333333, 
        16.666667), ), ((0.0, 166.666667, 33.333333), ), ((2.5, 161.666667, 
        33.333333), ), ((1.666667, 165.0, 33.333333), ), ((2.5, 168.333333, 
        33.333333), ), ((7.5, 161.666667, 33.333333), ), ((8.333333, 165.0, 
        33.333333), ), ((7.5, 168.333333, 33.333333), ), ((5.416667, 167.5, 
        33.333333), ), ((7.083333, 165.833333, 33.333333), ), ((6.666667, 
        163.333333, 33.333333), ), ((4.583333, 162.5, 33.333333), ), ((
        2.916667, 164.166667, 33.333333), ), ((3.333333, 166.666667, 
        33.333333), ), ((16.666667, 160.0, 33.333333), ), ((10.0, 163.333333, 
        16.666667), ), ((10.0, 166.666667, 33.333333), ), ((12.5, 161.666667, 
        33.333333), ), ((11.666667, 165.0, 33.333333), ), ((12.5, 168.333333, 
        33.333333), ), ((17.5, 161.666667, 33.333333), ), ((18.333333, 165.0, 
        33.333333), ), ((17.5, 168.333333, 33.333333), ), ((15.416667, 167.5, 
        33.333333), ), ((17.083333, 165.833333, 33.333333), ), ((16.666667, 
        163.333333, 33.333333), ), ((14.583333, 162.5, 33.333333), ), ((
        12.916667, 164.166667, 33.333333), ), ((13.333333, 166.666667, 
        33.333333), ), ((26.666667, 160.0, 33.333333), ), ((20.0, 163.333333, 
        16.666667), ), ((20.0, 166.666667, 33.333333), ), ((22.5, 161.666667, 
        33.333333), ), ((21.666667, 165.0, 33.333333), ), ((22.5, 168.333333, 
        33.333333), ), ((27.5, 161.666667, 33.333333), ), ((28.333333, 165.0, 
        33.333333), ), ((27.5, 168.333333, 33.333333), ), ((25.416667, 167.5, 
        33.333333), ), ((27.083333, 165.833333, 33.333333), ), ((26.666667, 
        163.333333, 33.333333), ), ((24.583333, 162.5, 33.333333), ))+f.findAt(
        ((22.916667, 164.166667, 33.333333), ), ((23.333333, 166.666667, 
        33.333333), ), ((36.666667, 160.0, 33.333333), ), ((30.0, 163.333333, 
        16.666667), ), ((30.0, 166.666667, 33.333333), ), ((32.5, 161.666667, 
        33.333333), ), ((31.666667, 165.0, 33.333333), ), ((32.5, 168.333333, 
        33.333333), ), ((37.5, 161.666667, 33.333333), ), ((38.333333, 165.0, 
        33.333333), ), ((37.5, 168.333333, 33.333333), ), ((35.416667, 167.5, 
        33.333333), ), ((37.083333, 165.833333, 33.333333), ), ((36.666667, 
        163.333333, 33.333333), ), ((34.583333, 162.5, 33.333333), ), ((
        32.916667, 164.166667, 33.333333), ), ((33.333333, 166.666667, 
        33.333333), ), ((46.666667, 160.0, 33.333333), ), ((50.0, 166.666667, 
        16.666667), ), ((50.0, 163.333333, 33.333333), ), ((40.0, 163.333333, 
        16.666667), ), ((40.0, 166.666667, 33.333333), ), ((42.5, 161.666667, 
        33.333333), ), ((41.666667, 165.0, 33.333333), ), ((42.5, 168.333333, 
        33.333333), ), ((47.5, 161.666667, 33.333333), ), ((48.333333, 165.0, 
        33.333333), ), ((47.5, 168.333333, 33.333333), ), ((45.416667, 167.5, 
        33.333333), ), ((47.083333, 165.833333, 33.333333), ), ((46.666667, 
        163.333333, 33.333333), ), ((44.583333, 162.5, 33.333333), ), ((
        42.916667, 164.166667, 33.333333), ), ((43.333333, 166.666667, 
        33.333333), ), ((6.666667, 170.0, 33.333333), ), ((0.0, 173.333333, 
        16.666667), ), ((0.0, 176.666667, 33.333333), ), ((2.5, 171.666667, 
        33.333333), ), ((1.666667, 175.0, 33.333333), ), ((2.5, 178.333333, 
        33.333333), ), ((7.5, 171.666667, 33.333333), ), ((8.333333, 175.0, 
        33.333333), ), ((7.5, 178.333333, 33.333333), ), ((5.416667, 177.5, 
        33.333333), ), ((7.083333, 175.833333, 33.333333), ), ((6.666667, 
        173.333333, 33.333333), ), ((4.583333, 172.5, 33.333333), ), ((
        2.916667, 174.166667, 33.333333), ), ((3.333333, 176.666667, 
        33.333333), ), ((16.666667, 170.0, 33.333333), ), ((10.0, 173.333333, 
        16.666667), ), ((10.0, 176.666667, 33.333333), ), ((12.5, 171.666667, 
        33.333333), ), ((11.666667, 175.0, 33.333333), ), ((12.5, 178.333333, 
        33.333333), ), ((17.5, 171.666667, 33.333333), ), ((18.333333, 175.0, 
        33.333333), ), ((17.5, 178.333333, 33.333333), ), ((15.416667, 177.5, 
        33.333333), ), ((17.083333, 175.833333, 33.333333), ), ((16.666667, 
        173.333333, 33.333333), ), ((14.583333, 172.5, 33.333333), ), ((
        12.916667, 174.166667, 33.333333), ), ((13.333333, 176.666667, 
        33.333333), ), ((26.666667, 170.0, 33.333333), ), ((20.0, 173.333333, 
        16.666667), ), ((20.0, 176.666667, 33.333333), ), ((22.5, 171.666667, 
        33.333333), ), ((21.666667, 175.0, 33.333333), ), ((22.5, 178.333333, 
        33.333333), ), ((27.5, 171.666667, 33.333333), ), ((28.333333, 175.0, 
        33.333333), ), ((27.5, 178.333333, 33.333333), ), ((25.416667, 177.5, 
        33.333333), ), ((27.083333, 175.833333, 33.333333), ), ((26.666667, 
        173.333333, 33.333333), ), ((24.583333, 172.5, 33.333333), ), ((
        22.916667, 174.166667, 33.333333), ), ((23.333333, 176.666667, 
        33.333333), ), ((36.666667, 170.0, 33.333333), ), ((30.0, 173.333333, 
        16.666667), ), ((30.0, 176.666667, 33.333333), ), ((32.5, 171.666667, 
        33.333333), ), ((31.666667, 175.0, 33.333333), ), ((32.5, 178.333333, 
        33.333333), ), ((37.5, 171.666667, 33.333333), ), ((38.333333, 175.0, 
        33.333333), ), ((37.5, 178.333333, 33.333333), ), ((35.416667, 177.5, 
        33.333333), ), ((37.083333, 175.833333, 33.333333), ), ((36.666667, 
        173.333333, 33.333333), ), ((34.583333, 172.5, 33.333333), ), ((
        32.916667, 174.166667, 33.333333), ), ((33.333333, 176.666667, 
        33.333333), ), ((46.666667, 170.0, 33.333333), ), ((50.0, 176.666667, 
        16.666667), ), ((50.0, 173.333333, 33.333333), ), ((40.0, 173.333333, 
        16.666667), ), ((40.0, 176.666667, 33.333333), ), ((42.5, 171.666667, 
        33.333333), ), ((41.666667, 175.0, 33.333333), ), ((42.5, 178.333333, 
        33.333333), ), ((47.5, 171.666667, 33.333333), ), ((48.333333, 175.0, 
        33.333333), ), ((47.5, 178.333333, 33.333333), ), ((45.416667, 177.5, 
        33.333333), ), ((47.083333, 175.833333, 33.333333), ), ((46.666667, 
        173.333333, 33.333333), ), ((44.583333, 172.5, 33.333333), ), ((
        42.916667, 174.166667, 33.333333), ), ((43.333333, 176.666667, 
        33.333333), ), ((6.666667, 180.0, 33.333333), ), ((0.0, 183.333333, 
        16.666667), ), ((0.0, 186.666667, 33.333333), ), ((2.5, 181.666667, 
        33.333333), ), ((1.666667, 185.0, 33.333333), ), ((2.5, 188.333333, 
        33.333333), ), ((7.5, 181.666667, 33.333333), ), ((8.333333, 185.0, 
        33.333333), ), ((7.5, 188.333333, 33.333333), ), ((5.416667, 187.5, 
        33.333333), ), ((7.083333, 185.833333, 33.333333), ), ((6.666667, 
        183.333333, 33.333333), ), ((4.583333, 182.5, 33.333333), ), ((
        2.916667, 184.166667, 33.333333), ), ((3.333333, 186.666667, 
        33.333333), ), ((16.666667, 180.0, 33.333333), ), ((10.0, 183.333333, 
        16.666667), ), ((10.0, 186.666667, 33.333333), ), ((12.5, 181.666667, 
        33.333333), ), ((11.666667, 185.0, 33.333333), ), ((12.5, 188.333333, 
        33.333333), ), ((17.5, 181.666667, 33.333333), ), ((18.333333, 185.0, 
        33.333333), ), ((17.5, 188.333333, 33.333333), ), ((15.416667, 187.5, 
        33.333333), ), ((17.083333, 185.833333, 33.333333), ), ((16.666667, 
        183.333333, 33.333333), ), ((14.583333, 182.5, 33.333333), ), ((
        12.916667, 184.166667, 33.333333), ), ((13.333333, 186.666667, 
        33.333333), ), ((26.666667, 180.0, 33.333333), ), ((20.0, 183.333333, 
        16.666667), ), ((20.0, 186.666667, 33.333333), ), ((22.5, 181.666667, 
        33.333333), ), ((21.666667, 185.0, 33.333333), ), ((22.5, 188.333333, 
        33.333333), ), ((27.5, 181.666667, 33.333333), ), ((28.333333, 185.0, 
        33.333333), ), ((27.5, 188.333333, 33.333333), ), ((25.416667, 187.5, 
        33.333333), ), ((27.083333, 185.833333, 33.333333), ), ((26.666667, 
        183.333333, 33.333333), ), ((24.583333, 182.5, 33.333333), ), ((
        22.916667, 184.166667, 33.333333), ), ((23.333333, 186.666667, 
        33.333333), ), ((36.666667, 180.0, 33.333333), ), ((30.0, 183.333333, 
        16.666667), ), ((30.0, 186.666667, 33.333333), ), ((32.5, 181.666667, 
        33.333333), ), ((31.666667, 185.0, 33.333333), ), ((32.5, 188.333333, 
        33.333333), ), ((37.5, 181.666667, 33.333333), ), ((38.333333, 185.0, 
        33.333333), ), ((37.5, 188.333333, 33.333333), ), ((35.416667, 187.5, 
        33.333333), ), ((37.083333, 185.833333, 33.333333), ), ((36.666667, 
        183.333333, 33.333333), ), ((34.583333, 182.5, 33.333333), ), ((
        32.916667, 184.166667, 33.333333), ), ((33.333333, 186.666667, 
        33.333333), ), ((46.666667, 180.0, 33.333333), ), ((50.0, 186.666667, 
        16.666667), ), ((50.0, 183.333333, 33.333333), ), ((40.0, 183.333333, 
        16.666667), ), ((40.0, 186.666667, 33.333333), ), ((42.5, 181.666667, 
        33.333333), ), ((41.666667, 185.0, 33.333333), ), ((42.5, 188.333333, 
        33.333333), ), ((47.5, 181.666667, 33.333333), ), ((48.333333, 185.0, 
        33.333333), ), ((47.5, 188.333333, 33.333333), ), ((45.416667, 187.5, 
        33.333333), ), ((47.083333, 185.833333, 33.333333), ), ((46.666667, 
        183.333333, 33.333333), ), ((44.583333, 182.5, 33.333333), ), ((
        42.916667, 184.166667, 33.333333), ), ((43.333333, 186.666667, 
        33.333333), ), ((6.666667, 190.0, 33.333333), ), ((3.333333, 200.0, 
        33.333333), ), ((0.0, 193.333333, 16.666667), ), ((0.0, 196.666667, 
        33.333333), ), ((2.5, 191.666667, 33.333333), ), ((1.666667, 195.0, 
        33.333333), ), ((2.5, 198.333333, 33.333333), ), ((7.5, 191.666667, 
        33.333333), ), ((8.333333, 195.0, 33.333333), ), ((7.5, 198.333333, 
        33.333333), ), ((5.416667, 197.5, 33.333333), ), ((7.083333, 
        195.833333, 33.333333), ), ((6.666667, 193.333333, 33.333333), ), ((
        4.583333, 192.5, 33.333333), ), ((2.916667, 194.166667, 33.333333), ), 
        ((3.333333, 196.666667, 33.333333), ), ((16.666667, 190.0, 33.333333), 
        ), ((13.333333, 200.0, 33.333333), ), ((10.0, 193.333333, 16.666667), 
        ), ((10.0, 196.666667, 33.333333), ), ((12.5, 191.666667, 33.333333), 
        ), ((11.666667, 195.0, 33.333333), ), ((12.5, 198.333333, 33.333333), 
        ), ((17.5, 191.666667, 33.333333), ), ((18.333333, 195.0, 33.333333), 
        ), ((17.5, 198.333333, 33.333333), ), ((15.416667, 197.5, 33.333333), 
        ), ((17.083333, 195.833333, 33.333333), ), ((16.666667, 193.333333, 
        33.333333), ), ((14.583333, 192.5, 33.333333), ), ((12.916667, 
        194.166667, 33.333333), ), ((13.333333, 196.666667, 33.333333), ), ((
        26.666667, 190.0, 33.333333), ), ((23.333333, 200.0, 33.333333), ), ((
        20.0, 193.333333, 16.666667), ), ((20.0, 196.666667, 33.333333), ), ((
        22.5, 191.666667, 33.333333), ), ((21.666667, 195.0, 33.333333), ), ((
        22.5, 198.333333, 33.333333), ), ((27.5, 191.666667, 33.333333), ), ((
        28.333333, 195.0, 33.333333), ), ((27.5, 198.333333, 33.333333), ), ((
        25.416667, 197.5, 33.333333), ), ((27.083333, 195.833333, 33.333333), 
        ), ((26.666667, 193.333333, 33.333333), ), ((24.583333, 192.5, 
        33.333333), ), ((22.916667, 194.166667, 33.333333), ), ((23.333333, 
        196.666667, 33.333333), ), ((36.666667, 190.0, 33.333333), ), ((
        33.333333, 200.0, 33.333333), ), ((30.0, 193.333333, 16.666667), ), ((
        30.0, 196.666667, 33.333333), ), ((32.5, 191.666667, 33.333333), ), ((
        31.666667, 195.0, 33.333333), ), ((32.5, 198.333333, 33.333333), ), ((
        37.5, 191.666667, 33.333333), ), ((38.333333, 195.0, 33.333333), ), ((
        37.5, 198.333333, 33.333333), ), ((35.416667, 197.5, 33.333333), ), ((
        37.083333, 195.833333, 33.333333), ), ((36.666667, 193.333333, 
        33.333333), ), ((34.583333, 192.5, 33.333333), ), ((32.916667, 
        194.166667, 33.333333), ), ((33.333333, 196.666667, 33.333333), ), ((
        46.666667, 190.0, 33.333333), ), ((50.0, 196.666667, 16.666667), ), ((
        50.0, 193.333333, 33.333333), ))+f.findAt(((43.333333, 200.0, 
        33.333333), ), ((40.0, 193.333333, 16.666667), ), ((40.0, 196.666667, 
        33.333333), ), ((42.5, 191.666667, 33.333333), ), ((41.666667, 195.0, 
        33.333333), ), ((42.5, 198.333333, 33.333333), ), ((47.5, 191.666667, 
        33.333333), ), ((48.333333, 195.0, 33.333333), ), ((47.5, 198.333333, 
        33.333333), ), ((45.416667, 197.5, 33.333333), ), ((47.083333, 
        195.833333, 33.333333), ), ((46.666667, 193.333333, 33.333333), ), ((
        44.583333, 192.5, 33.333333), ), ((42.916667, 194.166667, 33.333333), 
        ), ((43.333333, 196.666667, 33.333333), ))
	p.Set(faces=faces, name='ut200')

#call swt50() for 50mm, swt100() for 100mm, swt150() for 150mm and swt200() for 200mm
def swt50():
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((2.5, 1.666667, 33.333333), ), ((1.666667, 5.0, 33.333333), 
        ), ((2.5, 8.333333, 33.333333), ), ((7.5, 1.666667, 33.333333), ), ((
        8.333333, 5.0, 33.333333), ), ((7.5, 8.333333, 33.333333), ), ((
        5.416667, 7.5, 33.333333), ), ((7.083333, 5.833333, 33.333333), ), ((
        6.666667, 3.333333, 33.333333), ), ((4.583333, 2.5, 33.333333), ), ((
        2.916667, 4.166667, 33.333333), ), ((3.333333, 6.666667, 33.333333), ), 
        ((12.5, 1.666667, 33.333333), ), ((11.666667, 5.0, 33.333333), ), ((
        12.5, 8.333333, 33.333333), ), ((17.5, 1.666667, 33.333333), ), ((
        18.333333, 5.0, 33.333333), ), ((17.5, 8.333333, 33.333333), ), ((
        15.416667, 7.5, 33.333333), ), ((17.083333, 5.833333, 33.333333), ), ((
        16.666667, 3.333333, 33.333333), ), ((14.583333, 2.5, 33.333333), ), ((
        12.916667, 4.166667, 33.333333), ), ((13.333333, 6.666667, 33.333333), 
        ), ((22.5, 1.666667, 33.333333), ), ((21.666667, 5.0, 33.333333), ), ((
        22.5, 8.333333, 33.333333), ), ((27.5, 1.666667, 33.333333), ), ((
        28.333333, 5.0, 33.333333), ), ((27.5, 8.333333, 33.333333), ), ((
        25.416667, 7.5, 33.333333), ), ((27.083333, 5.833333, 33.333333), ), ((
        26.666667, 3.333333, 33.333333), ), ((24.583333, 2.5, 33.333333), ), ((
        22.916667, 4.166667, 33.333333), ), ((23.333333, 6.666667, 33.333333), 
        ), ((32.5, 1.666667, 33.333333), ), ((31.666667, 5.0, 33.333333), ), ((
        32.5, 8.333333, 33.333333), ), ((37.5, 1.666667, 33.333333), ), ((
        38.333333, 5.0, 33.333333), ), ((37.5, 8.333333, 33.333333), ), ((
        35.416667, 7.5, 33.333333), ), ((37.083333, 5.833333, 33.333333), ), ((
        36.666667, 3.333333, 33.333333), ), ((34.583333, 2.5, 33.333333), ), ((
        32.916667, 4.166667, 33.333333), ), ((33.333333, 6.666667, 33.333333), 
        ), ((42.5, 1.666667, 33.333333), ), ((41.666667, 5.0, 33.333333), ), ((
        42.5, 8.333333, 33.333333), ), ((47.5, 1.666667, 33.333333), ), ((
        48.333333, 5.0, 33.333333), ), ((47.5, 8.333333, 33.333333), ), ((
        45.416667, 7.5, 33.333333), ), ((47.083333, 5.833333, 33.333333), ), ((
        46.666667, 3.333333, 33.333333), ), ((44.583333, 2.5, 33.333333), ), ((
        42.916667, 4.166667, 33.333333), ), ((43.333333, 6.666667, 33.333333), 
        ), ((2.5, 11.666667, 33.333333), ), ((1.666667, 15.0, 33.333333), ), ((
        2.5, 18.333333, 33.333333), ), ((7.5, 11.666667, 33.333333), ), ((
        8.333333, 15.0, 33.333333), ), ((7.5, 18.333333, 33.333333), ), ((
        5.416667, 17.5, 33.333333), ), ((7.083333, 15.833333, 33.333333), ), ((
        6.666667, 13.333333, 33.333333), ), ((4.583333, 12.5, 33.333333), ), ((
        2.916667, 14.166667, 33.333333), ), ((3.333333, 16.666667, 33.333333), 
        ), ((12.5, 11.666667, 33.333333), ), ((11.666667, 15.0, 33.333333), ), 
        ((12.5, 18.333333, 33.333333), ), ((17.5, 11.666667, 33.333333), ), ((
        18.333333, 15.0, 33.333333), ), ((17.5, 18.333333, 33.333333), ), ((
        15.416667, 17.5, 33.333333), ), ((17.083333, 15.833333, 33.333333), ), 
        ((16.666667, 13.333333, 33.333333), ), ((14.583333, 12.5, 33.333333), 
        ), ((12.916667, 14.166667, 33.333333), ), ((13.333333, 16.666667, 
        33.333333), ), ((22.5, 11.666667, 33.333333), ), ((21.666667, 15.0, 
        33.333333), ), ((22.5, 18.333333, 33.333333), ), ((27.5, 11.666667, 
        33.333333), ), ((28.333333, 15.0, 33.333333), ), ((27.5, 18.333333, 
        33.333333), ), ((25.416667, 17.5, 33.333333), ), ((27.083333, 
        15.833333, 33.333333), ), ((26.666667, 13.333333, 33.333333), ), ((
        24.583333, 12.5, 33.333333), ), ((22.916667, 14.166667, 33.333333), ), 
        ((23.333333, 16.666667, 33.333333), ), ((32.5, 11.666667, 33.333333), 
        ), ((31.666667, 15.0, 33.333333), ), ((32.5, 18.333333, 33.333333), ), 
        ((37.5, 11.666667, 33.333333), ), ((38.333333, 15.0, 33.333333), ), ((
        37.5, 18.333333, 33.333333), ), ((35.416667, 17.5, 33.333333), ), ((
        37.083333, 15.833333, 33.333333), ), ((36.666667, 13.333333, 
        33.333333), ), ((34.583333, 12.5, 33.333333), ), ((32.916667, 
        14.166667, 33.333333), ), ((33.333333, 16.666667, 33.333333), ), ((
        42.5, 11.666667, 33.333333), ), ((41.666667, 15.0, 33.333333), ), ((
        42.5, 18.333333, 33.333333), ), ((47.5, 11.666667, 33.333333), ), ((
        48.333333, 15.0, 33.333333), ), ((47.5, 18.333333, 33.333333), ), ((
        45.416667, 17.5, 33.333333), ), ((47.083333, 15.833333, 33.333333), ), 
        ((46.666667, 13.333333, 33.333333), ), ((44.583333, 12.5, 33.333333), 
        ), ((42.916667, 14.166667, 33.333333), ), ((43.333333, 16.666667, 
        33.333333), ), ((2.5, 21.666667, 33.333333), ), ((1.666667, 25.0, 
        33.333333), ), ((2.5, 28.333333, 33.333333), ), ((7.5, 21.666667, 
        33.333333), ), ((8.333333, 25.0, 33.333333), ), ((7.5, 28.333333, 
        33.333333), ), ((5.416667, 27.5, 33.333333), ), ((7.083333, 25.833333, 
        33.333333), ), ((6.666667, 23.333333, 33.333333), ), ((4.583333, 22.5, 
        33.333333), ), ((2.916667, 24.166667, 33.333333), ), ((3.333333, 
        26.666667, 33.333333), ), ((12.5, 21.666667, 33.333333), ), ((
        11.666667, 25.0, 33.333333), ), ((12.5, 28.333333, 33.333333), ), ((
        17.5, 21.666667, 33.333333), ), ((18.333333, 25.0, 33.333333), ), ((
        17.5, 28.333333, 33.333333), ), ((15.416667, 27.5, 33.333333), ), ((
        17.083333, 25.833333, 33.333333), ), ((16.666667, 23.333333, 
        33.333333), ), ((14.583333, 22.5, 33.333333), ), ((12.916667, 
        24.166667, 33.333333), ), ((13.333333, 26.666667, 33.333333), ), ((
        22.5, 21.666667, 33.333333), ), ((21.666667, 25.0, 33.333333), ), ((
        22.5, 28.333333, 33.333333), ), ((27.5, 21.666667, 33.333333), ), ((
        28.333333, 25.0, 33.333333), ), ((27.5, 28.333333, 33.333333), ), ((
        25.416667, 27.5, 33.333333), ), ((27.083333, 25.833333, 33.333333), ), 
        ((26.666667, 23.333333, 33.333333), ), ((24.583333, 22.5, 33.333333), 
        ), ((22.916667, 24.166667, 33.333333), ), ((23.333333, 26.666667, 
        33.333333), ), ((32.5, 21.666667, 33.333333), ), ((31.666667, 25.0, 
        33.333333), ), ((32.5, 28.333333, 33.333333), ), ((37.5, 21.666667, 
        33.333333), ), ((38.333333, 25.0, 33.333333), ), ((37.5, 28.333333, 
        33.333333), ), ((35.416667, 27.5, 33.333333), ), ((37.083333, 
        25.833333, 33.333333), ), ((36.666667, 23.333333, 33.333333), ), ((
        34.583333, 22.5, 33.333333), ), ((32.916667, 24.166667, 33.333333), ), 
        ((33.333333, 26.666667, 33.333333), ), ((42.5, 21.666667, 33.333333), 
        ), ((41.666667, 25.0, 33.333333), ), ((42.5, 28.333333, 33.333333), ), 
        ((47.5, 21.666667, 33.333333), ), ((48.333333, 25.0, 33.333333), ), ((
        47.5, 28.333333, 33.333333), ), ((45.416667, 27.5, 33.333333), ), ((
        47.083333, 25.833333, 33.333333), ), ((46.666667, 23.333333, 
        33.333333), ), ((44.583333, 22.5, 33.333333), ), ((42.916667, 
        24.166667, 33.333333), ), ((43.333333, 26.666667, 33.333333), ), ((2.5, 
        31.666667, 33.333333), ), ((1.666667, 35.0, 33.333333), ), ((2.5, 
        38.333333, 33.333333), ), ((7.5, 31.666667, 33.333333), ), ((8.333333, 
        35.0, 33.333333), ), ((7.5, 38.333333, 33.333333), ), ((5.416667, 37.5, 
        33.333333), ), ((7.083333, 35.833333, 33.333333), ), ((6.666667, 
        33.333333, 33.333333), ), ((4.583333, 32.5, 33.333333), ), ((2.916667, 
        34.166667, 33.333333), ), ((3.333333, 36.666667, 33.333333), ), ((12.5, 
        31.666667, 33.333333), ), ((11.666667, 35.0, 33.333333), ), ((12.5, 
        38.333333, 33.333333), ), ((17.5, 31.666667, 33.333333), ), ((
        18.333333, 35.0, 33.333333), ), ((17.5, 38.333333, 33.333333), ), ((
        15.416667, 37.5, 33.333333), ), ((17.083333, 35.833333, 33.333333), ), 
        ((16.666667, 33.333333, 33.333333), ), ((14.583333, 32.5, 33.333333), 
        ), ((12.916667, 34.166667, 33.333333), ), ((13.333333, 36.666667, 
        33.333333), ), ((22.5, 31.666667, 33.333333), ), ((21.666667, 35.0, 
        33.333333), ), ((22.5, 38.333333, 33.333333), ), ((27.5, 31.666667, 
        33.333333), ), ((28.333333, 35.0, 33.333333), ), ((27.5, 38.333333, 
        33.333333), ), ((25.416667, 37.5, 33.333333), ), ((27.083333, 
        35.833333, 33.333333), ), ((26.666667, 33.333333, 33.333333), ), ((
        24.583333, 32.5, 33.333333), ), ((22.916667, 34.166667, 33.333333), ), 
        ((23.333333, 36.666667, 33.333333), ), ((32.5, 31.666667, 33.333333), 
        ), ((31.666667, 35.0, 33.333333), ), ((32.5, 38.333333, 33.333333), ), 
        ((37.5, 31.666667, 33.333333), ), ((38.333333, 35.0, 33.333333), ), ((
        37.5, 38.333333, 33.333333), ), ((35.416667, 37.5, 33.333333), ), ((
        37.083333, 35.833333, 33.333333), ), ((36.666667, 33.333333, 
        33.333333), ), ((34.583333, 32.5, 33.333333), ), ((32.916667, 
        34.166667, 33.333333), ), ((33.333333, 36.666667, 33.333333), ), ((
        42.5, 31.666667, 33.333333), ), ((41.666667, 35.0, 33.333333), ), ((
        42.5, 38.333333, 33.333333), ), ((47.5, 31.666667, 33.333333), ), ((
        48.333333, 35.0, 33.333333), ), ((47.5, 38.333333, 33.333333), ), ((
        45.416667, 37.5, 33.333333), ), ((47.083333, 35.833333, 33.333333), ), 
        ((46.666667, 33.333333, 33.333333), ), ((44.583333, 32.5, 33.333333), 
        ), ((42.916667, 34.166667, 33.333333), ), ((43.333333, 36.666667, 
        33.333333), ), ((2.5, 41.666667, 33.333333), ), ((1.666667, 45.0, 
        33.333333), ), ((2.5, 48.333333, 33.333333), ), ((7.5, 41.666667, 
        33.333333), ), ((8.333333, 45.0, 33.333333), ), ((7.5, 48.333333, 
        33.333333), ), ((5.416667, 47.5, 33.333333), ), ((7.083333, 45.833333, 
        33.333333), ), ((6.666667, 43.333333, 33.333333), ), ((4.583333, 42.5, 
        33.333333), ), ((2.916667, 44.166667, 33.333333), ), ((3.333333, 
        46.666667, 33.333333), ), ((12.5, 41.666667, 33.333333), ), ((
        11.666667, 45.0, 33.333333), ), ((12.5, 48.333333, 33.333333), ))+\
        f.findAt(((17.5, 41.666667, 33.333333), ), ((18.333333, 45.0, 
        33.333333), ), ((17.5, 48.333333, 33.333333), ), ((15.416667, 47.5, 
        33.333333), ), ((17.083333, 45.833333, 33.333333), ), ((16.666667, 
        43.333333, 33.333333), ), ((14.583333, 42.5, 33.333333), ), ((
        12.916667, 44.166667, 33.333333), ), ((13.333333, 46.666667, 
        33.333333), ), ((22.5, 41.666667, 33.333333), ), ((21.666667, 45.0, 
        33.333333), ), ((22.5, 48.333333, 33.333333), ), ((27.5, 41.666667, 
        33.333333), ), ((28.333333, 45.0, 33.333333), ), ((27.5, 48.333333, 
        33.333333), ), ((25.416667, 47.5, 33.333333), ), ((27.083333, 
        45.833333, 33.333333), ), ((26.666667, 43.333333, 33.333333), ), ((
        24.583333, 42.5, 33.333333), ), ((22.916667, 44.166667, 33.333333), ), 
        ((23.333333, 46.666667, 33.333333), ), ((32.5, 41.666667, 33.333333), 
        ), ((31.666667, 45.0, 33.333333), ), ((32.5, 48.333333, 33.333333), ), 
        ((37.5, 41.666667, 33.333333), ), ((38.333333, 45.0, 33.333333), ), ((
        37.5, 48.333333, 33.333333), ), ((35.416667, 47.5, 33.333333), ), ((
        37.083333, 45.833333, 33.333333), ), ((36.666667, 43.333333, 
        33.333333), ), ((34.583333, 42.5, 33.333333), ), ((32.916667, 
        44.166667, 33.333333), ), ((33.333333, 46.666667, 33.333333), ), ((
        42.5, 41.666667, 33.333333), ), ((41.666667, 45.0, 33.333333), ), ((
        42.5, 48.333333, 33.333333), ), ((47.5, 41.666667, 33.333333), ), ((
        48.333333, 45.0, 33.333333), ), ((47.5, 48.333333, 33.333333), ), ((
        45.416667, 47.5, 33.333333), ), ((47.083333, 45.833333, 33.333333), ), 
        ((46.666667, 43.333333, 33.333333), ), ((44.583333, 42.5, 33.333333), 
        ), ((42.916667, 44.166667, 33.333333), ), ((43.333333, 46.666667, 
        33.333333), ))
	p.Set(faces=faces, name='swt50s')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((6.666667, 0.0, 33.333333), ), ((0.0, 3.333333, 16.666667), 
        ), ((0.0, 6.666667, 33.333333), ), ((16.666667, 0.0, 33.333333), ), ((
        10.0, 3.333333, 16.666667), ), ((10.0, 6.666667, 33.333333), ), ((
        26.666667, 0.0, 33.333333), ), ((20.0, 3.333333, 16.666667), ), ((20.0, 
        6.666667, 33.333333), ), ((36.666667, 0.0, 33.333333), ), ((30.0, 
        3.333333, 16.666667), ), ((30.0, 6.666667, 33.333333), ), ((46.666667, 
        0.0, 33.333333), ), ((50.0, 6.666667, 16.666667), ), ((50.0, 3.333333, 
        33.333333), ), ((40.0, 3.333333, 16.666667), ), ((40.0, 6.666667, 
        33.333333), ), ((6.666667, 10.0, 33.333333), ), ((0.0, 13.333333, 
        16.666667), ), ((0.0, 16.666667, 33.333333), ), ((16.666667, 10.0, 
        33.333333), ), ((10.0, 13.333333, 16.666667), ), ((10.0, 16.666667, 
        33.333333), ), ((26.666667, 10.0, 33.333333), ), ((20.0, 13.333333, 
        16.666667), ), ((20.0, 16.666667, 33.333333), ), ((36.666667, 10.0, 
        33.333333), ), ((30.0, 13.333333, 16.666667), ), ((30.0, 16.666667, 
        33.333333), ), ((46.666667, 10.0, 33.333333), ), ((50.0, 16.666667, 
        16.666667), ), ((50.0, 13.333333, 33.333333), ), ((40.0, 13.333333, 
        16.666667), ), ((40.0, 16.666667, 33.333333), ), ((6.666667, 20.0, 
        33.333333), ), ((0.0, 23.333333, 16.666667), ), ((0.0, 26.666667, 
        33.333333), ), ((16.666667, 20.0, 33.333333), ), ((10.0, 23.333333, 
        16.666667), ), ((10.0, 26.666667, 33.333333), ), ((26.666667, 20.0, 
        33.333333), ), ((20.0, 23.333333, 16.666667), ), ((20.0, 26.666667, 
        33.333333), ), ((36.666667, 20.0, 33.333333), ), ((30.0, 23.333333, 
        16.666667), ), ((30.0, 26.666667, 33.333333), ), ((46.666667, 20.0, 
        33.333333), ), ((50.0, 26.666667, 16.666667), ), ((50.0, 23.333333, 
        33.333333), ), ((40.0, 23.333333, 16.666667), ), ((40.0, 26.666667, 
        33.333333), ), ((6.666667, 30.0, 33.333333), ), ((0.0, 33.333333, 
        16.666667), ), ((0.0, 36.666667, 33.333333), ), ((16.666667, 30.0, 
        33.333333), ), ((10.0, 33.333333, 16.666667), ), ((10.0, 36.666667, 
        33.333333), ), ((26.666667, 30.0, 33.333333), ), ((20.0, 33.333333, 
        16.666667), ), ((20.0, 36.666667, 33.333333), ), ((36.666667, 30.0, 
        33.333333), ), ((30.0, 33.333333, 16.666667), ), ((30.0, 36.666667, 
        33.333333), ), ((46.666667, 30.0, 33.333333), ), ((50.0, 36.666667, 
        16.666667), ), ((50.0, 33.333333, 33.333333), ), ((40.0, 33.333333, 
        16.666667), ), ((40.0, 36.666667, 33.333333), ), ((6.666667, 40.0, 
        33.333333), ), ((3.333333, 50.0, 33.333333), ), ((0.0, 43.333333, 
        16.666667), ), ((0.0, 46.666667, 33.333333), ), ((16.666667, 40.0, 
        33.333333), ), ((13.333333, 50.0, 33.333333), ), ((10.0, 43.333333, 
        16.666667), ), ((10.0, 46.666667, 33.333333), ), ((26.666667, 40.0, 
        33.333333), ), ((23.333333, 50.0, 33.333333), ), ((20.0, 43.333333, 
        16.666667), ), ((20.0, 46.666667, 33.333333), ), ((36.666667, 40.0, 
        33.333333), ), ((33.333333, 50.0, 33.333333), ), ((30.0, 43.333333, 
        16.666667), ), ((30.0, 46.666667, 33.333333), ), ((46.666667, 40.0, 
        33.333333), ), ((50.0, 46.666667, 16.666667), ), ((50.0, 43.333333, 
        33.333333), ), ((43.333333, 50.0, 33.333333), ), ((40.0, 43.333333, 
        16.666667), ), ((40.0, 46.666667, 33.333333), ))
	p.Set(faces=faces, name='swt50w')

def swt100():
	swt50()
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 53.333333, 16.666667), ), ((0.0, 56.666667, 33.333333), 
        ), ((10.0, 53.333333, 16.666667), ), ((10.0, 56.666667, 33.333333), ), 
        ((20.0, 53.333333, 16.666667), ), ((20.0, 56.666667, 33.333333), ), ((
        30.0, 53.333333, 16.666667), ), ((30.0, 56.666667, 33.333333), ), ((
        50.0, 56.666667, 16.666667), ), ((50.0, 53.333333, 33.333333), ), ((
        40.0, 53.333333, 16.666667), ), ((40.0, 56.666667, 33.333333), ), ((
        6.666667, 60.0, 33.333333), ), ((0.0, 63.333333, 16.666667), ), ((0.0, 
        66.666667, 33.333333), ), ((16.666667, 60.0, 33.333333), ), ((10.0, 
        63.333333, 16.666667), ), ((10.0, 66.666667, 33.333333), ), ((
        26.666667, 60.0, 33.333333), ), ((20.0, 63.333333, 16.666667), ), ((
        20.0, 66.666667, 33.333333), ), ((36.666667, 60.0, 33.333333), ), ((
        30.0, 63.333333, 16.666667), ), ((30.0, 66.666667, 33.333333), ), ((
        46.666667, 60.0, 33.333333), ), ((50.0, 66.666667, 16.666667), ), ((
        50.0, 63.333333, 33.333333), ), ((40.0, 63.333333, 16.666667), ), ((
        40.0, 66.666667, 33.333333), ), ((6.666667, 70.0, 33.333333), ), ((0.0, 
        73.333333, 16.666667), ), ((0.0, 76.666667, 33.333333), ), ((16.666667, 
        70.0, 33.333333), ), ((10.0, 73.333333, 16.666667), ), ((10.0, 
        76.666667, 33.333333), ), ((26.666667, 70.0, 33.333333), ), ((20.0, 
        73.333333, 16.666667), ), ((20.0, 76.666667, 33.333333), ), ((
        36.666667, 70.0, 33.333333), ), ((30.0, 73.333333, 16.666667), ), ((
        30.0, 76.666667, 33.333333), ), ((46.666667, 70.0, 33.333333), ), ((
        50.0, 76.666667, 16.666667), ), ((50.0, 73.333333, 33.333333), ), ((
        40.0, 73.333333, 16.666667), ), ((40.0, 76.666667, 33.333333), ), ((
        6.666667, 80.0, 33.333333), ), ((0.0, 83.333333, 16.666667), ), ((0.0, 
        86.666667, 33.333333), ), ((16.666667, 80.0, 33.333333), ), ((10.0, 
        83.333333, 16.666667), ), ((10.0, 86.666667, 33.333333), ), ((
        26.666667, 80.0, 33.333333), ), ((20.0, 83.333333, 16.666667), ), ((
        20.0, 86.666667, 33.333333), ), ((36.666667, 80.0, 33.333333), ), ((
        30.0, 83.333333, 16.666667), ), ((30.0, 86.666667, 33.333333), ), ((
        46.666667, 80.0, 33.333333), ), ((50.0, 86.666667, 16.666667), ), ((
        50.0, 83.333333, 33.333333), ), ((40.0, 83.333333, 16.666667), ), ((
        40.0, 86.666667, 33.333333), ), ((6.666667, 90.0, 33.333333), ), ((
        3.333333, 100.0, 33.333333), ), ((0.0, 93.333333, 16.666667), ), ((0.0, 
        96.666667, 33.333333), ), ((16.666667, 90.0, 33.333333), ), ((
        13.333333, 100.0, 33.333333), ), ((10.0, 93.333333, 16.666667), ), ((
        10.0, 96.666667, 33.333333), ), ((26.666667, 90.0, 33.333333), ), ((
        23.333333, 100.0, 33.333333), ), ((20.0, 93.333333, 16.666667), ), ((
        20.0, 96.666667, 33.333333), ), ((36.666667, 90.0, 33.333333), ), ((
        33.333333, 100.0, 33.333333), ), ((30.0, 93.333333, 16.666667), ), ((
        30.0, 96.666667, 33.333333), ), ((46.666667, 90.0, 33.333333), ), ((
        50.0, 96.666667, 16.666667), ), ((50.0, 93.333333, 33.333333), ), ((
        43.333333, 100.0, 33.333333), ), ((40.0, 93.333333, 16.666667), ), ((
        40.0, 96.666667, 33.333333), ))
	p.Set(faces=faces, name='swt100w')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((2.5, 51.666667, 33.333333), ), ((1.666667, 55.0, 33.333333), 
        ), ((2.5, 58.333333, 33.333333), ), ((7.5, 51.666667, 33.333333), ), ((
        8.333333, 55.0, 33.333333), ), ((7.5, 58.333333, 33.333333), ), ((
        5.416667, 57.5, 33.333333), ), ((7.083333, 55.833333, 33.333333), ), ((
        6.666667, 53.333333, 33.333333), ), ((4.583333, 52.5, 33.333333), ), ((
        2.916667, 54.166667, 33.333333), ), ((3.333333, 56.666667, 33.333333), 
        ), ((12.5, 51.666667, 33.333333), ), ((11.666667, 55.0, 33.333333), ), 
        ((12.5, 58.333333, 33.333333), ), ((17.5, 51.666667, 33.333333), ), ((
        18.333333, 55.0, 33.333333), ), ((17.5, 58.333333, 33.333333), ), ((
        15.416667, 57.5, 33.333333), ), ((17.083333, 55.833333, 33.333333), ), 
        ((16.666667, 53.333333, 33.333333), ), ((14.583333, 52.5, 33.333333), 
        ), ((12.916667, 54.166667, 33.333333), ), ((13.333333, 56.666667, 
        33.333333), ), ((22.5, 51.666667, 33.333333), ), ((21.666667, 55.0, 
        33.333333), ), ((22.5, 58.333333, 33.333333), ), ((27.5, 51.666667, 
        33.333333), ), ((28.333333, 55.0, 33.333333), ), ((27.5, 58.333333, 
        33.333333), ), ((25.416667, 57.5, 33.333333), ), ((27.083333, 
        55.833333, 33.333333), ), ((26.666667, 53.333333, 33.333333), ), ((
        24.583333, 52.5, 33.333333), ), ((22.916667, 54.166667, 33.333333), ), 
        ((23.333333, 56.666667, 33.333333), ), ((32.5, 51.666667, 33.333333), 
        ), ((31.666667, 55.0, 33.333333), ), ((32.5, 58.333333, 33.333333), ), 
        ((37.5, 51.666667, 33.333333), ), ((38.333333, 55.0, 33.333333), ), ((
        37.5, 58.333333, 33.333333), ), ((35.416667, 57.5, 33.333333), ), ((
        37.083333, 55.833333, 33.333333), ), ((36.666667, 53.333333, 
        33.333333), ), ((34.583333, 52.5, 33.333333), ), ((32.916667, 
        54.166667, 33.333333), ), ((33.333333, 56.666667, 33.333333), ), ((
        42.5, 51.666667, 33.333333), ), ((41.666667, 55.0, 33.333333), ), ((
        42.5, 58.333333, 33.333333), ), ((47.5, 51.666667, 33.333333), ), ((
        48.333333, 55.0, 33.333333), ), ((47.5, 58.333333, 33.333333), ), ((
        45.416667, 57.5, 33.333333), ), ((47.083333, 55.833333, 33.333333), ), 
        ((46.666667, 53.333333, 33.333333), ), ((44.583333, 52.5, 33.333333), 
        ), ((42.916667, 54.166667, 33.333333), ), ((43.333333, 56.666667, 
        33.333333), ), ((2.5, 61.666667, 33.333333), ), ((1.666667, 65.0, 
        33.333333), ), ((2.5, 68.333333, 33.333333), ), ((7.5, 61.666667, 
        33.333333), ), ((8.333333, 65.0, 33.333333), ), ((7.5, 68.333333, 
        33.333333), ), ((5.416667, 67.5, 33.333333), ), ((7.083333, 65.833333, 
        33.333333), ), ((6.666667, 63.333333, 33.333333), ), ((4.583333, 62.5, 
        33.333333), ), ((2.916667, 64.166667, 33.333333), ), ((3.333333, 
        66.666667, 33.333333), ), ((12.5, 61.666667, 33.333333), ), ((
        11.666667, 65.0, 33.333333), ), ((12.5, 68.333333, 33.333333), ), ((
        17.5, 61.666667, 33.333333), ), ((18.333333, 65.0, 33.333333), ), ((
        17.5, 68.333333, 33.333333), ), ((15.416667, 67.5, 33.333333), ), ((
        17.083333, 65.833333, 33.333333), ), ((16.666667, 63.333333, 
        33.333333), ), ((14.583333, 62.5, 33.333333), ), ((12.916667, 
        64.166667, 33.333333), ), ((13.333333, 66.666667, 33.333333), ), ((
        22.5, 61.666667, 33.333333), ), ((21.666667, 65.0, 33.333333), ), ((
        22.5, 68.333333, 33.333333), ), ((27.5, 61.666667, 33.333333), ), ((
        28.333333, 65.0, 33.333333), ), ((27.5, 68.333333, 33.333333), ), ((
        25.416667, 67.5, 33.333333), ), ((27.083333, 65.833333, 33.333333), ), 
        ((26.666667, 63.333333, 33.333333), ), ((24.583333, 62.5, 33.333333), 
        ), ((22.916667, 64.166667, 33.333333), ), ((23.333333, 66.666667, 
        33.333333), ), ((32.5, 61.666667, 33.333333), ), ((31.666667, 65.0, 
        33.333333), ), ((32.5, 68.333333, 33.333333), ), ((37.5, 61.666667, 
        33.333333), ), ((38.333333, 65.0, 33.333333), ), ((37.5, 68.333333, 
        33.333333), ), ((35.416667, 67.5, 33.333333), ), ((37.083333, 
        65.833333, 33.333333), ), ((36.666667, 63.333333, 33.333333), ), ((
        34.583333, 62.5, 33.333333), ), ((32.916667, 64.166667, 33.333333), ), 
        ((33.333333, 66.666667, 33.333333), ), ((42.5, 61.666667, 33.333333), 
        ), ((41.666667, 65.0, 33.333333), ), ((42.5, 68.333333, 33.333333), ), 
        ((47.5, 61.666667, 33.333333), ), ((48.333333, 65.0, 33.333333), ), ((
        47.5, 68.333333, 33.333333), ), ((45.416667, 67.5, 33.333333), ), ((
        47.083333, 65.833333, 33.333333), ), ((46.666667, 63.333333, 
        33.333333), ), ((44.583333, 62.5, 33.333333), ), ((42.916667, 
        64.166667, 33.333333), ), ((43.333333, 66.666667, 33.333333), ), ((2.5, 
        71.666667, 33.333333), ), ((1.666667, 75.0, 33.333333), ), ((2.5, 
        78.333333, 33.333333), ), ((7.5, 71.666667, 33.333333), ), ((8.333333, 
        75.0, 33.333333), ), ((7.5, 78.333333, 33.333333), ), ((5.416667, 77.5, 
        33.333333), ), ((7.083333, 75.833333, 33.333333), ), ((6.666667, 
        73.333333, 33.333333), ), ((4.583333, 72.5, 33.333333), ), ((2.916667, 
        74.166667, 33.333333), ), ((3.333333, 76.666667, 33.333333), ), ((12.5, 
        71.666667, 33.333333), ), ((11.666667, 75.0, 33.333333), ), ((12.5, 
        78.333333, 33.333333), ), ((17.5, 71.666667, 33.333333), ), ((
        18.333333, 75.0, 33.333333), ), ((17.5, 78.333333, 33.333333), ), ((
        15.416667, 77.5, 33.333333), ), ((17.083333, 75.833333, 33.333333), ), 
        ((16.666667, 73.333333, 33.333333), ), ((14.583333, 72.5, 33.333333), 
        ), ((12.916667, 74.166667, 33.333333), ), ((13.333333, 76.666667, 
        33.333333), ), ((22.5, 71.666667, 33.333333), ), ((21.666667, 75.0, 
        33.333333), ), ((22.5, 78.333333, 33.333333), ), ((27.5, 71.666667, 
        33.333333), ), ((28.333333, 75.0, 33.333333), ), ((27.5, 78.333333, 
        33.333333), ), ((25.416667, 77.5, 33.333333), ), ((27.083333, 
        75.833333, 33.333333), ), ((26.666667, 73.333333, 33.333333), ), ((
        24.583333, 72.5, 33.333333), ), ((22.916667, 74.166667, 33.333333), ), 
        ((23.333333, 76.666667, 33.333333), ), ((32.5, 71.666667, 33.333333), 
        ), ((31.666667, 75.0, 33.333333), ), ((32.5, 78.333333, 33.333333), ), 
        ((37.5, 71.666667, 33.333333), ), ((38.333333, 75.0, 33.333333), ), ((
        37.5, 78.333333, 33.333333), ), ((35.416667, 77.5, 33.333333), ), ((
        37.083333, 75.833333, 33.333333), ), ((36.666667, 73.333333, 
        33.333333), ), ((34.583333, 72.5, 33.333333), ), ((32.916667, 
        74.166667, 33.333333), ), ((33.333333, 76.666667, 33.333333), ), ((
        42.5, 71.666667, 33.333333), ), ((41.666667, 75.0, 33.333333), ), ((
        42.5, 78.333333, 33.333333), ), ((47.5, 71.666667, 33.333333), ), ((
        48.333333, 75.0, 33.333333), ), ((47.5, 78.333333, 33.333333), ), ((
        45.416667, 77.5, 33.333333), ), ((47.083333, 75.833333, 33.333333), ), 
        ((46.666667, 73.333333, 33.333333), ), ((44.583333, 72.5, 33.333333), 
        ), ((42.916667, 74.166667, 33.333333), ), ((43.333333, 76.666667, 
        33.333333), ), ((2.5, 81.666667, 33.333333), ), ((1.666667, 85.0, 
        33.333333), ), ((2.5, 88.333333, 33.333333), ), ((7.5, 81.666667, 
        33.333333), ), ((8.333333, 85.0, 33.333333), ), ((7.5, 88.333333, 
        33.333333), ), ((5.416667, 87.5, 33.333333), ), ((7.083333, 85.833333, 
        33.333333), ), ((6.666667, 83.333333, 33.333333), ), ((4.583333, 82.5, 
        33.333333), ), ((2.916667, 84.166667, 33.333333), ), ((3.333333, 
        86.666667, 33.333333), ), ((12.5, 81.666667, 33.333333), ), ((
        11.666667, 85.0, 33.333333), ), ((12.5, 88.333333, 33.333333), ), ((
        17.5, 81.666667, 33.333333), ), ((18.333333, 85.0, 33.333333), ), ((
        17.5, 88.333333, 33.333333), ), ((15.416667, 87.5, 33.333333), ), ((
        17.083333, 85.833333, 33.333333), ), ((16.666667, 83.333333, 
        33.333333), ), ((14.583333, 82.5, 33.333333), ), ((12.916667, 
        84.166667, 33.333333), ), ((13.333333, 86.666667, 33.333333), ), ((
        22.5, 81.666667, 33.333333), ), ((21.666667, 85.0, 33.333333), ), ((
        22.5, 88.333333, 33.333333), ), ((27.5, 81.666667, 33.333333), ), ((
        28.333333, 85.0, 33.333333), ), ((27.5, 88.333333, 33.333333), ), ((
        25.416667, 87.5, 33.333333), ), ((27.083333, 85.833333, 33.333333), ), 
        ((26.666667, 83.333333, 33.333333), ), ((24.583333, 82.5, 33.333333), 
        ), ((22.916667, 84.166667, 33.333333), ), ((23.333333, 86.666667, 
        33.333333), ), ((32.5, 81.666667, 33.333333), ), ((31.666667, 85.0, 
        33.333333), ), ((32.5, 88.333333, 33.333333), ), ((37.5, 81.666667, 
        33.333333), ), ((38.333333, 85.0, 33.333333), ), ((37.5, 88.333333, 
        33.333333), ), ((35.416667, 87.5, 33.333333), ), ((37.083333, 
        85.833333, 33.333333), ), ((36.666667, 83.333333, 33.333333), ), ((
        34.583333, 82.5, 33.333333), ), ((32.916667, 84.166667, 33.333333), ), 
        ((33.333333, 86.666667, 33.333333), ), ((42.5, 81.666667, 33.333333), 
        ), ((41.666667, 85.0, 33.333333), ), ((42.5, 88.333333, 33.333333), ), 
        ((47.5, 81.666667, 33.333333), ), ((48.333333, 85.0, 33.333333), ), ((
        47.5, 88.333333, 33.333333), ), ((45.416667, 87.5, 33.333333), ), ((
        47.083333, 85.833333, 33.333333), ), ((46.666667, 83.333333, 
        33.333333), ), ((44.583333, 82.5, 33.333333), ), ((42.916667, 
        84.166667, 33.333333), ), ((43.333333, 86.666667, 33.333333), ), ((2.5, 
        91.666667, 33.333333), ), ((1.666667, 95.0, 33.333333), ), ((2.5, 
        98.333333, 33.333333), ), ((7.5, 91.666667, 33.333333), ), ((8.333333, 
        95.0, 33.333333), ), ((7.5, 98.333333, 33.333333), ), ((5.416667, 97.5, 
        33.333333), ), ((7.083333, 95.833333, 33.333333), ), ((6.666667, 
        93.333333, 33.333333), ), ((4.583333, 92.5, 33.333333), ), ((2.916667, 
        94.166667, 33.333333), ), ((3.333333, 96.666667, 33.333333), ), ((12.5, 
        91.666667, 33.333333), ), ((11.666667, 95.0, 33.333333), ), ((12.5, 
        98.333333, 33.333333), ))+f.findAt(((17.5, 91.666667, 33.333333), ), ((
        18.333333, 95.0, 33.333333), ), ((17.5, 98.333333, 33.333333), ), ((
        15.416667, 97.5, 33.333333), ), ((17.083333, 95.833333, 33.333333), ), 
        ((16.666667, 93.333333, 33.333333), ), ((14.583333, 92.5, 33.333333), 
        ), ((12.916667, 94.166667, 33.333333), ), ((13.333333, 96.666667, 
        33.333333), ), ((22.5, 91.666667, 33.333333), ), ((21.666667, 95.0, 
        33.333333), ), ((22.5, 98.333333, 33.333333), ), ((27.5, 91.666667, 
        33.333333), ), ((28.333333, 95.0, 33.333333), ), ((27.5, 98.333333, 
        33.333333), ), ((25.416667, 97.5, 33.333333), ), ((27.083333, 
        95.833333, 33.333333), ), ((26.666667, 93.333333, 33.333333), ), ((
        24.583333, 92.5, 33.333333), ), ((22.916667, 94.166667, 33.333333), ), 
        ((23.333333, 96.666667, 33.333333), ), ((32.5, 91.666667, 33.333333), 
        ), ((31.666667, 95.0, 33.333333), ), ((32.5, 98.333333, 33.333333), ), 
        ((37.5, 91.666667, 33.333333), ), ((38.333333, 95.0, 33.333333), ), ((
        37.5, 98.333333, 33.333333), ), ((35.416667, 97.5, 33.333333), ), ((
        37.083333, 95.833333, 33.333333), ), ((36.666667, 93.333333, 
        33.333333), ), ((34.583333, 92.5, 33.333333), ), ((32.916667, 
        94.166667, 33.333333), ), ((33.333333, 96.666667, 33.333333), ), ((
        42.5, 91.666667, 33.333333), ), ((41.666667, 95.0, 33.333333), ), ((
        42.5, 98.333333, 33.333333), ), ((47.5, 91.666667, 33.333333), ), ((
        48.333333, 95.0, 33.333333), ), ((47.5, 98.333333, 33.333333), ), ((
        45.416667, 97.5, 33.333333), ), ((47.083333, 95.833333, 33.333333), ), 
        ((46.666667, 93.333333, 33.333333), ), ((44.583333, 92.5, 33.333333), 
        ), ((42.916667, 94.166667, 33.333333), ), ((43.333333, 96.666667, 
        33.333333), ))
	p.Set(faces=faces, name='swt100s')

def swt150():
	swt100()
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((1.666667, 125.0, 33.333333), ), ((11.666667, 135.0, 
        33.333333), ))+f.findAt(((2.5, 101.666667, 33.333333), ), ((1.666667, 105.0, 
        33.333333), ), ((2.5, 108.333333, 33.333333), ), ((7.5, 101.666667, 
        33.333333), ), ((8.333333, 105.0, 33.333333), ), ((7.5, 108.333333, 
        33.333333), ), ((5.416667, 107.5, 33.333333), ), ((7.083333, 
        105.833333, 33.333333), ), ((6.666667, 103.333333, 33.333333), ), ((
        4.583333, 102.5, 33.333333), ), ((2.916667, 104.166667, 33.333333), ), 
        ((3.333333, 106.666667, 33.333333), ), ((12.5, 101.666667, 33.333333), 
        ), ((11.666667, 105.0, 33.333333), ), ((12.5, 108.333333, 33.333333), 
        ), ((17.5, 101.666667, 33.333333), ), ((18.333333, 105.0, 33.333333), 
        ), ((17.5, 108.333333, 33.333333), ), ((15.416667, 107.5, 33.333333), 
        ), ((17.083333, 105.833333, 33.333333), ), ((16.666667, 103.333333, 
        33.333333), ), ((14.583333, 102.5, 33.333333), ), ((12.916667, 
        104.166667, 33.333333), ), ((13.333333, 106.666667, 33.333333), ), ((
        22.5, 101.666667, 33.333333), ), ((21.666667, 105.0, 33.333333), ), ((
        22.5, 108.333333, 33.333333), ), ((27.5, 101.666667, 33.333333), ), ((
        28.333333, 105.0, 33.333333), ), ((27.5, 108.333333, 33.333333), ), ((
        25.416667, 107.5, 33.333333), ), ((27.083333, 105.833333, 33.333333), 
        ), ((26.666667, 103.333333, 33.333333), ), ((24.583333, 102.5, 
        33.333333), ), ((22.916667, 104.166667, 33.333333), ), ((23.333333, 
        106.666667, 33.333333), ), ((32.5, 101.666667, 33.333333), ), ((
        31.666667, 105.0, 33.333333), ), ((32.5, 108.333333, 33.333333), ), ((
        37.5, 101.666667, 33.333333), ), ((38.333333, 105.0, 33.333333), ), ((
        37.5, 108.333333, 33.333333), ), ((35.416667, 107.5, 33.333333), ), ((
        37.083333, 105.833333, 33.333333), ), ((36.666667, 103.333333, 
        33.333333), ), ((34.583333, 102.5, 33.333333), ), ((32.916667, 
        104.166667, 33.333333), ), ((33.333333, 106.666667, 33.333333), ), ((
        42.5, 101.666667, 33.333333), ), ((41.666667, 105.0, 33.333333), ), ((
        42.5, 108.333333, 33.333333), ), ((47.5, 101.666667, 33.333333), ), ((
        48.333333, 105.0, 33.333333), ), ((47.5, 108.333333, 33.333333), ), ((
        45.416667, 107.5, 33.333333), ), ((47.083333, 105.833333, 33.333333), 
        ), ((46.666667, 103.333333, 33.333333), ), ((44.583333, 102.5, 
        33.333333), ), ((42.916667, 104.166667, 33.333333), ), ((43.333333, 
        106.666667, 33.333333), ), ((2.5, 111.666667, 33.333333), ), ((
        1.666667, 115.0, 33.333333), ), ((2.5, 118.333333, 33.333333), ), ((
        7.5, 111.666667, 33.333333), ), ((8.333333, 115.0, 33.333333), ), ((
        7.5, 118.333333, 33.333333), ), ((5.416667, 117.5, 33.333333), ), ((
        7.083333, 115.833333, 33.333333), ), ((6.666667, 113.333333, 
        33.333333), ), ((4.583333, 112.5, 33.333333), ), ((2.916667, 
        114.166667, 33.333333), ), ((3.333333, 116.666667, 33.333333), ), ((
        12.5, 111.666667, 33.333333), ), ((11.666667, 115.0, 33.333333), ), ((
        12.5, 118.333333, 33.333333), ), ((17.5, 111.666667, 33.333333), ), ((
        18.333333, 115.0, 33.333333), ), ((17.5, 118.333333, 33.333333), ), ((
        15.416667, 117.5, 33.333333), ), ((17.083333, 115.833333, 33.333333), 
        ), ((16.666667, 113.333333, 33.333333), ), ((14.583333, 112.5, 
        33.333333), ), ((12.916667, 114.166667, 33.333333), ), ((13.333333, 
        116.666667, 33.333333), ), ((22.5, 111.666667, 33.333333), ), ((
        21.666667, 115.0, 33.333333), ), ((22.5, 118.333333, 33.333333), ), ((
        27.5, 111.666667, 33.333333), ), ((28.333333, 115.0, 33.333333), ), ((
        27.5, 118.333333, 33.333333), ), ((25.416667, 117.5, 33.333333), ), ((
        27.083333, 115.833333, 33.333333), ), ((26.666667, 113.333333, 
        33.333333), ), ((24.583333, 112.5, 33.333333), ), ((22.916667, 
        114.166667, 33.333333), ), ((23.333333, 116.666667, 33.333333), ), ((
        32.5, 111.666667, 33.333333), ), ((31.666667, 115.0, 33.333333), ), ((
        32.5, 118.333333, 33.333333), ), ((37.5, 111.666667, 33.333333), ), ((
        38.333333, 115.0, 33.333333), ), ((37.5, 118.333333, 33.333333), ), ((
        35.416667, 117.5, 33.333333), ), ((37.083333, 115.833333, 33.333333), 
        ), ((36.666667, 113.333333, 33.333333), ), ((34.583333, 112.5, 
        33.333333), ), ((32.916667, 114.166667, 33.333333), ), ((33.333333, 
        116.666667, 33.333333), ), ((42.5, 111.666667, 33.333333), ), ((
        41.666667, 115.0, 33.333333), ), ((42.5, 118.333333, 33.333333), ), ((
        47.5, 111.666667, 33.333333), ), ((48.333333, 115.0, 33.333333), ), ((
        47.5, 118.333333, 33.333333), ), ((45.416667, 117.5, 33.333333), ), ((
        47.083333, 115.833333, 33.333333), ), ((46.666667, 113.333333, 
        33.333333), ), ((44.583333, 112.5, 33.333333), ), ((42.916667, 
        114.166667, 33.333333), ), ((43.333333, 116.666667, 33.333333), ), ((
        2.5, 121.666667, 33.333333), ), ((2.5, 128.333333, 33.333333), ), ((
        7.5, 121.666667, 33.333333), ), ((8.333333, 125.0, 33.333333), ), ((
        7.5, 128.333333, 33.333333), ), ((5.416667, 127.5, 33.333333), ), ((
        7.083333, 125.833333, 33.333333), ), ((6.666667, 123.333333, 
        33.333333), ), ((4.583333, 122.5, 33.333333), ), ((2.916667, 
        124.166667, 33.333333), ), ((3.333333, 126.666667, 33.333333), ), ((
        12.5, 121.666667, 33.333333), ), ((11.666667, 125.0, 33.333333), ), ((
        12.5, 128.333333, 33.333333), ), ((17.5, 121.666667, 33.333333), ), ((
        18.333333, 125.0, 33.333333), ), ((17.5, 128.333333, 33.333333), ), ((
        15.416667, 127.5, 33.333333), ), ((17.083333, 125.833333, 33.333333), 
        ), ((16.666667, 123.333333, 33.333333), ), ((14.583333, 122.5, 
        33.333333), ), ((12.916667, 124.166667, 33.333333), ), ((13.333333, 
        126.666667, 33.333333), ), ((22.5, 121.666667, 33.333333), ), ((
        21.666667, 125.0, 33.333333), ), ((22.5, 128.333333, 33.333333), ), ((
        27.5, 121.666667, 33.333333), ), ((28.333333, 125.0, 33.333333), ), ((
        27.5, 128.333333, 33.333333), ), ((25.416667, 127.5, 33.333333), ), ((
        27.083333, 125.833333, 33.333333), ), ((26.666667, 123.333333, 
        33.333333), ), ((24.583333, 122.5, 33.333333), ), ((22.916667, 
        124.166667, 33.333333), ), ((23.333333, 126.666667, 33.333333), ), ((
        32.5, 121.666667, 33.333333), ), ((31.666667, 125.0, 33.333333), ), ((
        32.5, 128.333333, 33.333333), ), ((37.5, 121.666667, 33.333333), ), ((
        38.333333, 125.0, 33.333333), ), ((37.5, 128.333333, 33.333333), ), ((
        35.416667, 127.5, 33.333333), ), ((37.083333, 125.833333, 33.333333), 
        ), ((36.666667, 123.333333, 33.333333), ), ((34.583333, 122.5, 
        33.333333), ), ((32.916667, 124.166667, 33.333333), ), ((33.333333, 
        126.666667, 33.333333), ), ((42.5, 121.666667, 33.333333), ), ((
        41.666667, 125.0, 33.333333), ), ((42.5, 128.333333, 33.333333), ), ((
        47.5, 121.666667, 33.333333), ), ((48.333333, 125.0, 33.333333), ), ((
        47.5, 128.333333, 33.333333), ), ((45.416667, 127.5, 33.333333), ), ((
        47.083333, 125.833333, 33.333333), ), ((46.666667, 123.333333, 
        33.333333), ), ((44.583333, 122.5, 33.333333), ), ((42.916667, 
        124.166667, 33.333333), ), ((43.333333, 126.666667, 33.333333), ), ((
        2.5, 131.666667, 33.333333), ), ((1.666667, 135.0, 33.333333), ), ((
        2.5, 138.333333, 33.333333), ), ((7.5, 131.666667, 33.333333), ), ((
        8.333333, 135.0, 33.333333), ), ((7.5, 138.333333, 33.333333), ), ((
        5.416667, 137.5, 33.333333), ), ((7.083333, 135.833333, 33.333333), ), 
        ((6.666667, 133.333333, 33.333333), ), ((4.583333, 132.5, 33.333333), 
        ), ((2.916667, 134.166667, 33.333333), ), ((3.333333, 136.666667, 
        33.333333), ), ((12.5, 131.666667, 33.333333), ), ((12.5, 138.333333, 
        33.333333), ), ((17.5, 131.666667, 33.333333), ), ((18.333333, 135.0, 
        33.333333), ), ((17.5, 138.333333, 33.333333), ), ((15.416667, 137.5, 
        33.333333), ), ((17.083333, 135.833333, 33.333333), ), ((16.666667, 
        133.333333, 33.333333), ), ((14.583333, 132.5, 33.333333), ), ((
        12.916667, 134.166667, 33.333333), ), ((13.333333, 136.666667, 
        33.333333), ), ((22.5, 131.666667, 33.333333), ), ((21.666667, 135.0, 
        33.333333), ), ((22.5, 138.333333, 33.333333), ), ((27.5, 131.666667, 
        33.333333), ), ((28.333333, 135.0, 33.333333), ), ((27.5, 138.333333, 
        33.333333), ), ((25.416667, 137.5, 33.333333), ), ((27.083333, 
        135.833333, 33.333333), ), ((26.666667, 133.333333, 33.333333), ), ((
        24.583333, 132.5, 33.333333), ), ((22.916667, 134.166667, 33.333333), 
        ), ((23.333333, 136.666667, 33.333333), ), ((32.5, 131.666667, 
        33.333333), ), ((31.666667, 135.0, 33.333333), ), ((32.5, 138.333333, 
        33.333333), ), ((37.5, 131.666667, 33.333333), ), ((38.333333, 135.0, 
        33.333333), ), ((37.5, 138.333333, 33.333333), ), ((35.416667, 137.5, 
        33.333333), ), ((37.083333, 135.833333, 33.333333), ), ((36.666667, 
        133.333333, 33.333333), ), ((34.583333, 132.5, 33.333333), ), ((
        32.916667, 134.166667, 33.333333), ), ((33.333333, 136.666667, 
        33.333333), ), ((42.5, 131.666667, 33.333333), ), ((41.666667, 135.0, 
        33.333333), ), ((42.5, 138.333333, 33.333333), ), ((47.5, 131.666667, 
        33.333333), ), ((48.333333, 135.0, 33.333333), ), ((47.5, 138.333333, 
        33.333333), ), ((45.416667, 137.5, 33.333333), ), ((47.083333, 
        135.833333, 33.333333), ), ((46.666667, 133.333333, 33.333333), ), ((
        44.583333, 132.5, 33.333333), ), ((42.916667, 134.166667, 33.333333), 
        ), ((43.333333, 136.666667, 33.333333), ), ((2.5, 141.666667, 
        33.333333), ), ((1.666667, 145.0, 33.333333), ), ((2.5, 148.333333, 
        33.333333), ), ((7.5, 141.666667, 33.333333), ), ((8.333333, 145.0, 
        33.333333), ), ((7.5, 148.333333, 33.333333), ), ((5.416667, 147.5, 
        33.333333), ), ((7.083333, 145.833333, 33.333333), ), ((6.666667, 
        143.333333, 33.333333), ), ((4.583333, 142.5, 33.333333), ), ((
        2.916667, 144.166667, 33.333333), ), ((3.333333, 146.666667, 
        33.333333), ), ((12.5, 141.666667, 33.333333), ), ((11.666667, 145.0, 
        33.333333), ), ((12.5, 148.333333, 33.333333), ), ((17.5, 141.666667, 
        33.333333), ), ((18.333333, 145.0, 33.333333), ))+f.findAt(((17.5, 
        148.333333, 33.333333), ), ((15.416667, 147.5, 33.333333), ), ((
        17.083333, 145.833333, 33.333333), ), ((16.666667, 143.333333, 
        33.333333), ), ((14.583333, 142.5, 33.333333), ), ((12.916667, 
        144.166667, 33.333333), ), ((13.333333, 146.666667, 33.333333), ), ((
        22.5, 141.666667, 33.333333), ), ((21.666667, 145.0, 33.333333), ), ((
        22.5, 148.333333, 33.333333), ), ((27.5, 141.666667, 33.333333), ), ((
        28.333333, 145.0, 33.333333), ), ((27.5, 148.333333, 33.333333), ), ((
        25.416667, 147.5, 33.333333), ), ((27.083333, 145.833333, 33.333333), 
        ), ((26.666667, 143.333333, 33.333333), ), ((24.583333, 142.5, 
        33.333333), ), ((22.916667, 144.166667, 33.333333), ), ((23.333333, 
        146.666667, 33.333333), ), ((32.5, 141.666667, 33.333333), ), ((
        31.666667, 145.0, 33.333333), ), ((32.5, 148.333333, 33.333333), ), ((
        37.5, 141.666667, 33.333333), ), ((38.333333, 145.0, 33.333333), ), ((
        37.5, 148.333333, 33.333333), ), ((35.416667, 147.5, 33.333333), ), ((
        37.083333, 145.833333, 33.333333), ), ((36.666667, 143.333333, 
        33.333333), ), ((34.583333, 142.5, 33.333333), ), ((32.916667, 
        144.166667, 33.333333), ), ((33.333333, 146.666667, 33.333333), ), ((
        42.5, 141.666667, 33.333333), ), ((41.666667, 145.0, 33.333333), ), ((
        42.5, 148.333333, 33.333333), ), ((47.5, 141.666667, 33.333333), ), ((
        48.333333, 145.0, 33.333333), ), ((47.5, 148.333333, 33.333333), ), ((
        45.416667, 147.5, 33.333333), ), ((47.083333, 145.833333, 33.333333), 
        ), ((46.666667, 143.333333, 33.333333), ), ((44.583333, 142.5, 
        33.333333), ), ((42.916667, 144.166667, 33.333333), ), ((43.333333, 
        146.666667, 33.333333), ))
	p.Set(faces=faces, name='swt150s')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 103.333333, 16.666667), ), ((0.0, 106.666667, 
        33.333333), ), ((10.0, 103.333333, 16.666667), ), ((10.0, 106.666667, 
        33.333333), ), ((20.0, 103.333333, 16.666667), ), ((20.0, 106.666667, 
        33.333333), ), ((30.0, 103.333333, 16.666667), ), ((30.0, 106.666667, 
        33.333333), ), ((50.0, 106.666667, 16.666667), ), ((50.0, 103.333333, 
        33.333333), ), ((40.0, 103.333333, 16.666667), ), ((40.0, 106.666667, 
        33.333333), ), ((6.666667, 110.0, 33.333333), ), ((0.0, 113.333333, 
        16.666667), ), ((0.0, 116.666667, 33.333333), ), ((16.666667, 110.0, 
        33.333333), ), ((10.0, 113.333333, 16.666667), ), ((10.0, 116.666667, 
        33.333333), ), ((26.666667, 110.0, 33.333333), ), ((20.0, 113.333333, 
        16.666667), ), ((20.0, 116.666667, 33.333333), ), ((36.666667, 110.0, 
        33.333333), ), ((30.0, 113.333333, 16.666667), ), ((30.0, 116.666667, 
        33.333333), ), ((46.666667, 110.0, 33.333333), ), ((50.0, 116.666667, 
        16.666667), ), ((50.0, 113.333333, 33.333333), ), ((40.0, 113.333333, 
        16.666667), ), ((40.0, 116.666667, 33.333333), ), ((6.666667, 120.0, 
        33.333333), ), ((0.0, 123.333333, 16.666667), ), ((0.0, 126.666667, 
        33.333333), ), ((16.666667, 120.0, 33.333333), ), ((10.0, 123.333333, 
        16.666667), ), ((10.0, 126.666667, 33.333333), ), ((26.666667, 120.0, 
        33.333333), ), ((20.0, 123.333333, 16.666667), ), ((20.0, 126.666667, 
        33.333333), ), ((36.666667, 120.0, 33.333333), ), ((30.0, 123.333333, 
        16.666667), ), ((30.0, 126.666667, 33.333333), ), ((46.666667, 120.0, 
        33.333333), ), ((50.0, 126.666667, 16.666667), ), ((50.0, 123.333333, 
        33.333333), ), ((40.0, 123.333333, 16.666667), ), ((40.0, 126.666667, 
        33.333333), ), ((6.666667, 130.0, 33.333333), ), ((0.0, 133.333333, 
        16.666667), ), ((0.0, 136.666667, 33.333333), ), ((16.666667, 130.0, 
        33.333333), ), ((10.0, 133.333333, 16.666667), ), ((10.0, 136.666667, 
        33.333333), ), ((26.666667, 130.0, 33.333333), ), ((20.0, 133.333333, 
        16.666667), ), ((20.0, 136.666667, 33.333333), ), ((36.666667, 130.0, 
        33.333333), ), ((30.0, 133.333333, 16.666667), ), ((30.0, 136.666667, 
        33.333333), ), ((46.666667, 130.0, 33.333333), ), ((50.0, 136.666667, 
        16.666667), ), ((50.0, 133.333333, 33.333333), ), ((40.0, 133.333333, 
        16.666667), ), ((40.0, 136.666667, 33.333333), ), ((6.666667, 140.0, 
        33.333333), ), ((3.333333, 150.0, 33.333333), ), ((0.0, 143.333333, 
        16.666667), ), ((0.0, 146.666667, 33.333333), ), ((16.666667, 140.0, 
        33.333333), ), ((13.333333, 150.0, 33.333333), ), ((10.0, 143.333333, 
        16.666667), ), ((10.0, 146.666667, 33.333333), ), ((26.666667, 140.0, 
        33.333333), ), ((23.333333, 150.0, 33.333333), ), ((20.0, 143.333333, 
        16.666667), ), ((20.0, 146.666667, 33.333333), ), ((36.666667, 140.0, 
        33.333333), ), ((33.333333, 150.0, 33.333333), ), ((30.0, 143.333333, 
        16.666667), ), ((30.0, 146.666667, 33.333333), ), ((46.666667, 140.0, 
        33.333333), ), ((50.0, 146.666667, 16.666667), ), ((50.0, 143.333333, 
        33.333333), ), ((43.333333, 150.0, 33.333333), ), ((40.0, 143.333333, 
        16.666667), ), ((40.0, 146.666667, 33.333333), ))
	p.Set(faces=faces, name='swt150w')

def swt200():
	swt150()
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((2.5, 151.666667, 33.333333), ), ((1.666667, 155.0, 
        33.333333), ), ((2.5, 158.333333, 33.333333), ), ((7.5, 151.666667, 
        33.333333), ), ((8.333333, 155.0, 33.333333), ), ((7.5, 158.333333, 
        33.333333), ), ((5.416667, 157.5, 33.333333), ), ((7.083333, 
        155.833333, 33.333333), ), ((6.666667, 153.333333, 33.333333), ), ((
        4.583333, 152.5, 33.333333), ), ((2.916667, 154.166667, 33.333333), ), 
        ((3.333333, 156.666667, 33.333333), ), ((12.5, 151.666667, 33.333333), 
        ), ((11.666667, 155.0, 33.333333), ), ((12.5, 158.333333, 33.333333), 
        ), ((17.5, 151.666667, 33.333333), ), ((18.333333, 155.0, 33.333333), 
        ), ((17.5, 158.333333, 33.333333), ), ((15.416667, 157.5, 33.333333), 
        ), ((17.083333, 155.833333, 33.333333), ), ((16.666667, 153.333333, 
        33.333333), ), ((14.583333, 152.5, 33.333333), ), ((12.916667, 
        154.166667, 33.333333), ), ((13.333333, 156.666667, 33.333333), ), ((
        22.5, 151.666667, 33.333333), ), ((21.666667, 155.0, 33.333333), ), ((
        22.5, 158.333333, 33.333333), ), ((27.5, 151.666667, 33.333333), ), ((
        28.333333, 155.0, 33.333333), ), ((27.5, 158.333333, 33.333333), ), ((
        25.416667, 157.5, 33.333333), ), ((27.083333, 155.833333, 33.333333), 
        ), ((26.666667, 153.333333, 33.333333), ), ((24.583333, 152.5, 
        33.333333), ), ((22.916667, 154.166667, 33.333333), ), ((23.333333, 
        156.666667, 33.333333), ), ((32.5, 151.666667, 33.333333), ), ((
        31.666667, 155.0, 33.333333), ), ((32.5, 158.333333, 33.333333), ), ((
        37.5, 151.666667, 33.333333), ), ((38.333333, 155.0, 33.333333), ), ((
        37.5, 158.333333, 33.333333), ), ((35.416667, 157.5, 33.333333), ), ((
        37.083333, 155.833333, 33.333333), ), ((36.666667, 153.333333, 
        33.333333), ), ((34.583333, 152.5, 33.333333), ), ((32.916667, 
        154.166667, 33.333333), ), ((33.333333, 156.666667, 33.333333), ), ((
        42.5, 151.666667, 33.333333), ), ((41.666667, 155.0, 33.333333), ), ((
        42.5, 158.333333, 33.333333), ), ((47.5, 151.666667, 33.333333), ), ((
        48.333333, 155.0, 33.333333), ), ((47.5, 158.333333, 33.333333), ), ((
        45.416667, 157.5, 33.333333), ), ((47.083333, 155.833333, 33.333333), 
        ), ((46.666667, 153.333333, 33.333333), ), ((44.583333, 152.5, 
        33.333333), ), ((42.916667, 154.166667, 33.333333), ), ((43.333333, 
        156.666667, 33.333333), ), ((2.5, 161.666667, 33.333333), ), ((
        1.666667, 165.0, 33.333333), ), ((2.5, 168.333333, 33.333333), ), ((
        7.5, 161.666667, 33.333333), ), ((8.333333, 165.0, 33.333333), ), ((
        7.5, 168.333333, 33.333333), ), ((5.416667, 167.5, 33.333333), ), ((
        7.083333, 165.833333, 33.333333), ), ((6.666667, 163.333333, 
        33.333333), ), ((4.583333, 162.5, 33.333333), ), ((2.916667, 
        164.166667, 33.333333), ), ((3.333333, 166.666667, 33.333333), ), ((
        12.5, 161.666667, 33.333333), ), ((11.666667, 165.0, 33.333333), ), ((
        12.5, 168.333333, 33.333333), ), ((17.5, 161.666667, 33.333333), ), ((
        18.333333, 165.0, 33.333333), ), ((17.5, 168.333333, 33.333333), ), ((
        15.416667, 167.5, 33.333333), ), ((17.083333, 165.833333, 33.333333), 
        ), ((16.666667, 163.333333, 33.333333), ), ((14.583333, 162.5, 
        33.333333), ), ((12.916667, 164.166667, 33.333333), ), ((13.333333, 
        166.666667, 33.333333), ), ((22.5, 161.666667, 33.333333), ), ((
        21.666667, 165.0, 33.333333), ), ((22.5, 168.333333, 33.333333), ), ((
        27.5, 161.666667, 33.333333), ), ((28.333333, 165.0, 33.333333), ), ((
        27.5, 168.333333, 33.333333), ), ((25.416667, 167.5, 33.333333), ), ((
        27.083333, 165.833333, 33.333333), ), ((26.666667, 163.333333, 
        33.333333), ), ((24.583333, 162.5, 33.333333), ), ((22.916667, 
        164.166667, 33.333333), ), ((23.333333, 166.666667, 33.333333), ), ((
        32.5, 161.666667, 33.333333), ), ((31.666667, 165.0, 33.333333), ), ((
        32.5, 168.333333, 33.333333), ), ((37.5, 161.666667, 33.333333), ), ((
        38.333333, 165.0, 33.333333), ), ((37.5, 168.333333, 33.333333), ), ((
        35.416667, 167.5, 33.333333), ), ((37.083333, 165.833333, 33.333333), 
        ), ((36.666667, 163.333333, 33.333333), ), ((34.583333, 162.5, 
        33.333333), ), ((32.916667, 164.166667, 33.333333), ), ((33.333333, 
        166.666667, 33.333333), ), ((42.5, 161.666667, 33.333333), ), ((
        41.666667, 165.0, 33.333333), ), ((42.5, 168.333333, 33.333333), ), ((
        47.5, 161.666667, 33.333333), ), ((48.333333, 165.0, 33.333333), ), ((
        47.5, 168.333333, 33.333333), ), ((45.416667, 167.5, 33.333333), ), ((
        47.083333, 165.833333, 33.333333), ), ((46.666667, 163.333333, 
        33.333333), ), ((44.583333, 162.5, 33.333333), ), ((42.916667, 
        164.166667, 33.333333), ), ((43.333333, 166.666667, 33.333333), ), ((
        2.5, 171.666667, 33.333333), ), ((1.666667, 175.0, 33.333333), ), ((
        2.5, 178.333333, 33.333333), ), ((7.5, 171.666667, 33.333333), ), ((
        8.333333, 175.0, 33.333333), ), ((7.5, 178.333333, 33.333333), ), ((
        5.416667, 177.5, 33.333333), ), ((7.083333, 175.833333, 33.333333), ), 
        ((6.666667, 173.333333, 33.333333), ), ((4.583333, 172.5, 33.333333), 
        ), ((2.916667, 174.166667, 33.333333), ), ((3.333333, 176.666667, 
        33.333333), ), ((12.5, 171.666667, 33.333333), ), ((11.666667, 175.0, 
        33.333333), ), ((12.5, 178.333333, 33.333333), ), ((17.5, 171.666667, 
        33.333333), ), ((18.333333, 175.0, 33.333333), ), ((17.5, 178.333333, 
        33.333333), ), ((15.416667, 177.5, 33.333333), ), ((17.083333, 
        175.833333, 33.333333), ), ((16.666667, 173.333333, 33.333333), ), ((
        14.583333, 172.5, 33.333333), ), ((12.916667, 174.166667, 33.333333), 
        ), ((13.333333, 176.666667, 33.333333), ), ((22.5, 171.666667, 
        33.333333), ), ((21.666667, 175.0, 33.333333), ), ((22.5, 178.333333, 
        33.333333), ), ((27.5, 171.666667, 33.333333), ), ((28.333333, 175.0, 
        33.333333), ), ((27.5, 178.333333, 33.333333), ), ((25.416667, 177.5, 
        33.333333), ), ((27.083333, 175.833333, 33.333333), ), ((26.666667, 
        173.333333, 33.333333), ), ((24.583333, 172.5, 33.333333), ), ((
        22.916667, 174.166667, 33.333333), ), ((23.333333, 176.666667, 
        33.333333), ), ((32.5, 171.666667, 33.333333), ), ((31.666667, 175.0, 
        33.333333), ), ((32.5, 178.333333, 33.333333), ), ((37.5, 171.666667, 
        33.333333), ), ((38.333333, 175.0, 33.333333), ), ((37.5, 178.333333, 
        33.333333), ), ((35.416667, 177.5, 33.333333), ), ((37.083333, 
        175.833333, 33.333333), ), ((36.666667, 173.333333, 33.333333), ), ((
        34.583333, 172.5, 33.333333), ), ((32.916667, 174.166667, 33.333333), 
        ), ((33.333333, 176.666667, 33.333333), ), ((42.5, 171.666667, 
        33.333333), ), ((41.666667, 175.0, 33.333333), ), ((42.5, 178.333333, 
        33.333333), ), ((47.5, 171.666667, 33.333333), ), ((48.333333, 175.0, 
        33.333333), ), ((47.5, 178.333333, 33.333333), ), ((45.416667, 177.5, 
        33.333333), ), ((47.083333, 175.833333, 33.333333), ), ((46.666667, 
        173.333333, 33.333333), ), ((44.583333, 172.5, 33.333333), ), ((
        42.916667, 174.166667, 33.333333), ), ((43.333333, 176.666667, 
        33.333333), ), ((2.5, 181.666667, 33.333333), ), ((1.666667, 185.0, 
        33.333333), ), ((2.5, 188.333333, 33.333333), ), ((7.5, 181.666667, 
        33.333333), ), ((8.333333, 185.0, 33.333333), ), ((7.5, 188.333333, 
        33.333333), ), ((5.416667, 187.5, 33.333333), ), ((7.083333, 
        185.833333, 33.333333), ), ((6.666667, 183.333333, 33.333333), ), ((
        4.583333, 182.5, 33.333333), ), ((2.916667, 184.166667, 33.333333), ), 
        ((3.333333, 186.666667, 33.333333), ), ((12.5, 181.666667, 33.333333), 
        ), ((11.666667, 185.0, 33.333333), ), ((12.5, 188.333333, 33.333333), 
        ), ((17.5, 181.666667, 33.333333), ), ((18.333333, 185.0, 33.333333), 
        ), ((17.5, 188.333333, 33.333333), ), ((15.416667, 187.5, 33.333333), 
        ), ((17.083333, 185.833333, 33.333333), ), ((16.666667, 183.333333, 
        33.333333), ), ((14.583333, 182.5, 33.333333), ), ((12.916667, 
        184.166667, 33.333333), ), ((13.333333, 186.666667, 33.333333), ), ((
        22.5, 181.666667, 33.333333), ), ((21.666667, 185.0, 33.333333), ), ((
        22.5, 188.333333, 33.333333), ), ((27.5, 181.666667, 33.333333), ), ((
        28.333333, 185.0, 33.333333), ), ((27.5, 188.333333, 33.333333), ), ((
        25.416667, 187.5, 33.333333), ), ((27.083333, 185.833333, 33.333333), 
        ), ((26.666667, 183.333333, 33.333333), ), ((24.583333, 182.5, 
        33.333333), ), ((22.916667, 184.166667, 33.333333), ), ((23.333333, 
        186.666667, 33.333333), ), ((32.5, 181.666667, 33.333333), ), ((
        31.666667, 185.0, 33.333333), ), ((32.5, 188.333333, 33.333333), ), ((
        37.5, 181.666667, 33.333333), ), ((38.333333, 185.0, 33.333333), ), ((
        37.5, 188.333333, 33.333333), ), ((35.416667, 187.5, 33.333333), ), ((
        37.083333, 185.833333, 33.333333), ), ((36.666667, 183.333333, 
        33.333333), ), ((34.583333, 182.5, 33.333333), ), ((32.916667, 
        184.166667, 33.333333), ), ((33.333333, 186.666667, 33.333333), ), ((
        42.5, 181.666667, 33.333333), ), ((41.666667, 185.0, 33.333333), ), ((
        42.5, 188.333333, 33.333333), ), ((47.5, 181.666667, 33.333333), ), ((
        48.333333, 185.0, 33.333333), ), ((47.5, 188.333333, 33.333333), ), ((
        45.416667, 187.5, 33.333333), ), ((47.083333, 185.833333, 33.333333), 
        ), ((46.666667, 183.333333, 33.333333), ), ((44.583333, 182.5, 
        33.333333), ), ((42.916667, 184.166667, 33.333333), ), ((43.333333, 
        186.666667, 33.333333), ), ((2.5, 191.666667, 33.333333), ), ((
        1.666667, 195.0, 33.333333), ), ((2.5, 198.333333, 33.333333), ), ((
        7.5, 191.666667, 33.333333), ), ((8.333333, 195.0, 33.333333), ), ((
        7.5, 198.333333, 33.333333), ), ((5.416667, 197.5, 33.333333), ), ((
        7.083333, 195.833333, 33.333333), ), ((6.666667, 193.333333, 
        33.333333), ), ((4.583333, 192.5, 33.333333), ), ((2.916667, 
        194.166667, 33.333333), ), ((3.333333, 196.666667, 33.333333), ), ((
        12.5, 191.666667, 33.333333), ), ((11.666667, 195.0, 33.333333), ), ((
        12.5, 198.333333, 33.333333), ))+f.findAt(((17.5, 191.666667, 
        33.333333), ), ((18.333333, 195.0, 33.333333), ), ((17.5, 198.333333, 
        33.333333), ), ((15.416667, 197.5, 33.333333), ), ((17.083333, 
        195.833333, 33.333333), ), ((16.666667, 193.333333, 33.333333), ), ((
        14.583333, 192.5, 33.333333), ), ((12.916667, 194.166667, 33.333333), 
        ), ((13.333333, 196.666667, 33.333333), ), ((22.5, 191.666667, 
        33.333333), ), ((21.666667, 195.0, 33.333333), ), ((22.5, 198.333333, 
        33.333333), ), ((27.5, 191.666667, 33.333333), ), ((28.333333, 195.0, 
        33.333333), ), ((27.5, 198.333333, 33.333333), ), ((25.416667, 197.5, 
        33.333333), ), ((27.083333, 195.833333, 33.333333), ), ((26.666667, 
        193.333333, 33.333333), ), ((24.583333, 192.5, 33.333333), ), ((
        22.916667, 194.166667, 33.333333), ), ((23.333333, 196.666667, 
        33.333333), ), ((32.5, 191.666667, 33.333333), ), ((31.666667, 195.0, 
        33.333333), ), ((32.5, 198.333333, 33.333333), ), ((37.5, 191.666667, 
        33.333333), ), ((38.333333, 195.0, 33.333333), ), ((37.5, 198.333333, 
        33.333333), ), ((35.416667, 197.5, 33.333333), ), ((37.083333, 
        195.833333, 33.333333), ), ((36.666667, 193.333333, 33.333333), ), ((
        34.583333, 192.5, 33.333333), ), ((32.916667, 194.166667, 33.333333), 
        ), ((33.333333, 196.666667, 33.333333), ), ((42.5, 191.666667, 
        33.333333), ), ((41.666667, 195.0, 33.333333), ), ((42.5, 198.333333, 
        33.333333), ), ((47.5, 191.666667, 33.333333), ), ((48.333333, 195.0, 
        33.333333), ), ((47.5, 198.333333, 33.333333), ), ((45.416667, 197.5, 
        33.333333), ), ((47.083333, 195.833333, 33.333333), ), ((46.666667, 
        193.333333, 33.333333), ), ((44.583333, 192.5, 33.333333), ), ((
        42.916667, 194.166667, 33.333333), ), ((43.333333, 196.666667, 
        33.333333), ))
	p.Set(faces=faces, name='swt200s')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 153.333333, 16.666667), ), ((0.0, 156.666667, 
        33.333333), ), ((10.0, 153.333333, 16.666667), ), ((10.0, 156.666667, 
        33.333333), ), ((20.0, 153.333333, 16.666667), ), ((20.0, 156.666667, 
        33.333333), ), ((30.0, 153.333333, 16.666667), ), ((30.0, 156.666667, 
        33.333333), ), ((50.0, 156.666667, 16.666667), ), ((50.0, 153.333333, 
        33.333333), ), ((40.0, 153.333333, 16.666667), ), ((40.0, 156.666667, 
        33.333333), ), ((6.666667, 160.0, 33.333333), ), ((0.0, 163.333333, 
        16.666667), ), ((0.0, 166.666667, 33.333333), ), ((16.666667, 160.0, 
        33.333333), ), ((10.0, 163.333333, 16.666667), ), ((10.0, 166.666667, 
        33.333333), ), ((26.666667, 160.0, 33.333333), ), ((20.0, 163.333333, 
        16.666667), ), ((20.0, 166.666667, 33.333333), ), ((36.666667, 160.0, 
        33.333333), ), ((30.0, 163.333333, 16.666667), ), ((30.0, 166.666667, 
        33.333333), ), ((46.666667, 160.0, 33.333333), ), ((50.0, 166.666667, 
        16.666667), ), ((50.0, 163.333333, 33.333333), ), ((40.0, 163.333333, 
        16.666667), ), ((40.0, 166.666667, 33.333333), ), ((6.666667, 170.0, 
        33.333333), ), ((0.0, 173.333333, 16.666667), ), ((0.0, 176.666667, 
        33.333333), ), ((16.666667, 170.0, 33.333333), ), ((10.0, 173.333333, 
        16.666667), ), ((10.0, 176.666667, 33.333333), ), ((26.666667, 170.0, 
        33.333333), ), ((20.0, 173.333333, 16.666667), ), ((20.0, 176.666667, 
        33.333333), ), ((36.666667, 170.0, 33.333333), ), ((30.0, 173.333333, 
        16.666667), ), ((30.0, 176.666667, 33.333333), ), ((46.666667, 170.0, 
        33.333333), ), ((50.0, 176.666667, 16.666667), ), ((50.0, 173.333333, 
        33.333333), ), ((40.0, 173.333333, 16.666667), ), ((40.0, 176.666667, 
        33.333333), ), ((6.666667, 180.0, 33.333333), ), ((0.0, 183.333333, 
        16.666667), ), ((0.0, 186.666667, 33.333333), ), ((16.666667, 180.0, 
        33.333333), ), ((10.0, 183.333333, 16.666667), ), ((10.0, 186.666667, 
        33.333333), ), ((26.666667, 180.0, 33.333333), ), ((20.0, 183.333333, 
        16.666667), ), ((20.0, 186.666667, 33.333333), ), ((36.666667, 180.0, 
        33.333333), ), ((30.0, 183.333333, 16.666667), ), ((30.0, 186.666667, 
        33.333333), ), ((46.666667, 180.0, 33.333333), ), ((50.0, 186.666667, 
        16.666667), ), ((50.0, 183.333333, 33.333333), ), ((40.0, 183.333333, 
        16.666667), ), ((40.0, 186.666667, 33.333333), ), ((6.666667, 190.0, 
        33.333333), ), ((3.333333, 200.0, 33.333333), ), ((0.0, 193.333333, 
        16.666667), ), ((0.0, 196.666667, 33.333333), ), ((16.666667, 190.0, 
        33.333333), ), ((13.333333, 200.0, 33.333333), ), ((10.0, 193.333333, 
        16.666667), ), ((10.0, 196.666667, 33.333333), ), ((26.666667, 190.0, 
        33.333333), ), ((23.333333, 200.0, 33.333333), ), ((20.0, 193.333333, 
        16.666667), ), ((20.0, 196.666667, 33.333333), ), ((36.666667, 190.0, 
        33.333333), ), ((33.333333, 200.0, 33.333333), ), ((30.0, 193.333333, 
        16.666667), ), ((30.0, 196.666667, 33.333333), ), ((46.666667, 190.0, 
        33.333333), ), ((50.0, 196.666667, 16.666667), ), ((50.0, 193.333333, 
        33.333333), ), ((43.333333, 200.0, 33.333333), ), ((40.0, 193.333333, 
        16.666667), ), ((40.0, 196.666667, 33.333333), ))
	p.Set(faces=faces, name='swt200w')

#at200on() and at200off() can be used for for all AT lengths: 50mm, 100mm, 150mm and of course 200mm. ignore the warnings
def at200on():
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((6.666667, 0.0, 33.333333), ), ((0.0, 3.333333, 16.666667), ), ((0.0, 6.666667, 33.333333), ), ((2.5, 1.666667, 33.333333), ), ((1.666667, 5.0, 33.333333), ), ((2.5, 8.333333, 33.333333), ), ((7.5, 1.666667, 33.333333), ), ((8.333333, 5.0, 33.333333), ), ((7.5, 8.333333, 33.333333), ), ((5.416667, 7.5, 33.333333), ), ((7.083333, 5.833333, 33.333333), ), ((6.666667, 3.333333, 33.333333), ), ((4.583333, 2.5, 33.333333), ), ((2.916667, 4.166667, 33.333333), ), ((3.333333, 6.666667, 33.333333), ), ((16.666667, 0.0, 33.333333), ), ((26.666667, 0.0, 33.333333), ), ((20.0, 3.333333, 16.666667), ), ((20.0, 6.666667, 33.333333), ), ((22.5, 1.666667, 33.333333), ), 
	((21.666667, 5.0, 33.333333), ), ((22.5, 8.333333, 33.333333), ), ((27.5, 1.666667, 
	33.333333), ), ((28.333333, 5.0, 33.333333), ), ((27.5, 8.333333, 
	33.333333), ), ((25.416667, 7.5, 33.333333), ), ((27.083333, 5.833333, 
	33.333333), ), ((26.666667, 3.333333, 33.333333), ), ((24.583333, 2.5, 
	33.333333), ), ((22.916667, 4.166667, 33.333333), ), ((23.333333, 
	6.666667, 33.333333), ), ((36.666667, 0.0, 33.333333), ), ((46.666667, 
	0.0, 33.333333), ), ((40.0, 3.333333, 16.666667), ), ((40.0, 6.666667, 
	33.333333), ), ((42.5, 1.666667, 33.333333), ), ((41.666667, 5.0, 
	33.333333), ), ((42.5, 8.333333, 33.333333), ), ((47.5, 1.666667, 
	33.333333), ), ((48.333333, 5.0, 33.333333), ), ((47.5, 8.333333, 
	33.333333), ), ((45.416667, 7.5, 33.333333), ), ((47.083333, 5.833333, 
	33.333333), ), ((46.666667, 3.333333, 33.333333), ), ((44.583333, 2.5, 
	33.333333), ), ((42.916667, 4.166667, 33.333333), ), ((43.333333, 
	6.666667, 33.333333), ), ((0.0, 13.333333, 16.666667), ), ((0.0, 
	16.666667, 33.333333), ), ((12.5, 11.666667, 33.333333), ), ((
	11.666667, 15.0, 33.333333), ), ((12.5, 18.333333, 33.333333), ), ((
	17.5, 11.666667, 33.333333), ), ((18.333333, 15.0, 33.333333), ), ((
	17.5, 18.333333, 33.333333), ), ((15.416667, 17.5, 33.333333), ), ((
	17.083333, 15.833333, 33.333333), ), ((16.666667, 13.333333, 
	33.333333), ), ((14.583333, 12.5, 33.333333), ), ((12.916667, 
	14.166667, 33.333333), ), ((13.333333, 16.666667, 33.333333), ), ((
	20.0, 13.333333, 16.666667), ), ((20.0, 16.666667, 33.333333), ), ((
	32.5, 11.666667, 33.333333), ), ((31.666667, 15.0, 33.333333), ), ((
	32.5, 18.333333, 33.333333), ), ((37.5, 11.666667, 33.333333), ), ((
	38.333333, 15.0, 33.333333), ), ((37.5, 18.333333, 33.333333), ), ((
	35.416667, 17.5, 33.333333), ), ((37.083333, 15.833333, 33.333333), ), 
	((36.666667, 13.333333, 33.333333), ), ((34.583333, 12.5, 33.333333), 
	), ((32.916667, 14.166667, 33.333333), ), ((33.333333, 16.666667, 
	33.333333), ), ((40.0, 13.333333, 16.666667), ), ((40.0, 16.666667, 
	33.333333), ), ((6.666667, 20.0, 33.333333), ), ((0.0, 23.333333, 
	16.666667), ), ((0.0, 26.666667, 33.333333), ), ((2.5, 21.666667, 
	33.333333), ), ((1.666667, 25.0, 33.333333), ), ((2.5, 28.333333, 
	33.333333), ), ((7.5, 21.666667, 33.333333), ), ((8.333333, 25.0, 
	33.333333), ), ((7.5, 28.333333, 33.333333), ), ((5.416667, 27.5, 
	33.333333), ), ((7.083333, 25.833333, 33.333333), ), ((6.666667, 
	23.333333, 33.333333), ), ((4.583333, 22.5, 33.333333), ), ((2.916667, 
	24.166667, 33.333333), ), ((3.333333, 26.666667, 33.333333), ), ((
	16.666667, 20.0, 33.333333), ), ((26.666667, 20.0, 33.333333), ), ((
	20.0, 23.333333, 16.666667), ), ((20.0, 26.666667, 33.333333), ), ((
	22.5, 21.666667, 33.333333), ), ((21.666667, 25.0, 33.333333), ), ((
	22.5, 28.333333, 33.333333), ), ((27.5, 21.666667, 33.333333), ), ((
	28.333333, 25.0, 33.333333), ), ((27.5, 28.333333, 33.333333), ), ((
	25.416667, 27.5, 33.333333), ), ((27.083333, 25.833333, 33.333333), ), 
	((26.666667, 23.333333, 33.333333), ), ((24.583333, 22.5, 33.333333), 
	), ((22.916667, 24.166667, 33.333333), ), ((23.333333, 26.666667, 
	33.333333), ), ((36.666667, 20.0, 33.333333), ), ((46.666667, 20.0, 
	33.333333), ), ((40.0, 23.333333, 16.666667), ), ((40.0, 26.666667, 
	33.333333), ), ((42.5, 21.666667, 33.333333), ), ((41.666667, 25.0, 
	33.333333), ), ((42.5, 28.333333, 33.333333), ), ((47.5, 21.666667, 
	33.333333), ), ((48.333333, 25.0, 33.333333), ), ((47.5, 28.333333, 
	33.333333), ), ((45.416667, 27.5, 33.333333), ), ((47.083333, 
	25.833333, 33.333333), ), ((46.666667, 23.333333, 33.333333), ), ((
	44.583333, 22.5, 33.333333), ), ((42.916667, 24.166667, 33.333333), ), 
	((43.333333, 26.666667, 33.333333), ), ((0.0, 33.333333, 16.666667), ), 
	((0.0, 36.666667, 33.333333), ), ((12.5, 31.666667, 33.333333), ), ((
	12.5, 38.333333, 33.333333), ), ((17.5, 31.666667, 33.333333), ), ((
	17.5, 38.333333, 33.333333), ), ((15.416667, 37.5, 33.333333), ), ((
	17.083333, 35.833333, 33.333333), ), ((16.666667, 33.333333, 
	33.333333), ), ((14.583333, 32.5, 33.333333), ), ((12.916667, 
	34.166667, 33.333333), ), ((13.333333, 36.666667, 33.333333), ), ((
	20.0, 33.333333, 16.666667), ), ((20.0, 36.666667, 33.333333), ), ((
	32.5, 31.666667, 33.333333), ), ((31.666667, 35.0, 33.333333), ), ((
	32.5, 38.333333, 33.333333), ), ((37.5, 31.666667, 33.333333), ), ((
	38.333333, 35.0, 33.333333), ), ((37.5, 38.333333, 33.333333), ), ((
	35.416667, 37.5, 33.333333), ), ((37.083333, 35.833333, 33.333333), ), 
	((36.666667, 33.333333, 33.333333), ), ((34.583333, 32.5, 33.333333), 
	), ((32.916667, 34.166667, 33.333333), ), ((33.333333, 36.666667, 
	33.333333), ), ((40.0, 33.333333, 16.666667), ), ((40.0, 36.666667, 
	33.333333), ), ((6.666667, 40.0, 33.333333), ), ((0.0, 43.333333, 
	16.666667), ), ((0.0, 46.666667, 33.333333), ), ((2.5, 41.666667, 
	33.333333), ), ((2.5, 48.333333, 33.333333), ), ((7.5, 41.666667, 
	33.333333), ), ((8.333333, 45.0, 33.333333), ), ((7.5, 48.333333, 
	33.333333), ), ((5.416667, 47.5, 33.333333), ), ((7.083333, 45.833333, 
	33.333333), ), ((6.666667, 43.333333, 33.333333), ), ((4.583333, 42.5, 
	33.333333), ), ((2.916667, 44.166667, 33.333333), ), ((3.333333, 
	46.666667, 33.333333), ), ((16.666667, 40.0, 33.333333), ), ((
	26.666667, 40.0, 33.333333), ), ((20.0, 43.333333, 16.666667), ), ((
	20.0, 46.666667, 33.333333), ), ((22.5, 41.666667, 33.333333), ), ((
	22.5, 48.333333, 33.333333), ), ((27.5, 41.666667, 33.333333), ), ((
	28.333333, 45.0, 33.333333), ), ((27.5, 48.333333, 33.333333), ), ((
	25.416667, 47.5, 33.333333), ), ((27.083333, 45.833333, 33.333333), ), 
	((26.666667, 43.333333, 33.333333), ), ((24.583333, 42.5, 33.333333), 
	), ((22.916667, 44.166667, 33.333333), ), ((23.333333, 46.666667, 
	33.333333), ), ((36.666667, 40.0, 33.333333), ), ((46.666667, 40.0, 
	33.333333), ), ((40.0, 43.333333, 16.666667), ), ((40.0, 46.666667, 
	33.333333), ), ((42.5, 41.666667, 33.333333), ), ((41.666667, 45.0, 
	33.333333), ), ((42.5, 48.333333, 33.333333), ), ((47.5, 41.666667, 
	33.333333), ), ((48.333333, 45.0, 33.333333), ), ((47.5, 48.333333, 
	33.333333), ), ((45.416667, 47.5, 33.333333), ), ((47.083333, 
	45.833333, 33.333333), ), ((46.666667, 43.333333, 33.333333), ), ((
	44.583333, 42.5, 33.333333), ), ((42.916667, 44.166667, 33.333333), ), 
	((43.333333, 46.666667, 33.333333), ), ((0.0, 53.333333, 16.666667), ), 
	((0.0, 56.666667, 33.333333), ), ((12.5, 51.666667, 33.333333), ), ((
	11.666667, 55.0, 33.333333), ), ((12.5, 58.333333, 33.333333), ), ((
	17.5, 51.666667, 33.333333), ), ((18.333333, 55.0, 33.333333), ), ((
	17.5, 58.333333, 33.333333), ), ((15.416667, 57.5, 33.333333), ), ((
	17.083333, 55.833333, 33.333333), ), ((16.666667, 53.333333, 
	33.333333), ), ((14.583333, 52.5, 33.333333), ), ((12.916667, 
	54.166667, 33.333333), ), ((13.333333, 56.666667, 33.333333), ), ((
	20.0, 53.333333, 16.666667), ), ((20.0, 56.666667, 33.333333), ), ((
	32.5, 51.666667, 33.333333), ), ((31.666667, 55.0, 33.333333), ), ((
	32.5, 58.333333, 33.333333), ), ((37.5, 51.666667, 33.333333), ), ((
	38.333333, 55.0, 33.333333), ), ((37.5, 58.333333, 33.333333), ), ((
	35.416667, 57.5, 33.333333), ), ((37.083333, 55.833333, 33.333333), ), 
	((36.666667, 53.333333, 33.333333), ), ((34.583333, 52.5, 33.333333), 
	), ((32.916667, 54.166667, 33.333333), ), ((33.333333, 56.666667, 
	33.333333), ), ((40.0, 53.333333, 16.666667), ), ((40.0, 56.666667, 
	33.333333), ), ((6.666667, 60.0, 33.333333), ), ((0.0, 63.333333, 
	16.666667), ), ((0.0, 66.666667, 33.333333), ), ((2.5, 61.666667, 
	33.333333), ), ((1.666667, 65.0, 33.333333), ), ((2.5, 68.333333, 
	33.333333), ), ((7.5, 61.666667, 33.333333), ), ((8.333333, 65.0, 
	33.333333), ), ((7.5, 68.333333, 33.333333), ), ((5.416667, 67.5, 
	33.333333), ), ((7.083333, 65.833333, 33.333333), ), ((6.666667, 
	63.333333, 33.333333), ), ((4.583333, 62.5, 33.333333), ), ((2.916667, 
	64.166667, 33.333333), ), ((3.333333, 66.666667, 33.333333), ), ((
	16.666667, 60.0, 33.333333), ), ((26.666667, 60.0, 33.333333), ), ((
	20.0, 63.333333, 16.666667), ), ((20.0, 66.666667, 33.333333), ), ((
	22.5, 61.666667, 33.333333), ), ((21.666667, 65.0, 33.333333), ), ((
	22.5, 68.333333, 33.333333), ), ((27.5, 61.666667, 33.333333), ), ((
	28.333333, 65.0, 33.333333), ), ((27.5, 68.333333, 33.333333), ), ((
	25.416667, 67.5, 33.333333), ), ((27.083333, 65.833333, 33.333333), ), 
	((26.666667, 63.333333, 33.333333), ))+f.findAt(((24.583333, 62.5, 
	33.333333), ), ((22.916667, 64.166667, 33.333333), ), ((23.333333, 
	66.666667, 33.333333), ), ((36.666667, 60.0, 33.333333), ), ((
	46.666667, 60.0, 33.333333), ), ((40.0, 63.333333, 16.666667), ), ((
	40.0, 66.666667, 33.333333), ), ((42.5, 61.666667, 33.333333), ), ((
	41.666667, 65.0, 33.333333), ), ((42.5, 68.333333, 33.333333), ), ((
	47.5, 61.666667, 33.333333), ), ((48.333333, 65.0, 33.333333), ), ((
	47.5, 68.333333, 33.333333), ), ((45.416667, 67.5, 33.333333), ), ((
	47.083333, 65.833333, 33.333333), ), ((46.666667, 63.333333, 
	33.333333), ), ((44.583333, 62.5, 33.333333), ), ((42.916667, 
	64.166667, 33.333333), ), ((43.333333, 66.666667, 33.333333), ), ((0.0, 
	73.333333, 16.666667), ), ((0.0, 76.666667, 33.333333), ), ((12.5, 
	71.666667, 33.333333), ), ((11.666667, 75.0, 33.333333), ), ((12.5, 
	78.333333, 33.333333), ), ((17.5, 71.666667, 33.333333), ), ((
	18.333333, 75.0, 33.333333), ), ((17.5, 78.333333, 33.333333), ), ((
	15.416667, 77.5, 33.333333), ), ((17.083333, 75.833333, 33.333333), ), 
	((16.666667, 73.333333, 33.333333), ), ((14.583333, 72.5, 33.333333), 
	), ((12.916667, 74.166667, 33.333333), ), ((13.333333, 76.666667, 
	33.333333), ), ((20.0, 73.333333, 16.666667), ), ((20.0, 76.666667, 
	33.333333), ), ((32.5, 71.666667, 33.333333), ), ((31.666667, 75.0, 
	33.333333), ), ((32.5, 78.333333, 33.333333), ), ((37.5, 71.666667, 
	33.333333), ), ((38.333333, 75.0, 33.333333), ), ((37.5, 78.333333, 
	33.333333), ), ((35.416667, 77.5, 33.333333), ), ((37.083333, 
	75.833333, 33.333333), ), ((36.666667, 73.333333, 33.333333), ), ((
	34.583333, 72.5, 33.333333), ), ((32.916667, 74.166667, 33.333333), ), 
	((33.333333, 76.666667, 33.333333), ), ((40.0, 73.333333, 16.666667), 
	), ((40.0, 76.666667, 33.333333), ), ((6.666667, 80.0, 33.333333), ), (
	(0.0, 83.333333, 16.666667), ), ((0.0, 86.666667, 33.333333), ), ((2.5, 
	81.666667, 33.333333), ), ((1.666667, 85.0, 33.333333), ), ((2.5, 
	88.333333, 33.333333), ), ((7.5, 81.666667, 33.333333), ), ((8.333333, 
	85.0, 33.333333), ), ((7.5, 88.333333, 33.333333), ), ((5.416667, 87.5, 
	33.333333), ), ((7.083333, 85.833333, 33.333333), ), ((6.666667, 
	83.333333, 33.333333), ), ((4.583333, 82.5, 33.333333), ), ((2.916667, 
	84.166667, 33.333333), ), ((3.333333, 86.666667, 33.333333), ), ((
	16.666667, 80.0, 33.333333), ), ((26.666667, 80.0, 33.333333), ), ((
	20.0, 83.333333, 16.666667), ), ((20.0, 86.666667, 33.333333), ), ((
	22.5, 81.666667, 33.333333), ), ((21.666667, 85.0, 33.333333), ), ((
	22.5, 88.333333, 33.333333), ), ((27.5, 81.666667, 33.333333), ), ((
	28.333333, 85.0, 33.333333), ), ((27.5, 88.333333, 33.333333), ), ((
	25.416667, 87.5, 33.333333), ), ((27.083333, 85.833333, 33.333333), ), 
	((26.666667, 83.333333, 33.333333), ), ((24.583333, 82.5, 33.333333), 
	), ((22.916667, 84.166667, 33.333333), ), ((23.333333, 86.666667, 
	33.333333), ), ((36.666667, 80.0, 33.333333), ), ((46.666667, 80.0, 
	33.333333), ), ((40.0, 83.333333, 16.666667), ), ((40.0, 86.666667, 
	33.333333), ), ((42.5, 81.666667, 33.333333), ), ((41.666667, 85.0, 
	33.333333), ), ((42.5, 88.333333, 33.333333), ), ((47.5, 81.666667, 
	33.333333), ), ((48.333333, 85.0, 33.333333), ), ((47.5, 88.333333, 
	33.333333), ), ((45.416667, 87.5, 33.333333), ), ((47.083333, 
	85.833333, 33.333333), ), ((46.666667, 83.333333, 33.333333), ), ((
	44.583333, 82.5, 33.333333), ), ((42.916667, 84.166667, 33.333333), ), 
	((43.333333, 86.666667, 33.333333), ), ((0.0, 93.333333, 16.666667), ), 
	((0.0, 96.666667, 33.333333), ), ((12.5, 91.666667, 33.333333), ), ((
	11.666667, 95.0, 33.333333), ), ((12.5, 98.333333, 33.333333), ), ((
	17.5, 91.666667, 33.333333), ), ((18.333333, 95.0, 33.333333), ), ((
	17.5, 98.333333, 33.333333), ), ((15.416667, 97.5, 33.333333), ), ((
	17.083333, 95.833333, 33.333333), ), ((16.666667, 93.333333, 
	33.333333), ), ((14.583333, 92.5, 33.333333), ), ((12.916667, 
	94.166667, 33.333333), ), ((13.333333, 96.666667, 33.333333), ), ((
	20.0, 93.333333, 16.666667), ), ((20.0, 96.666667, 33.333333), ), ((
	32.5, 91.666667, 33.333333), ), ((31.666667, 95.0, 33.333333), ), ((
	32.5, 98.333333, 33.333333), ), ((37.5, 91.666667, 33.333333), ), ((
	38.333333, 95.0, 33.333333), ), ((37.5, 98.333333, 33.333333), ), ((
	35.416667, 97.5, 33.333333), ), ((37.083333, 95.833333, 33.333333), ), 
	((36.666667, 93.333333, 33.333333), ), ((34.583333, 92.5, 33.333333), 
	), ((32.916667, 94.166667, 33.333333), ), ((33.333333, 96.666667, 
	33.333333), ), ((40.0, 93.333333, 16.666667), ), ((40.0, 96.666667, 
	33.333333), ), ((6.666667, 100.0, 33.333333), ), ((0.0, 103.333333, 
	16.666667), ), ((0.0, 106.666667, 33.333333), ), ((2.5, 101.666667, 
	33.333333), ), ((1.666667, 105.0, 33.333333), ), ((2.5, 108.333333, 
	33.333333), ), ((7.5, 101.666667, 33.333333), ), ((8.333333, 105.0, 
	33.333333), ), ((7.5, 108.333333, 33.333333), ), ((5.416667, 107.5, 
	33.333333), ), ((7.083333, 105.833333, 33.333333), ), ((6.666667, 
	103.333333, 33.333333), ), ((4.583333, 102.5, 33.333333), ), ((
	2.916667, 104.166667, 33.333333), ), ((3.333333, 106.666667, 
	33.333333), ), ((16.666667, 100.0, 33.333333), ), ((26.666667, 100.0, 
	33.333333), ), ((20.0, 103.333333, 16.666667), ), ((20.0, 106.666667, 
	33.333333), ), ((22.5, 101.666667, 33.333333), ), ((21.666667, 105.0, 
	33.333333), ), ((22.5, 108.333333, 33.333333), ), ((27.5, 101.666667, 
	33.333333), ), ((28.333333, 105.0, 33.333333), ), ((27.5, 108.333333, 
	33.333333), ), ((25.416667, 107.5, 33.333333), ), ((27.083333, 
	105.833333, 33.333333), ), ((26.666667, 103.333333, 33.333333), ), ((
	24.583333, 102.5, 33.333333), ), ((22.916667, 104.166667, 33.333333), 
	), ((23.333333, 106.666667, 33.333333), ), ((36.666667, 100.0, 
	33.333333), ), ((46.666667, 100.0, 33.333333), ), ((40.0, 103.333333, 
	16.666667), ), ((40.0, 106.666667, 33.333333), ), ((42.5, 101.666667, 
	33.333333), ), ((41.666667, 105.0, 33.333333), ), ((42.5, 108.333333, 
	33.333333), ), ((47.5, 101.666667, 33.333333), ), ((48.333333, 105.0, 
	33.333333), ), ((47.5, 108.333333, 33.333333), ), ((45.416667, 107.5, 
	33.333333), ), ((47.083333, 105.833333, 33.333333), ), ((46.666667, 
	103.333333, 33.333333), ), ((44.583333, 102.5, 33.333333), ), ((
	42.916667, 104.166667, 33.333333), ), ((43.333333, 106.666667, 
	33.333333), ), ((0.0, 113.333333, 16.666667), ), ((0.0, 116.666667, 
	33.333333), ), ((12.5, 111.666667, 33.333333), ), ((11.666667, 115.0, 
	33.333333), ), ((12.5, 118.333333, 33.333333), ), ((17.5, 111.666667, 
	33.333333), ), ((18.333333, 115.0, 33.333333), ), ((17.5, 118.333333, 
	33.333333), ), ((15.416667, 117.5, 33.333333), ), ((17.083333, 
	115.833333, 33.333333), ), ((16.666667, 113.333333, 33.333333), ), ((
	14.583333, 112.5, 33.333333), ), ((12.916667, 114.166667, 33.333333), 
	), ((13.333333, 116.666667, 33.333333), ), ((20.0, 113.333333, 
	16.666667), ), ((20.0, 116.666667, 33.333333), ), ((32.5, 111.666667, 
	33.333333), ), ((31.666667, 115.0, 33.333333), ), ((32.5, 118.333333, 
	33.333333), ), ((37.5, 111.666667, 33.333333), ), ((37.5, 118.333333, 
	33.333333), ), ((35.416667, 117.5, 33.333333), ), ((37.083333, 
	115.833333, 33.333333), ), ((36.666667, 113.333333, 33.333333), ), ((
	34.583333, 112.5, 33.333333), ), ((32.916667, 114.166667, 33.333333), 
	), ((33.333333, 116.666667, 33.333333), ), ((40.0, 113.333333, 
	16.666667), ), ((40.0, 116.666667, 33.333333), ), ((6.666667, 120.0, 
	33.333333), ), ((0.0, 123.333333, 16.666667), ), ((0.0, 126.666667, 
	33.333333), ), ((2.5, 121.666667, 33.333333), ), ((1.666667, 125.0, 
	33.333333), ), ((2.5, 128.333333, 33.333333), ), ((7.5, 121.666667, 
	33.333333), ), ((8.333333, 125.0, 33.333333), ), ((7.5, 128.333333, 
	33.333333), ), ((5.416667, 127.5, 33.333333), ), ((7.083333, 
	125.833333, 33.333333), ), ((6.666667, 123.333333, 33.333333), ), ((
	4.583333, 122.5, 33.333333), ), ((2.916667, 124.166667, 33.333333), ), 
	((3.333333, 126.666667, 33.333333), ), ((16.666667, 120.0, 33.333333), 
	), ((26.666667, 120.0, 33.333333), ), ((20.0, 123.333333, 16.666667), 
	), ((20.0, 126.666667, 33.333333), ), ((22.5, 121.666667, 33.333333), 
	), ((21.666667, 125.0, 33.333333), ), ((22.5, 128.333333, 33.333333), 
	), ((27.5, 121.666667, 33.333333), ), ((28.333333, 125.0, 33.333333), 
	), ((27.5, 128.333333, 33.333333), ), ((25.416667, 127.5, 33.333333), 
	), ((27.083333, 125.833333, 33.333333), ), ((26.666667, 123.333333, 
	33.333333), ), ((24.583333, 122.5, 33.333333), ), ((22.916667, 
	124.166667, 33.333333), ), ((23.333333, 126.666667, 33.333333), ), ((
	36.666667, 120.0, 33.333333), ), ((46.666667, 120.0, 33.333333), ), ((
	40.0, 123.333333, 16.666667), ), ((40.0, 126.666667, 33.333333), ), ((
	42.5, 121.666667, 33.333333), ), ((41.666667, 125.0, 33.333333), ), ((
	42.5, 128.333333, 33.333333), ), ((47.5, 121.666667, 33.333333), ), ((
	48.333333, 125.0, 33.333333), ), ((47.5, 128.333333, 33.333333), ), ((
	45.416667, 127.5, 33.333333), ), ((47.083333, 125.833333, 33.333333), 
	), ((46.666667, 123.333333, 33.333333), ), ((44.583333, 122.5, 
	33.333333), ), ((42.916667, 124.166667, 33.333333), ), ((43.333333, 
	126.666667, 33.333333), ), ((0.0, 133.333333, 16.666667), ), ((0.0, 
	136.666667, 33.333333), ), ((12.5, 131.666667, 33.333333), ), ((
	11.666667, 135.0, 33.333333), ), ((12.5, 138.333333, 33.333333), ), ((
	17.5, 131.666667, 33.333333), ))+f.findAt(((18.333333, 135.0, 
	33.333333), ), ((17.5, 138.333333, 33.333333), ), ((15.416667, 137.5, 
	33.333333), ), ((17.083333, 135.833333, 33.333333), ), ((16.666667, 
	133.333333, 33.333333), ), ((14.583333, 132.5, 33.333333), ), ((
	12.916667, 134.166667, 33.333333), ), ((13.333333, 136.666667, 
	33.333333), ), ((20.0, 133.333333, 16.666667), ), ((20.0, 136.666667, 
	33.333333), ), ((32.5, 131.666667, 33.333333), ), ((31.666667, 135.0, 
	33.333333), ), ((32.5, 138.333333, 33.333333), ), ((37.5, 131.666667, 
	33.333333), ), ((38.333333, 135.0, 33.333333), ), ((37.5, 138.333333, 
	33.333333), ), ((35.416667, 137.5, 33.333333), ), ((37.083333, 
	135.833333, 33.333333), ), ((36.666667, 133.333333, 33.333333), ), ((
	34.583333, 132.5, 33.333333), ), ((32.916667, 134.166667, 33.333333), 
	), ((33.333333, 136.666667, 33.333333), ), ((40.0, 133.333333, 
	16.666667), ), ((40.0, 136.666667, 33.333333), ), ((6.666667, 140.0, 
	33.333333), ), ((0.0, 143.333333, 16.666667), ), ((0.0, 146.666667, 
	33.333333), ), ((2.5, 141.666667, 33.333333), ), ((1.666667, 145.0, 
	33.333333), ), ((2.5, 148.333333, 33.333333), ), ((7.5, 141.666667, 
	33.333333), ), ((8.333333, 145.0, 33.333333), ), ((7.5, 148.333333, 
	33.333333), ), ((5.416667, 147.5, 33.333333), ), ((7.083333, 
	145.833333, 33.333333), ), ((6.666667, 143.333333, 33.333333), ), ((
	4.583333, 142.5, 33.333333), ), ((2.916667, 144.166667, 33.333333), ), 
	((3.333333, 146.666667, 33.333333), ), ((16.666667, 140.0, 33.333333), 
	), ((26.666667, 140.0, 33.333333), ), ((20.0, 143.333333, 16.666667), 
	), ((20.0, 146.666667, 33.333333), ), ((22.5, 141.666667, 33.333333), 
	), ((21.666667, 145.0, 33.333333), ), ((22.5, 148.333333, 33.333333), 
	), ((27.5, 141.666667, 33.333333), ), ((28.333333, 145.0, 33.333333), 
	), ((27.5, 148.333333, 33.333333), ), ((25.416667, 147.5, 33.333333), 
	), ((27.083333, 145.833333, 33.333333), ), ((26.666667, 143.333333, 
	33.333333), ), ((24.583333, 142.5, 33.333333), ), ((22.916667, 
	144.166667, 33.333333), ), ((23.333333, 146.666667, 33.333333), ), ((
	36.666667, 140.0, 33.333333), ), ((46.666667, 140.0, 33.333333), ), ((
	40.0, 143.333333, 16.666667), ), ((40.0, 146.666667, 33.333333), ), ((
	42.5, 141.666667, 33.333333), ), ((41.666667, 145.0, 33.333333), ), ((
	42.5, 148.333333, 33.333333), ), ((47.5, 141.666667, 33.333333), ), ((
	48.333333, 145.0, 33.333333), ), ((47.5, 148.333333, 33.333333), ), ((
	45.416667, 147.5, 33.333333), ), ((47.083333, 145.833333, 33.333333), 
	), ((46.666667, 143.333333, 33.333333), ), ((44.583333, 142.5, 
	33.333333), ), ((42.916667, 144.166667, 33.333333), ), ((43.333333, 
	146.666667, 33.333333), ), ((0.0, 153.333333, 16.666667), ), ((0.0, 
	156.666667, 33.333333), ), ((12.5, 151.666667, 33.333333), ), ((
	11.666667, 155.0, 33.333333), ), ((12.5, 158.333333, 33.333333), ), ((
	17.5, 151.666667, 33.333333), ), ((18.333333, 155.0, 33.333333), ), ((
	17.5, 158.333333, 33.333333), ), ((15.416667, 157.5, 33.333333), ), ((
	17.083333, 155.833333, 33.333333), ), ((16.666667, 153.333333, 
	33.333333), ), ((14.583333, 152.5, 33.333333), ), ((12.916667, 
	154.166667, 33.333333), ), ((13.333333, 156.666667, 33.333333), ), ((
	20.0, 153.333333, 16.666667), ), ((20.0, 156.666667, 33.333333), ), ((
	32.5, 151.666667, 33.333333), ), ((31.666667, 155.0, 33.333333), ), ((
	32.5, 158.333333, 33.333333), ), ((37.5, 151.666667, 33.333333), ), ((
	37.5, 158.333333, 33.333333), ), ((35.416667, 157.5, 33.333333), ), ((
	37.083333, 155.833333, 33.333333), ), ((36.666667, 153.333333, 
	33.333333), ), ((34.583333, 152.5, 33.333333), ), ((32.916667, 
	154.166667, 33.333333), ), ((33.333333, 156.666667, 33.333333), ), ((
	40.0, 153.333333, 16.666667), ), ((40.0, 156.666667, 33.333333), ), ((
	6.666667, 160.0, 33.333333), ), ((0.0, 163.333333, 16.666667), ), ((
	0.0, 166.666667, 33.333333), ), ((2.5, 161.666667, 33.333333), ), ((
	1.666667, 165.0, 33.333333), ), ((2.5, 168.333333, 33.333333), ), ((
	7.5, 161.666667, 33.333333), ), ((8.333333, 165.0, 33.333333), ), ((
	7.5, 168.333333, 33.333333), ), ((5.416667, 167.5, 33.333333), ), ((
	7.083333, 165.833333, 33.333333), ), ((6.666667, 163.333333, 
	33.333333), ), ((4.583333, 162.5, 33.333333), ), ((2.916667, 
	164.166667, 33.333333), ), ((3.333333, 166.666667, 33.333333), ), ((
	16.666667, 160.0, 33.333333), ), ((26.666667, 160.0, 33.333333), ), ((
	20.0, 163.333333, 16.666667), ), ((20.0, 166.666667, 33.333333), ), ((
	22.5, 161.666667, 33.333333), ), ((21.666667, 165.0, 33.333333), ), ((
	22.5, 168.333333, 33.333333), ), ((27.5, 161.666667, 33.333333), ), ((
	28.333333, 165.0, 33.333333), ), ((27.5, 168.333333, 33.333333), ), ((
	25.416667, 167.5, 33.333333), ), ((27.083333, 165.833333, 33.333333), 
	), ((26.666667, 163.333333, 33.333333), ), ((24.583333, 162.5, 
	33.333333), ), ((22.916667, 164.166667, 33.333333), ), ((23.333333, 
	166.666667, 33.333333), ), ((36.666667, 160.0, 33.333333), ), ((
	46.666667, 160.0, 33.333333), ), ((40.0, 163.333333, 16.666667), ), ((
	40.0, 166.666667, 33.333333), ), ((42.5, 161.666667, 33.333333), ), ((
	41.666667, 165.0, 33.333333), ), ((42.5, 168.333333, 33.333333), ), ((
	47.5, 161.666667, 33.333333), ), ((48.333333, 165.0, 33.333333), ), ((
	47.5, 168.333333, 33.333333), ), ((45.416667, 167.5, 33.333333), ), ((
	47.083333, 165.833333, 33.333333), ), ((46.666667, 163.333333, 
	33.333333), ), ((44.583333, 162.5, 33.333333), ), ((42.916667, 
	164.166667, 33.333333), ), ((43.333333, 166.666667, 33.333333), ), ((
	0.0, 173.333333, 16.666667), ), ((0.0, 176.666667, 33.333333), ), ((
	12.5, 171.666667, 33.333333), ), ((11.666667, 175.0, 33.333333), ), ((
	12.5, 178.333333, 33.333333), ), ((17.5, 171.666667, 33.333333), ), ((
	18.333333, 175.0, 33.333333), ), ((17.5, 178.333333, 33.333333), ), ((
	15.416667, 177.5, 33.333333), ), ((17.083333, 175.833333, 33.333333), 
	), ((16.666667, 173.333333, 33.333333), ), ((14.583333, 172.5, 
	33.333333), ), ((12.916667, 174.166667, 33.333333), ), ((13.333333, 
	176.666667, 33.333333), ), ((20.0, 173.333333, 16.666667), ), ((20.0, 
	176.666667, 33.333333), ), ((32.5, 171.666667, 33.333333), ), ((
	31.666667, 175.0, 33.333333), ), ((32.5, 178.333333, 33.333333), ), ((
	37.5, 171.666667, 33.333333), ), ((38.333333, 175.0, 33.333333), ), ((
	37.5, 178.333333, 33.333333), ), ((35.416667, 177.5, 33.333333), ), ((
	37.083333, 175.833333, 33.333333), ), ((36.666667, 173.333333, 
	33.333333), ), ((34.583333, 172.5, 33.333333), ), ((32.916667, 
	174.166667, 33.333333), ), ((33.333333, 176.666667, 33.333333), ), ((
	40.0, 173.333333, 16.666667), ), ((40.0, 176.666667, 33.333333), ), ((
	6.666667, 180.0, 33.333333), ), ((0.0, 183.333333, 16.666667), ), ((
	0.0, 186.666667, 33.333333), ), ((2.5, 181.666667, 33.333333), ), ((
	2.5, 188.333333, 33.333333), ), ((7.5, 181.666667, 33.333333), ), ((
	8.333333, 185.0, 33.333333), ), ((7.5, 188.333333, 33.333333), ), ((
	5.416667, 187.5, 33.333333), ), ((7.083333, 185.833333, 33.333333), ), 
	((6.666667, 183.333333, 33.333333), ), ((4.583333, 182.5, 33.333333), 
	), ((2.916667, 184.166667, 33.333333), ), ((3.333333, 186.666667, 
	33.333333), ), ((16.666667, 180.0, 33.333333), ), ((26.666667, 180.0, 
	33.333333), ), ((20.0, 183.333333, 16.666667), ), ((20.0, 186.666667, 
	33.333333), ), ((22.5, 181.666667, 33.333333), ), ((22.5, 188.333333, 
	33.333333), ), ((27.5, 181.666667, 33.333333), ), ((28.333333, 185.0, 
	33.333333), ), ((27.5, 188.333333, 33.333333), ), ((25.416667, 187.5, 
	33.333333), ), ((27.083333, 185.833333, 33.333333), ), ((26.666667, 
	183.333333, 33.333333), ), ((24.583333, 182.5, 33.333333), ), ((
	22.916667, 184.166667, 33.333333), ), ((23.333333, 186.666667, 
	33.333333), ), ((36.666667, 180.0, 33.333333), ), ((46.666667, 180.0, 
	33.333333), ), ((40.0, 183.333333, 16.666667), ), ((40.0, 186.666667, 
	33.333333), ), ((42.5, 181.666667, 33.333333), ), ((41.666667, 185.0, 
	33.333333), ), ((42.5, 188.333333, 33.333333), ), ((47.5, 181.666667, 
	33.333333), ), ((48.333333, 185.0, 33.333333), ), ((47.5, 188.333333, 
	33.333333), ), ((45.416667, 187.5, 33.333333), ), ((47.083333, 
	185.833333, 33.333333), ), ((46.666667, 183.333333, 33.333333), ), ((
	44.583333, 182.5, 33.333333), ), ((42.916667, 184.166667, 33.333333), 
	), ((43.333333, 186.666667, 33.333333), ), ((3.333333, 200.0, 
	33.333333), ), ((0.0, 193.333333, 16.666667), ), ((0.0, 196.666667, 
	33.333333), ), ((13.333333, 200.0, 33.333333), ), ((12.5, 191.666667, 
	33.333333), ), ((11.666667, 195.0, 33.333333), ), ((12.5, 198.333333, 
	33.333333), ), ((17.5, 191.666667, 33.333333), ), ((17.5, 198.333333, 
	33.333333), ), ((15.416667, 197.5, 33.333333), ), ((17.083333, 
	195.833333, 33.333333), ), ((16.666667, 193.333333, 33.333333), ), ((
	14.583333, 192.5, 33.333333), ), ((12.916667, 194.166667, 33.333333), 
	), ((13.333333, 196.666667, 33.333333), ), ((23.333333, 200.0, 
	33.333333), ), ((20.0, 193.333333, 16.666667), ), ((20.0, 196.666667, 
	33.333333), ), ((33.333333, 200.0, 33.333333), ), ((32.5, 191.666667, 
	33.333333), ), ((31.666667, 195.0, 33.333333), ), ((32.5, 198.333333, 
	33.333333), ), ((37.5, 191.666667, 33.333333), ), ((38.333333, 195.0, 
	33.333333), ), ((37.5, 198.333333, 33.333333), ), ((35.416667, 197.5, 
	33.333333), ), ((37.083333, 195.833333, 33.333333), ), ((36.666667, 
	193.333333, 33.333333), ), ((34.583333, 192.5, 33.333333), ), ((
	32.916667, 194.166667, 33.333333), ), ((33.333333, 196.666667, 
	33.333333), ), ((43.333333, 200.0, 33.333333), ), ((40.0, 193.333333, 
	16.666667), ))+f.findAt(((40.0, 196.666667, 33.333333), ))+f.findAt(((11.666667, 35.0, 33.333333), ), ((18.333333, 35.0, 
	33.333333), ), ((1.666667, 45.0, 33.333333), ), ((21.666667, 45.0, 
	33.333333), ), ((38.333333, 115.0, 33.333333), ), ((38.333333, 155.0, 
	33.333333), ), ((1.666667, 185.0, 33.333333), ), ((21.666667, 185.0, 
	33.333333), ), ((18.333333, 195.0, 33.333333), ))
	p.Set(faces=faces, name='on')

def at200off():
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((12.5, 1.666667, 33.333333), ), ((11.666667, 5.0, 33.333333), ), ((12.5, 8.333333, 33.333333), ), ((17.5, 1.666667, 33.333333), ), ((
	18.333333, 5.0, 33.333333), ), ((17.5, 8.333333, 33.333333), ), ((
	15.416667, 7.5, 33.333333), ), ((17.083333, 5.833333, 33.333333), ), ((
	16.666667, 3.333333, 33.333333), ), ((14.583333, 2.5, 33.333333), ), ((
	12.916667, 4.166667, 33.333333), ), ((13.333333, 6.666667, 33.333333), 
	), ((32.5, 1.666667, 33.333333), ), ((31.666667, 5.0, 33.333333), ), ((
	32.5, 8.333333, 33.333333), ), ((37.5, 1.666667, 33.333333), ), ((
	38.333333, 5.0, 33.333333), ), ((37.5, 8.333333, 33.333333), ), ((
	35.416667, 7.5, 33.333333), ), ((37.083333, 5.833333, 33.333333), ), ((
	36.666667, 3.333333, 33.333333), ), ((34.583333, 2.5, 33.333333), ), ((
	32.916667, 4.166667, 33.333333), ), ((33.333333, 6.666667, 33.333333), 
	), ((6.666667, 10.0, 33.333333), ), ((2.5, 11.666667, 33.333333), ), ((
	1.666667, 15.0, 33.333333), ), ((2.5, 18.333333, 33.333333), ), ((7.5, 
	11.666667, 33.333333), ), ((8.333333, 15.0, 33.333333), ), ((7.5, 
	18.333333, 33.333333), ), ((5.416667, 17.5, 33.333333), ), ((7.083333, 
	15.833333, 33.333333), ), ((6.666667, 13.333333, 33.333333), ), ((
	4.583333, 12.5, 33.333333), ), ((2.916667, 14.166667, 33.333333), ), ((
	3.333333, 16.666667, 33.333333), ), ((16.666667, 10.0, 33.333333), ), (
	(26.666667, 10.0, 33.333333), ), ((22.5, 11.666667, 33.333333), ), ((
	21.666667, 15.0, 33.333333), ), ((22.5, 18.333333, 33.333333), ), ((
	27.5, 11.666667, 33.333333), ), ((28.333333, 15.0, 33.333333), ), ((
	27.5, 18.333333, 33.333333), ), ((25.416667, 17.5, 33.333333), ), ((
	27.083333, 15.833333, 33.333333), ), ((26.666667, 13.333333, 
	33.333333), ), ((24.583333, 12.5, 33.333333), ), ((22.916667, 
	14.166667, 33.333333), ), ((23.333333, 16.666667, 33.333333), ), ((
	36.666667, 10.0, 33.333333), ), ((46.666667, 10.0, 33.333333), ), ((
	42.5, 11.666667, 33.333333), ), ((41.666667, 15.0, 33.333333), ), ((
	42.5, 18.333333, 33.333333), ), ((47.5, 11.666667, 33.333333), ), ((
	48.333333, 15.0, 33.333333), ), ((47.5, 18.333333, 33.333333), ), ((
	45.416667, 17.5, 33.333333), ), ((47.083333, 15.833333, 33.333333), ), 
	((46.666667, 13.333333, 33.333333), ), ((44.583333, 12.5, 33.333333), 
	), ((42.916667, 14.166667, 33.333333), ), ((43.333333, 16.666667, 
	33.333333), ), ((12.5, 21.666667, 33.333333), ), ((11.666667, 25.0, 
	33.333333), ), ((12.5, 28.333333, 33.333333), ), ((17.5, 21.666667, 
	33.333333), ), ((18.333333, 25.0, 33.333333), ), ((17.5, 28.333333, 
	33.333333), ), ((15.416667, 27.5, 33.333333), ), ((17.083333, 
	25.833333, 33.333333), ), ((16.666667, 23.333333, 33.333333), ), ((
	14.583333, 22.5, 33.333333), ), ((12.916667, 24.166667, 33.333333), ), 
	((13.333333, 26.666667, 33.333333), ), ((32.5, 21.666667, 33.333333), 
	), ((31.666667, 25.0, 33.333333), ), ((32.5, 28.333333, 33.333333), ), 
	((37.5, 21.666667, 33.333333), ), ((38.333333, 25.0, 33.333333), ), ((
	37.5, 28.333333, 33.333333), ), ((35.416667, 27.5, 33.333333), ), ((
	37.083333, 25.833333, 33.333333), ), ((36.666667, 23.333333, 
	33.333333), ), ((34.583333, 22.5, 33.333333), ), ((32.916667, 
	24.166667, 33.333333), ), ((33.333333, 26.666667, 33.333333), ), ((2.5, 
	31.666667, 33.333333), ), ((1.666667, 35.0, 33.333333), ), ((2.5, 
	38.333333, 33.333333), ), ((7.5, 31.666667, 33.333333), ), ((8.333333, 
	35.0, 33.333333), ), ((7.5, 38.333333, 33.333333), ), ((5.416667, 37.5, 
	33.333333), ), ((7.083333, 35.833333, 33.333333), ), ((6.666667, 
	33.333333, 33.333333), ), ((4.583333, 32.5, 33.333333), ), ((2.916667, 
	34.166667, 33.333333), ), ((3.333333, 36.666667, 33.333333), ), ((22.5, 
	31.666667, 33.333333), ), ((21.666667, 35.0, 33.333333), ), ((22.5, 
	38.333333, 33.333333), ), ((27.5, 31.666667, 33.333333), ), ((
	28.333333, 35.0, 33.333333), ), ((27.5, 38.333333, 33.333333), ), ((
	25.416667, 37.5, 33.333333), ), ((27.083333, 35.833333, 33.333333), ), 
	((26.666667, 33.333333, 33.333333), ), ((24.583333, 32.5, 33.333333), 
	), ((22.916667, 34.166667, 33.333333), ), ((23.333333, 36.666667, 
	33.333333), ), ((42.5, 31.666667, 33.333333), ), ((41.666667, 35.0, 
	33.333333), ), ((42.5, 38.333333, 33.333333), ), ((47.5, 31.666667, 
	33.333333), ), ((48.333333, 35.0, 33.333333), ), ((47.5, 38.333333, 
	33.333333), ), ((45.416667, 37.5, 33.333333), ), ((47.083333, 
	35.833333, 33.333333), ), ((46.666667, 33.333333, 33.333333), ), ((
	44.583333, 32.5, 33.333333), ), ((42.916667, 34.166667, 33.333333), ), 
	((43.333333, 36.666667, 33.333333), ), ((12.5, 41.666667, 33.333333), 
	), ((11.666667, 45.0, 33.333333), ), ((12.5, 48.333333, 33.333333), ), 
	((17.5, 41.666667, 33.333333), ), ((18.333333, 45.0, 33.333333), ), ((
	17.5, 48.333333, 33.333333), ), ((15.416667, 47.5, 33.333333), ), ((
	17.083333, 45.833333, 33.333333), ), ((16.666667, 43.333333, 
	33.333333), ), ((14.583333, 42.5, 33.333333), ), ((12.916667, 
	44.166667, 33.333333), ), ((13.333333, 46.666667, 33.333333), ), ((
	32.5, 41.666667, 33.333333), ), ((31.666667, 45.0, 33.333333), ), ((
	32.5, 48.333333, 33.333333), ), ((37.5, 41.666667, 33.333333), ), ((
	38.333333, 45.0, 33.333333), ), ((37.5, 48.333333, 33.333333), ), ((
	35.416667, 47.5, 33.333333), ), ((37.083333, 45.833333, 33.333333), ), 
	((36.666667, 43.333333, 33.333333), ), ((34.583333, 42.5, 33.333333), 
	), ((32.916667, 44.166667, 33.333333), ), ((33.333333, 46.666667, 
	33.333333), ), ((2.5, 51.666667, 33.333333), ), ((1.666667, 55.0, 
	33.333333), ), ((2.5, 58.333333, 33.333333), ), ((7.5, 51.666667, 
	33.333333), ), ((8.333333, 55.0, 33.333333), ), ((7.5, 58.333333, 
	33.333333), ), ((5.416667, 57.5, 33.333333), ), ((7.083333, 55.833333, 
	33.333333), ), ((6.666667, 53.333333, 33.333333), ), ((4.583333, 52.5, 
	33.333333), ), ((2.916667, 54.166667, 33.333333), ), ((3.333333, 
	56.666667, 33.333333), ), ((22.5, 51.666667, 33.333333), ), ((
	21.666667, 55.0, 33.333333), ), ((22.5, 58.333333, 33.333333), ), ((
	27.5, 51.666667, 33.333333), ), ((28.333333, 55.0, 33.333333), ), ((
	27.5, 58.333333, 33.333333), ), ((25.416667, 57.5, 33.333333), ), ((
	27.083333, 55.833333, 33.333333), ), ((26.666667, 53.333333, 
	33.333333), ), ((24.583333, 52.5, 33.333333), ), ((22.916667, 
	54.166667, 33.333333), ), ((23.333333, 56.666667, 33.333333), ), ((
	42.5, 51.666667, 33.333333), ), ((41.666667, 55.0, 33.333333), ), ((
	42.5, 58.333333, 33.333333), ), ((47.5, 51.666667, 33.333333), ), ((
	48.333333, 55.0, 33.333333), ), ((47.5, 58.333333, 33.333333), ), ((
	45.416667, 57.5, 33.333333), ), ((47.083333, 55.833333, 33.333333), ), 
	((46.666667, 53.333333, 33.333333), ), ((44.583333, 52.5, 33.333333), 
	), ((42.916667, 54.166667, 33.333333), ), ((43.333333, 56.666667, 
	33.333333), ), ((12.5, 61.666667, 33.333333), ), ((11.666667, 65.0, 
	33.333333), ), ((12.5, 68.333333, 33.333333), ), ((17.5, 61.666667, 
	33.333333), ), ((18.333333, 65.0, 33.333333), ), ((17.5, 68.333333, 
	33.333333), ), ((15.416667, 67.5, 33.333333), ), ((17.083333, 
	65.833333, 33.333333), ), ((16.666667, 63.333333, 33.333333), ), ((
	14.583333, 62.5, 33.333333), ), ((12.916667, 64.166667, 33.333333), ), 
	((13.333333, 66.666667, 33.333333), ), ((32.5, 61.666667, 33.333333), 
	), ((31.666667, 65.0, 33.333333), ), ((32.5, 68.333333, 33.333333), ), 
	((37.5, 61.666667, 33.333333), ), ((38.333333, 65.0, 33.333333), ), ((
	37.5, 68.333333, 33.333333), ), ((35.416667, 67.5, 33.333333), ), ((
	37.083333, 65.833333, 33.333333), ), ((36.666667, 63.333333, 
	33.333333), ), ((34.583333, 62.5, 33.333333), ), ((32.916667, 
	64.166667, 33.333333), ), ((33.333333, 66.666667, 33.333333), ), ((2.5, 
	71.666667, 33.333333), ), ((1.666667, 75.0, 33.333333), ), ((2.5, 
	78.333333, 33.333333), ), ((7.5, 71.666667, 33.333333), ), ((8.333333, 
	75.0, 33.333333), ), ((7.5, 78.333333, 33.333333), ), ((5.416667, 77.5, 
	33.333333), ), ((7.083333, 75.833333, 33.333333), ), ((6.666667, 
	73.333333, 33.333333), ), ((4.583333, 72.5, 33.333333), ), ((2.916667, 
	74.166667, 33.333333), ), ((3.333333, 76.666667, 33.333333), ), ((22.5, 
	71.666667, 33.333333), ), ((21.666667, 75.0, 33.333333), ), ((22.5, 
	78.333333, 33.333333), ), ((27.5, 71.666667, 33.333333), ), ((
	28.333333, 75.0, 33.333333), ), ((27.5, 78.333333, 33.333333), ), ((
	25.416667, 77.5, 33.333333), ), ((27.083333, 75.833333, 33.333333), ), 
	((26.666667, 73.333333, 33.333333), ), ((24.583333, 72.5, 33.333333), 
	), ((22.916667, 74.166667, 33.333333), ), ((23.333333, 76.666667, 
	33.333333), ), ((42.5, 71.666667, 33.333333), ), ((41.666667, 75.0, 
	33.333333), ), ((42.5, 78.333333, 33.333333), ), ((47.5, 71.666667, 
	33.333333), ), ((48.333333, 75.0, 33.333333), ), ((47.5, 78.333333, 
	33.333333), ), ((45.416667, 77.5, 33.333333), ), ((47.083333, 
	75.833333, 33.333333), ), ((46.666667, 73.333333, 33.333333), ), ((
	44.583333, 72.5, 33.333333), ), ((42.916667, 74.166667, 33.333333), ), 
	((43.333333, 76.666667, 33.333333), ), ((12.5, 81.666667, 33.333333), 
	), ((11.666667, 85.0, 33.333333), ), ((12.5, 88.333333, 33.333333), ), 
	((17.5, 81.666667, 33.333333), ), ((18.333333, 85.0, 33.333333), ), ((
	17.5, 88.333333, 33.333333), ), ((15.416667, 87.5, 33.333333), ), ((
	17.083333, 85.833333, 33.333333), ), ((16.666667, 83.333333, 
	33.333333), ), ((14.583333, 82.5, 33.333333), ))+f.findAt(((12.916667, 
	84.166667, 33.333333), ), ((13.333333, 86.666667, 33.333333), ), ((
	32.5, 81.666667, 33.333333), ), ((31.666667, 85.0, 33.333333), ), ((
	32.5, 88.333333, 33.333333), ), ((37.5, 81.666667, 33.333333), ), ((
	38.333333, 85.0, 33.333333), ), ((37.5, 88.333333, 33.333333), ), ((
	35.416667, 87.5, 33.333333), ), ((37.083333, 85.833333, 33.333333), ), 
	((36.666667, 83.333333, 33.333333), ), ((34.583333, 82.5, 33.333333), 
	), ((32.916667, 84.166667, 33.333333), ), ((33.333333, 86.666667, 
	33.333333), ), ((2.5, 91.666667, 33.333333), ), ((1.666667, 95.0, 
	33.333333), ), ((2.5, 98.333333, 33.333333), ), ((7.5, 91.666667, 
	33.333333), ), ((8.333333, 95.0, 33.333333), ), ((7.5, 98.333333, 
	33.333333), ), ((5.416667, 97.5, 33.333333), ), ((7.083333, 95.833333, 
	33.333333), ), ((6.666667, 93.333333, 33.333333), ), ((4.583333, 92.5, 
	33.333333), ), ((2.916667, 94.166667, 33.333333), ), ((3.333333, 
	96.666667, 33.333333), ), ((22.5, 91.666667, 33.333333), ), ((
	21.666667, 95.0, 33.333333), ), ((22.5, 98.333333, 33.333333), ), ((
	27.5, 91.666667, 33.333333), ), ((28.333333, 95.0, 33.333333), ), ((
	27.5, 98.333333, 33.333333), ), ((25.416667, 97.5, 33.333333), ), ((
	27.083333, 95.833333, 33.333333), ), ((26.666667, 93.333333, 
	33.333333), ), ((24.583333, 92.5, 33.333333), ), ((22.916667, 
	94.166667, 33.333333), ), ((23.333333, 96.666667, 33.333333), ), ((
	42.5, 91.666667, 33.333333), ), ((41.666667, 95.0, 33.333333), ), ((
	42.5, 98.333333, 33.333333), ), ((47.5, 91.666667, 33.333333), ), ((
	48.333333, 95.0, 33.333333), ), ((47.5, 98.333333, 33.333333), ), ((
	45.416667, 97.5, 33.333333), ), ((47.083333, 95.833333, 33.333333), ), 
	((46.666667, 93.333333, 33.333333), ), ((44.583333, 92.5, 33.333333), 
	), ((42.916667, 94.166667, 33.333333), ), ((43.333333, 96.666667, 
	33.333333), ), ((12.5, 101.666667, 33.333333), ), ((11.666667, 105.0, 
	33.333333), ), ((12.5, 108.333333, 33.333333), ), ((17.5, 101.666667, 
	33.333333), ), ((18.333333, 105.0, 33.333333), ), ((17.5, 108.333333, 
	33.333333), ), ((15.416667, 107.5, 33.333333), ), ((17.083333, 
	105.833333, 33.333333), ), ((16.666667, 103.333333, 33.333333), ), ((
	14.583333, 102.5, 33.333333), ), ((12.916667, 104.166667, 33.333333), 
	), ((13.333333, 106.666667, 33.333333), ), ((32.5, 101.666667, 
	33.333333), ), ((31.666667, 105.0, 33.333333), ), ((32.5, 108.333333, 
	33.333333), ), ((37.5, 101.666667, 33.333333), ), ((38.333333, 105.0, 
	33.333333), ), ((37.5, 108.333333, 33.333333), ), ((35.416667, 107.5, 
	33.333333), ), ((37.083333, 105.833333, 33.333333), ), ((36.666667, 
	103.333333, 33.333333), ), ((34.583333, 102.5, 33.333333), ), ((
	32.916667, 104.166667, 33.333333), ), ((33.333333, 106.666667, 
	33.333333), ), ((2.5, 111.666667, 33.333333), ), ((1.666667, 115.0, 
	33.333333), ), ((2.5, 118.333333, 33.333333), ), ((7.5, 111.666667, 
	33.333333), ), ((8.333333, 115.0, 33.333333), ), ((7.5, 118.333333, 
	33.333333), ), ((5.416667, 117.5, 33.333333), ), ((7.083333, 
	115.833333, 33.333333), ), ((6.666667, 113.333333, 33.333333), ), ((
	4.583333, 112.5, 33.333333), ), ((2.916667, 114.166667, 33.333333), ), 
	((3.333333, 116.666667, 33.333333), ), ((22.5, 111.666667, 33.333333), 
	), ((21.666667, 115.0, 33.333333), ), ((22.5, 118.333333, 33.333333), 
	), ((27.5, 111.666667, 33.333333), ), ((28.333333, 115.0, 33.333333), 
	), ((27.5, 118.333333, 33.333333), ), ((25.416667, 117.5, 33.333333), 
	), ((27.083333, 115.833333, 33.333333), ), ((26.666667, 113.333333, 
	33.333333), ), ((24.583333, 112.5, 33.333333), ), ((22.916667, 
	114.166667, 33.333333), ), ((23.333333, 116.666667, 33.333333), ), ((
	42.5, 111.666667, 33.333333), ), ((41.666667, 115.0, 33.333333), ), ((
	42.5, 118.333333, 33.333333), ), ((47.5, 111.666667, 33.333333), ), ((
	48.333333, 115.0, 33.333333), ), ((47.5, 118.333333, 33.333333), ), ((
	45.416667, 117.5, 33.333333), ), ((47.083333, 115.833333, 33.333333), 
	), ((46.666667, 113.333333, 33.333333), ), ((44.583333, 112.5, 
	33.333333), ), ((42.916667, 114.166667, 33.333333), ), ((43.333333, 
	116.666667, 33.333333), ), ((12.5, 121.666667, 33.333333), ), ((
	11.666667, 125.0, 33.333333), ), ((12.5, 128.333333, 33.333333), ), ((
	17.5, 121.666667, 33.333333), ), ((18.333333, 125.0, 33.333333), ), ((
	17.5, 128.333333, 33.333333), ), ((15.416667, 127.5, 33.333333), ), ((
	17.083333, 125.833333, 33.333333), ), ((16.666667, 123.333333, 
	33.333333), ), ((14.583333, 122.5, 33.333333), ), ((12.916667, 
	124.166667, 33.333333), ), ((13.333333, 126.666667, 33.333333), ), ((
	32.5, 121.666667, 33.333333), ), ((31.666667, 125.0, 33.333333), ), ((
	32.5, 128.333333, 33.333333), ), ((37.5, 121.666667, 33.333333), ), ((
	38.333333, 125.0, 33.333333), ), ((37.5, 128.333333, 33.333333), ), ((
	35.416667, 127.5, 33.333333), ), ((37.083333, 125.833333, 33.333333), 
	), ((36.666667, 123.333333, 33.333333), ), ((34.583333, 122.5, 
	33.333333), ), ((32.916667, 124.166667, 33.333333), ), ((33.333333, 
	126.666667, 33.333333), ), ((2.5, 131.666667, 33.333333), ), ((
	1.666667, 135.0, 33.333333), ), ((2.5, 138.333333, 33.333333), ), ((
	7.5, 131.666667, 33.333333), ), ((8.333333, 135.0, 33.333333), ), ((
	7.5, 138.333333, 33.333333), ), ((5.416667, 137.5, 33.333333), ), ((
	7.083333, 135.833333, 33.333333), ), ((6.666667, 133.333333, 
	33.333333), ), ((4.583333, 132.5, 33.333333), ), ((2.916667, 
	134.166667, 33.333333), ), ((3.333333, 136.666667, 33.333333), ), ((
	22.5, 131.666667, 33.333333), ), ((21.666667, 135.0, 33.333333), ), ((
	22.5, 138.333333, 33.333333), ), ((27.5, 131.666667, 33.333333), ), ((
	28.333333, 135.0, 33.333333), ), ((27.5, 138.333333, 33.333333), ), ((
	25.416667, 137.5, 33.333333), ), ((27.083333, 135.833333, 33.333333), 
	), ((26.666667, 133.333333, 33.333333), ), ((24.583333, 132.5, 
	33.333333), ), ((22.916667, 134.166667, 33.333333), ), ((23.333333, 
	136.666667, 33.333333), ), ((42.5, 131.666667, 33.333333), ), ((
	41.666667, 135.0, 33.333333), ), ((42.5, 138.333333, 33.333333), ), ((
	47.5, 131.666667, 33.333333), ), ((48.333333, 135.0, 33.333333), ), ((
	47.5, 138.333333, 33.333333), ), ((45.416667, 137.5, 33.333333), ), ((
	47.083333, 135.833333, 33.333333), ), ((46.666667, 133.333333, 
	33.333333), ), ((44.583333, 132.5, 33.333333), ), ((42.916667, 
	134.166667, 33.333333), ), ((43.333333, 136.666667, 33.333333), ), ((
	12.5, 141.666667, 33.333333), ), ((11.666667, 145.0, 33.333333), ), ((
	12.5, 148.333333, 33.333333), ), ((17.5, 141.666667, 33.333333), ), ((
	18.333333, 145.0, 33.333333), ), ((17.5, 148.333333, 33.333333), ), ((
	15.416667, 147.5, 33.333333), ), ((17.083333, 145.833333, 33.333333), 
	), ((16.666667, 143.333333, 33.333333), ), ((14.583333, 142.5, 
	33.333333), ), ((12.916667, 144.166667, 33.333333), ), ((13.333333, 
	146.666667, 33.333333), ), ((32.5, 141.666667, 33.333333), ), ((
	31.666667, 145.0, 33.333333), ), ((32.5, 148.333333, 33.333333), ), ((
	37.5, 141.666667, 33.333333), ), ((38.333333, 145.0, 33.333333), ), ((
	37.5, 148.333333, 33.333333), ), ((35.416667, 147.5, 33.333333), ), ((
	37.083333, 145.833333, 33.333333), ), ((36.666667, 143.333333, 
	33.333333), ), ((34.583333, 142.5, 33.333333), ), ((32.916667, 
	144.166667, 33.333333), ), ((33.333333, 146.666667, 33.333333), ), ((
	2.5, 151.666667, 33.333333), ), ((1.666667, 155.0, 33.333333), ), ((
	2.5, 158.333333, 33.333333), ), ((7.5, 151.666667, 33.333333), ), ((
	8.333333, 155.0, 33.333333), ), ((7.5, 158.333333, 33.333333), ), ((
	5.416667, 157.5, 33.333333), ), ((7.083333, 155.833333, 33.333333), ), 
	((6.666667, 153.333333, 33.333333), ), ((4.583333, 152.5, 33.333333), 
	), ((2.916667, 154.166667, 33.333333), ), ((3.333333, 156.666667, 
	33.333333), ), ((22.5, 151.666667, 33.333333), ), ((21.666667, 155.0, 
	33.333333), ), ((22.5, 158.333333, 33.333333), ), ((27.5, 151.666667, 
	33.333333), ), ((28.333333, 155.0, 33.333333), ), ((27.5, 158.333333, 
	33.333333), ), ((25.416667, 157.5, 33.333333), ), ((27.083333, 
	155.833333, 33.333333), ), ((26.666667, 153.333333, 33.333333), ), ((
	24.583333, 152.5, 33.333333), ), ((22.916667, 154.166667, 33.333333), 
	), ((23.333333, 156.666667, 33.333333), ), ((42.5, 151.666667, 
	33.333333), ), ((41.666667, 155.0, 33.333333), ), ((42.5, 158.333333, 
	33.333333), ), ((47.5, 151.666667, 33.333333), ), ((48.333333, 155.0, 
	33.333333), ), ((47.5, 158.333333, 33.333333), ), ((45.416667, 157.5, 
	33.333333), ), ((47.083333, 155.833333, 33.333333), ), ((46.666667, 
	153.333333, 33.333333), ), ((44.583333, 152.5, 33.333333), ), ((
	42.916667, 154.166667, 33.333333), ), ((43.333333, 156.666667, 
	33.333333), ), ((12.5, 161.666667, 33.333333), ), ((11.666667, 165.0, 
	33.333333), ), ((12.5, 168.333333, 33.333333), ), ((17.5, 161.666667, 
	33.333333), ), ((18.333333, 165.0, 33.333333), ), ((17.5, 168.333333, 
	33.333333), ), ((15.416667, 167.5, 33.333333), ), ((17.083333, 
	165.833333, 33.333333), ), ((16.666667, 163.333333, 33.333333), ), ((
	14.583333, 162.5, 33.333333), ), ((12.916667, 164.166667, 33.333333), 
	), ((13.333333, 166.666667, 33.333333), ), ((32.5, 161.666667, 
	33.333333), ), ((31.666667, 165.0, 33.333333), ), ((32.5, 168.333333, 
	33.333333), ), ((37.5, 161.666667, 33.333333), ), ((38.333333, 165.0, 
	33.333333), ), ((37.5, 168.333333, 33.333333), ), ((35.416667, 167.5, 
	33.333333), ), ((37.083333, 165.833333, 33.333333), ), ((36.666667, 
	163.333333, 33.333333), ), ((34.583333, 162.5, 33.333333), ), ((
	32.916667, 164.166667, 33.333333), ), ((33.333333, 166.666667, 
	33.333333), ), ((2.5, 171.666667, 33.333333), ))+f.findAt(((1.666667, 
	175.0, 33.333333), ), ((2.5, 178.333333, 33.333333), ), ((7.5, 
	171.666667, 33.333333), ), ((8.333333, 175.0, 33.333333), ), ((7.5, 
	178.333333, 33.333333), ), ((5.416667, 177.5, 33.333333), ), ((
	7.083333, 175.833333, 33.333333), ), ((6.666667, 173.333333, 
	33.333333), ), ((4.583333, 172.5, 33.333333), ), ((2.916667, 
	174.166667, 33.333333), ), ((3.333333, 176.666667, 33.333333), ), ((
	22.5, 171.666667, 33.333333), ), ((22.5, 178.333333, 33.333333), ), ((
	27.5, 171.666667, 33.333333), ), ((28.333333, 175.0, 33.333333), ), ((
	27.5, 178.333333, 33.333333), ), ((25.416667, 177.5, 33.333333), ), ((
	27.083333, 175.833333, 33.333333), ), ((26.666667, 173.333333, 
	33.333333), ), ((24.583333, 172.5, 33.333333), ), ((22.916667, 
	174.166667, 33.333333), ), ((23.333333, 176.666667, 33.333333), ), ((
	42.5, 171.666667, 33.333333), ), ((41.666667, 175.0, 33.333333), ), ((
	42.5, 178.333333, 33.333333), ), ((47.5, 171.666667, 33.333333), ), ((
	48.333333, 175.0, 33.333333), ), ((47.5, 178.333333, 33.333333), ), ((
	45.416667, 177.5, 33.333333), ), ((47.083333, 175.833333, 33.333333), 
	), ((46.666667, 173.333333, 33.333333), ), ((44.583333, 172.5, 
	33.333333), ), ((42.916667, 174.166667, 33.333333), ), ((43.333333, 
	176.666667, 33.333333), ), ((12.5, 181.666667, 33.333333), ), ((
	11.666667, 185.0, 33.333333), ), ((12.5, 188.333333, 33.333333), ), ((
	17.5, 181.666667, 33.333333), ), ((18.333333, 185.0, 33.333333), ), ((
	17.5, 188.333333, 33.333333), ), ((15.416667, 187.5, 33.333333), ), ((
	17.083333, 185.833333, 33.333333), ), ((16.666667, 183.333333, 
	33.333333), ), ((14.583333, 182.5, 33.333333), ), ((12.916667, 
	184.166667, 33.333333), ), ((13.333333, 186.666667, 33.333333), ), ((
	32.5, 181.666667, 33.333333), ), ((31.666667, 185.0, 33.333333), ), ((
	32.5, 188.333333, 33.333333), ), ((37.5, 181.666667, 33.333333), ), ((
	38.333333, 185.0, 33.333333), ), ((37.5, 188.333333, 33.333333), ), ((
	35.416667, 187.5, 33.333333), ), ((37.083333, 185.833333, 33.333333), 
	), ((36.666667, 183.333333, 33.333333), ), ((34.583333, 182.5, 
	33.333333), ), ((32.916667, 184.166667, 33.333333), ), ((33.333333, 
	186.666667, 33.333333), ), ((2.5, 191.666667, 33.333333), ), ((
	1.666667, 195.0, 33.333333), ), ((2.5, 198.333333, 33.333333), ), ((
	7.5, 191.666667, 33.333333), ), ((8.333333, 195.0, 33.333333), ), ((
	7.5, 198.333333, 33.333333), ), ((5.416667, 197.5, 33.333333), ), ((
	7.083333, 195.833333, 33.333333), ), ((6.666667, 193.333333, 
	33.333333), ), ((4.583333, 192.5, 33.333333), ), ((2.916667, 
	194.166667, 33.333333), ), ((3.333333, 196.666667, 33.333333), ), ((
	22.5, 191.666667, 33.333333), ), ((22.5, 198.333333, 33.333333), ), ((
	27.5, 191.666667, 33.333333), ), ((28.333333, 195.0, 33.333333), ), ((
	27.5, 198.333333, 33.333333), ), ((25.416667, 197.5, 33.333333), ), ((
	27.083333, 195.833333, 33.333333), ), ((26.666667, 193.333333, 
	33.333333), ), ((24.583333, 192.5, 33.333333), ), ((22.916667, 
	194.166667, 33.333333), ), ((23.333333, 196.666667, 33.333333), ), ((
	42.5, 191.666667, 33.333333), ), ((41.666667, 195.0, 33.333333), ), ((
	42.5, 198.333333, 33.333333), ), ((47.5, 191.666667, 33.333333), ), ((
	48.333333, 195.0, 33.333333), ), ((47.5, 198.333333, 33.333333), ), ((
	45.416667, 197.5, 33.333333), ), ((47.083333, 195.833333, 33.333333), 
	), ((46.666667, 193.333333, 33.333333), ), ((44.583333, 192.5, 
	33.333333), ), ((42.916667, 194.166667, 33.333333), ), ((43.333333, 
	196.666667, 33.333333), ))+f.findAt(((10.0, 1.25, 50.0), ), ((10.0, 6.25, 50.0), ), ((30.0, 1.25, 
	50.0), ), ((30.0, 6.25, 50.0), ), ((50.0, 8.75, 50.0), ), ((50.0, 3.75, 
	50.0), ), ((10.0, 11.25, 50.0), ), ((10.0, 16.25, 50.0), ), ((30.0, 
	11.25, 50.0), ), ((30.0, 16.25, 50.0), ), ((50.0, 18.75, 50.0), ), ((
	50.0, 13.75, 50.0), ), ((10.0, 21.25, 50.0), ), ((10.0, 26.25, 50.0), 
	), ((30.0, 21.25, 50.0), ), ((30.0, 26.25, 50.0), ), ((50.0, 28.75, 
	50.0), ), ((50.0, 23.75, 50.0), ), ((7.5, 30.0, 50.0), ), ((17.5, 30.0, 
	50.0), ), ((10.0, 31.25, 50.0), ), ((10.0, 36.25, 50.0), ), ((27.5, 
	30.0, 50.0), ), ((37.5, 30.0, 50.0), ), ((30.0, 31.25, 50.0), ), ((
	30.0, 36.25, 50.0), ), ((47.5, 30.0, 50.0), ), ((50.0, 38.75, 50.0), ), 
	((50.0, 33.75, 50.0), ), ((10.0, 41.25, 50.0), ), ((10.0, 46.25, 50.0), 
	), ((30.0, 41.25, 50.0), ), ((30.0, 46.25, 50.0), ), ((50.0, 48.75, 
	50.0), ), ((50.0, 43.75, 50.0), ), ((7.5, 50.0, 50.0), ), ((17.5, 50.0, 
	50.0), ), ((10.0, 51.25, 50.0), ), ((10.0, 56.25, 50.0), ), ((27.5, 
	50.0, 50.0), ), ((37.5, 50.0, 50.0), ), ((30.0, 51.25, 50.0), ), ((
	30.0, 56.25, 50.0), ), ((47.5, 50.0, 50.0), ), ((50.0, 58.75, 50.0), ), 
	((50.0, 53.75, 50.0), ), ((10.0, 61.25, 50.0), ), ((10.0, 66.25, 50.0), 
	), ((30.0, 61.25, 50.0), ), ((30.0, 66.25, 50.0), ), ((50.0, 68.75, 
	50.0), ), ((50.0, 63.75, 50.0), ), ((7.5, 70.0, 50.0), ), ((17.5, 70.0, 
	50.0), ), ((10.0, 71.25, 50.0), ), ((10.0, 76.25, 50.0), ), ((27.5, 
	70.0, 50.0), ), ((37.5, 70.0, 50.0), ), ((30.0, 71.25, 50.0), ), ((
	30.0, 76.25, 50.0), ), ((47.5, 70.0, 50.0), ), ((50.0, 78.75, 50.0), ), 
	((50.0, 73.75, 50.0), ), ((10.0, 81.25, 50.0), ), ((10.0, 86.25, 50.0), 
	), ((30.0, 81.25, 50.0), ), ((30.0, 86.25, 50.0), ), ((50.0, 88.75, 
	50.0), ), ((50.0, 83.75, 50.0), ), ((7.5, 90.0, 50.0), ), ((17.5, 90.0, 
	50.0), ), ((10.0, 91.25, 50.0), ), ((10.0, 96.25, 50.0), ), ((27.5, 
	90.0, 50.0), ), ((37.5, 90.0, 50.0), ), ((30.0, 91.25, 50.0), ), ((
	30.0, 96.25, 50.0), ), ((47.5, 90.0, 50.0), ), ((50.0, 98.75, 50.0), ), 
	((50.0, 93.75, 50.0), ), ((10.0, 101.25, 50.0), ), ((10.0, 106.25, 
	50.0), ), ((30.0, 101.25, 50.0), ), ((30.0, 106.25, 50.0), ), ((50.0, 
	108.75, 50.0), ), ((50.0, 103.75, 50.0), ), ((7.5, 110.0, 50.0), ), ((
	17.5, 110.0, 50.0), ), ((10.0, 111.25, 50.0), ), ((10.0, 116.25, 50.0), 
	), ((27.5, 110.0, 50.0), ), ((37.5, 110.0, 50.0), ), ((30.0, 111.25, 
	50.0), ), ((30.0, 116.25, 50.0), ), ((47.5, 110.0, 50.0), ), ((50.0, 
	118.75, 50.0), ), ((50.0, 113.75, 50.0), ), ((10.0, 121.25, 50.0), ), (
	(10.0, 126.25, 50.0), ), ((30.0, 121.25, 50.0), ), ((30.0, 126.25, 
	50.0), ), ((50.0, 128.75, 50.0), ), ((50.0, 123.75, 50.0), ), ((7.5, 
	130.0, 50.0), ), ((17.5, 130.0, 50.0), ), ((10.0, 131.25, 50.0), ), ((
	10.0, 136.25, 50.0), ), ((27.5, 130.0, 50.0), ), ((37.5, 130.0, 50.0), 
	), ((30.0, 131.25, 50.0), ), ((30.0, 136.25, 50.0), ), ((47.5, 130.0, 
	50.0), ), ((50.0, 138.75, 50.0), ), ((50.0, 133.75, 50.0), ), ((10.0, 
	141.25, 50.0), ), ((10.0, 146.25, 50.0), ), ((30.0, 141.25, 50.0), ), (
	(30.0, 146.25, 50.0), ), ((50.0, 148.75, 50.0), ), ((50.0, 143.75, 
	50.0), ), ((7.5, 150.0, 50.0), ), ((17.5, 150.0, 50.0), ), ((10.0, 
	151.25, 50.0), ), ((10.0, 156.25, 50.0), ), ((27.5, 150.0, 50.0), ), ((
	37.5, 150.0, 50.0), ), ((30.0, 151.25, 50.0), ), ((30.0, 156.25, 50.0), 
	), ((47.5, 150.0, 50.0), ), ((50.0, 158.75, 50.0), ), ((50.0, 153.75, 
	50.0), ), ((10.0, 161.25, 50.0), ), ((10.0, 166.25, 50.0), ), ((30.0, 
	161.25, 50.0), ), ((30.0, 166.25, 50.0), ), ((50.0, 168.75, 50.0), ), (
	(50.0, 163.75, 50.0), ), ((7.5, 170.0, 50.0), ), ((17.5, 170.0, 50.0), 
	), ((10.0, 171.25, 50.0), ), ((10.0, 176.25, 50.0), ), ((27.5, 170.0, 
	50.0), ), ((21.875, 175.0, 50.0), ), ((37.5, 170.0, 50.0), ), ((30.0, 
	171.25, 50.0), ), ((30.0, 176.25, 50.0), ), ((47.5, 170.0, 50.0), ), ((
	50.0, 178.75, 50.0), ), ((50.0, 173.75, 50.0), ), ((10.0, 181.25, 
	50.0), ), ((10.0, 186.25, 50.0), ), ((30.0, 181.25, 50.0), ), ((30.0, 
	186.25, 50.0), ), ((50.0, 188.75, 50.0), ), ((50.0, 183.75, 50.0), ), (
	(7.5, 190.0, 50.0), ), ((17.5, 190.0, 50.0), ), ((10.0, 191.25, 50.0), 
	), ((10.0, 196.25, 50.0), ), ((27.5, 190.0, 50.0), ), ((21.875, 195.0, 
	50.0), ), ((37.5, 190.0, 50.0), ), ((30.0, 191.25, 50.0), ), ((30.0, 
	196.25, 50.0), ), ((47.5, 190.0, 50.0), ), ((50.0, 198.75, 50.0), ), ((
	50.0, 193.75, 50.0), ))
	p.Set(faces=faces, name='off')

#call gt50() for 50mm, gt100() for 100mm, gt150() for 150mm and gt200() for 200mm
def gt50():
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 3.333333, 16.666667), ), ((0.0, 6.666667, 33.333333), 
	), ((2.5, 1.666667, 33.333333), ), ((1.666667, 5.0, 33.333333), ), ((
	2.5, 8.333333, 33.333333), ), ((7.5, 1.666667, 33.333333), ), ((
	8.333333, 5.0, 33.333333), ), ((7.5, 8.333333, 33.333333), ), ((
	5.416667, 7.5, 33.333333), ), ((7.083333, 5.833333, 33.333333), ), ((
	6.666667, 3.333333, 33.333333), ), ((4.583333, 2.5, 33.333333), ), ((
	2.916667, 4.166667, 33.333333), ), ((3.333333, 6.666667, 33.333333), ), 
	((10.0, 3.333333, 16.666667), ), ((10.0, 6.666667, 33.333333), ), ((
	12.5, 1.666667, 33.333333), ), ((11.666667, 5.0, 33.333333), ), ((12.5, 
	8.333333, 33.333333), ), ((17.5, 1.666667, 33.333333), ), ((18.333333, 
	5.0, 33.333333), ), ((17.5, 8.333333, 33.333333), ), ((15.416667, 7.5, 
	33.333333), ), ((17.083333, 5.833333, 33.333333), ), ((16.666667, 
	3.333333, 33.333333), ), ((14.583333, 2.5, 33.333333), ), ((12.916667, 
	4.166667, 33.333333), ), ((13.333333, 6.666667, 33.333333), ), ((20.0, 
	3.333333, 16.666667), ), ((20.0, 6.666667, 33.333333), ), ((22.5, 
	1.666667, 33.333333), ), ((21.666667, 5.0, 33.333333), ), ((22.5, 
	8.333333, 33.333333), ), ((27.5, 1.666667, 33.333333), ), ((28.333333, 
	5.0, 33.333333), ), ((27.5, 8.333333, 33.333333), ), ((25.416667, 7.5, 
	33.333333), ), ((27.083333, 5.833333, 33.333333), ), ((26.666667, 
	3.333333, 33.333333), ), ((24.583333, 2.5, 33.333333), ), ((22.916667, 
	4.166667, 33.333333), ), ((23.333333, 6.666667, 33.333333), ), ((30.0, 
	3.333333, 16.666667), ), ((30.0, 6.666667, 33.333333), ), ((32.5, 
	1.666667, 33.333333), ), ((31.666667, 5.0, 33.333333), ), ((32.5, 
	8.333333, 33.333333), ), ((37.5, 1.666667, 33.333333), ), ((38.333333, 
	5.0, 33.333333), ), ((37.5, 8.333333, 33.333333), ), ((35.416667, 7.5, 
	33.333333), ), ((37.083333, 5.833333, 33.333333), ), ((36.666667, 
	3.333333, 33.333333), ), ((34.583333, 2.5, 33.333333), ), ((32.916667, 
	4.166667, 33.333333), ), ((33.333333, 6.666667, 33.333333), ), ((50.0, 
	6.666667, 16.666667), ), ((50.0, 3.333333, 33.333333), ), ((40.0, 
	3.333333, 16.666667), ), ((40.0, 6.666667, 33.333333), ), ((42.5, 
	1.666667, 33.333333), ), ((41.666667, 5.0, 33.333333), ), ((42.5, 
	8.333333, 33.333333), ), ((47.5, 1.666667, 33.333333), ), ((48.333333, 
	5.0, 33.333333), ), ((47.5, 8.333333, 33.333333), ), ((45.416667, 7.5, 
	33.333333), ), ((47.083333, 5.833333, 33.333333), ), ((46.666667, 
	3.333333, 33.333333), ), ((44.583333, 2.5, 33.333333), ), ((42.916667, 
	4.166667, 33.333333), ), ((43.333333, 6.666667, 33.333333), ), ((
	6.666667, 10.0, 33.333333), ), ((16.666667, 10.0, 33.333333), ), ((
	26.666667, 10.0, 33.333333), ), ((36.666667, 10.0, 33.333333), ), ((
	46.666667, 10.0, 33.333333), ))
	p.Set(faces=faces, name='g1')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((6.666667, 0.0, 33.333333), ), ((16.666667, 0.0, 33.333333), 
	), ((26.666667, 0.0, 33.333333), ), ((36.666667, 0.0, 33.333333), ), ((
	46.666667, 0.0, 33.333333), ))
	p.Set(faces=faces, name='g')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 13.333333, 16.666667), ), ((0.0, 16.666667, 33.333333), 
	), ((2.5, 11.666667, 33.333333), ), ((1.666667, 15.0, 33.333333), ), ((
	2.5, 18.333333, 33.333333), ), ((7.5, 11.666667, 33.333333), ), ((
	8.333333, 15.0, 33.333333), ), ((7.5, 18.333333, 33.333333), ), ((
	5.416667, 17.5, 33.333333), ), ((7.083333, 15.833333, 33.333333), ), ((
	6.666667, 13.333333, 33.333333), ), ((4.583333, 12.5, 33.333333), ), ((
	2.916667, 14.166667, 33.333333), ), ((3.333333, 16.666667, 33.333333), 
	), ((10.0, 13.333333, 16.666667), ), ((10.0, 16.666667, 33.333333), ), 
	((12.5, 11.666667, 33.333333), ), ((11.666667, 15.0, 33.333333), ), ((
	12.5, 18.333333, 33.333333), ), ((17.5, 11.666667, 33.333333), ), ((
	18.333333, 15.0, 33.333333), ), ((17.5, 18.333333, 33.333333), ), ((
	15.416667, 17.5, 33.333333), ), ((17.083333, 15.833333, 33.333333), ), 
	((16.666667, 13.333333, 33.333333), ), ((14.583333, 12.5, 33.333333), 
	), ((12.916667, 14.166667, 33.333333), ), ((13.333333, 16.666667, 
	33.333333), ), ((20.0, 13.333333, 16.666667), ), ((20.0, 16.666667, 
	33.333333), ), ((22.5, 11.666667, 33.333333), ), ((21.666667, 15.0, 
	33.333333), ), ((22.5, 18.333333, 33.333333), ), ((27.5, 11.666667, 
	33.333333), ), ((28.333333, 15.0, 33.333333), ), ((27.5, 18.333333, 
	33.333333), ), ((25.416667, 17.5, 33.333333), ), ((27.083333, 
	15.833333, 33.333333), ), ((26.666667, 13.333333, 33.333333), ), ((
	24.583333, 12.5, 33.333333), ), ((22.916667, 14.166667, 33.333333), ), 
	((23.333333, 16.666667, 33.333333), ), ((30.0, 13.333333, 16.666667), 
	), ((30.0, 16.666667, 33.333333), ), ((32.5, 11.666667, 33.333333), ), 
	((31.666667, 15.0, 33.333333), ), ((32.5, 18.333333, 33.333333), ), ((
	37.5, 11.666667, 33.333333), ), ((38.333333, 15.0, 33.333333), ), ((
	37.5, 18.333333, 33.333333), ), ((35.416667, 17.5, 33.333333), ), ((
	37.083333, 15.833333, 33.333333), ), ((36.666667, 13.333333, 
	33.333333), ), ((34.583333, 12.5, 33.333333), ), ((32.916667, 
	14.166667, 33.333333), ), ((33.333333, 16.666667, 33.333333), ), ((
	50.0, 16.666667, 16.666667), ), ((50.0, 13.333333, 33.333333), ), ((
	40.0, 13.333333, 16.666667), ), ((40.0, 16.666667, 33.333333), ), ((
	42.5, 11.666667, 33.333333), ), ((41.666667, 15.0, 33.333333), ), ((
	42.5, 18.333333, 33.333333), ), ((47.5, 11.666667, 33.333333), ), ((
	48.333333, 15.0, 33.333333), ), ((47.5, 18.333333, 33.333333), ), ((
	45.416667, 17.5, 33.333333), ), ((47.083333, 15.833333, 33.333333), ), 
	((46.666667, 13.333333, 33.333333), ), ((44.583333, 12.5, 33.333333), 
	), ((42.916667, 14.166667, 33.333333), ), ((43.333333, 16.666667, 
	33.333333), ), ((6.666667, 20.0, 33.333333), ), ((16.666667, 20.0, 
	33.333333), ), ((26.666667, 20.0, 33.333333), ), ((36.666667, 20.0, 
	33.333333), ), ((46.666667, 20.0, 33.333333), ))
	p.Set(faces=faces, name='g2')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 23.333333, 16.666667), ), ((0.0, 26.666667, 33.333333), 
	), ((2.5, 21.666667, 33.333333), ), ((1.666667, 25.0, 33.333333), ), ((
	2.5, 28.333333, 33.333333), ), ((7.5, 21.666667, 33.333333), ), ((
	8.333333, 25.0, 33.333333), ), ((7.5, 28.333333, 33.333333), ), ((
	5.416667, 27.5, 33.333333), ), ((7.083333, 25.833333, 33.333333), ), ((
	6.666667, 23.333333, 33.333333), ), ((4.583333, 22.5, 33.333333), ), ((
	2.916667, 24.166667, 33.333333), ), ((3.333333, 26.666667, 33.333333), 
	), ((10.0, 23.333333, 16.666667), ), ((10.0, 26.666667, 33.333333), ), 
	((12.5, 21.666667, 33.333333), ), ((11.666667, 25.0, 33.333333), ), ((
	12.5, 28.333333, 33.333333), ), ((17.5, 21.666667, 33.333333), ), ((
	18.333333, 25.0, 33.333333), ), ((17.5, 28.333333, 33.333333), ), ((
	15.416667, 27.5, 33.333333), ), ((17.083333, 25.833333, 33.333333), ), 
	((16.666667, 23.333333, 33.333333), ), ((14.583333, 22.5, 33.333333), 
	), ((12.916667, 24.166667, 33.333333), ), ((13.333333, 26.666667, 
	33.333333), ), ((20.0, 23.333333, 16.666667), ), ((20.0, 26.666667, 
	33.333333), ), ((22.5, 21.666667, 33.333333), ), ((21.666667, 25.0, 
	33.333333), ), ((22.5, 28.333333, 33.333333), ), ((27.5, 21.666667, 
	33.333333), ), ((28.333333, 25.0, 33.333333), ), ((27.5, 28.333333, 
	33.333333), ), ((25.416667, 27.5, 33.333333), ), ((27.083333, 
	25.833333, 33.333333), ), ((26.666667, 23.333333, 33.333333), ), ((
	24.583333, 22.5, 33.333333), ), ((22.916667, 24.166667, 33.333333), ), 
	((23.333333, 26.666667, 33.333333), ), ((30.0, 23.333333, 16.666667), 
	), ((30.0, 26.666667, 33.333333), ), ((32.5, 21.666667, 33.333333), ), 
	((31.666667, 25.0, 33.333333), ), ((32.5, 28.333333, 33.333333), ), ((
	37.5, 21.666667, 33.333333), ), ((38.333333, 25.0, 33.333333), ), ((
	37.5, 28.333333, 33.333333), ), ((35.416667, 27.5, 33.333333), ), ((
	37.083333, 25.833333, 33.333333), ), ((36.666667, 23.333333, 
	33.333333), ), ((34.583333, 22.5, 33.333333), ), ((32.916667, 
	24.166667, 33.333333), ), ((33.333333, 26.666667, 33.333333), ), ((
	50.0, 26.666667, 16.666667), ), ((50.0, 23.333333, 33.333333), ), ((
	40.0, 23.333333, 16.666667), ), ((40.0, 26.666667, 33.333333), ), ((
	42.5, 21.666667, 33.333333), ), ((41.666667, 25.0, 33.333333), ), ((
	42.5, 28.333333, 33.333333), ), ((47.5, 21.666667, 33.333333), ), ((
	48.333333, 25.0, 33.333333), ), ((47.5, 28.333333, 33.333333), ), ((
	45.416667, 27.5, 33.333333), ), ((47.083333, 25.833333, 33.333333), ), 
	((46.666667, 23.333333, 33.333333), ), ((44.583333, 22.5, 33.333333), 
	), ((42.916667, 24.166667, 33.333333), ), ((43.333333, 26.666667, 
	33.333333), ), ((6.666667, 30.0, 33.333333), ), ((16.666667, 30.0, 
	33.333333), ), ((26.666667, 30.0, 33.333333), ), ((36.666667, 30.0, 
	33.333333), ), ((46.666667, 30.0, 33.333333), ))
	p.Set(faces=faces, name='g3')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 33.333333, 16.666667), ), ((0.0, 36.666667, 33.333333), 
	), ((2.5, 31.666667, 33.333333), ), ((1.666667, 35.0, 33.333333), ), ((
	2.5, 38.333333, 33.333333), ), ((7.5, 31.666667, 33.333333), ), ((
	8.333333, 35.0, 33.333333), ), ((7.5, 38.333333, 33.333333), ), ((
	5.416667, 37.5, 33.333333), ), ((7.083333, 35.833333, 33.333333), ), ((
	6.666667, 33.333333, 33.333333), ), ((4.583333, 32.5, 33.333333), ), ((
	2.916667, 34.166667, 33.333333), ), ((3.333333, 36.666667, 33.333333), 
	), ((10.0, 33.333333, 16.666667), ), ((10.0, 36.666667, 33.333333), ), 
	((12.5, 31.666667, 33.333333), ), ((11.666667, 35.0, 33.333333), ), ((
	12.5, 38.333333, 33.333333), ), ((17.5, 31.666667, 33.333333), ), ((
	18.333333, 35.0, 33.333333), ), ((17.5, 38.333333, 33.333333), ), ((
	15.416667, 37.5, 33.333333), ), ((17.083333, 35.833333, 33.333333), ), 
	((16.666667, 33.333333, 33.333333), ), ((14.583333, 32.5, 33.333333), 
	), ((12.916667, 34.166667, 33.333333), ), ((13.333333, 36.666667, 
	33.333333), ), ((20.0, 33.333333, 16.666667), ), ((20.0, 36.666667, 
	33.333333), ), ((22.5, 31.666667, 33.333333), ), ((21.666667, 35.0, 
	33.333333), ), ((22.5, 38.333333, 33.333333), ), ((27.5, 31.666667, 
	33.333333), ), ((28.333333, 35.0, 33.333333), ), ((27.5, 38.333333, 
	33.333333), ), ((25.416667, 37.5, 33.333333), ), ((27.083333, 
	35.833333, 33.333333), ), ((26.666667, 33.333333, 33.333333), ), ((
	24.583333, 32.5, 33.333333), ), ((22.916667, 34.166667, 33.333333), ), 
	((23.333333, 36.666667, 33.333333), ), ((30.0, 33.333333, 16.666667), 
	), ((30.0, 36.666667, 33.333333), ), ((32.5, 31.666667, 33.333333), ), 
	((31.666667, 35.0, 33.333333), ), ((32.5, 38.333333, 33.333333), ), ((
	37.5, 31.666667, 33.333333), ), ((38.333333, 35.0, 33.333333), ), ((
	37.5, 38.333333, 33.333333), ), ((35.416667, 37.5, 33.333333), ), ((
	37.083333, 35.833333, 33.333333), ), ((36.666667, 33.333333, 
	33.333333), ), ((34.583333, 32.5, 33.333333), ), ((32.916667, 
	34.166667, 33.333333), ), ((33.333333, 36.666667, 33.333333), ), ((
	50.0, 36.666667, 16.666667), ), ((50.0, 33.333333, 33.333333), ), ((
	40.0, 33.333333, 16.666667), ), ((40.0, 36.666667, 33.333333), ), ((
	42.5, 31.666667, 33.333333), ), ((41.666667, 35.0, 33.333333), ), ((
	42.5, 38.333333, 33.333333), ), ((47.5, 31.666667, 33.333333), ), ((
	48.333333, 35.0, 33.333333), ), ((47.5, 38.333333, 33.333333), ), ((
	45.416667, 37.5, 33.333333), ), ((47.083333, 35.833333, 33.333333), ), 
	((46.666667, 33.333333, 33.333333), ), ((44.583333, 32.5, 33.333333), 
	), ((42.916667, 34.166667, 33.333333), ), ((43.333333, 36.666667, 
	33.333333), ), ((6.666667, 40.0, 33.333333), ), ((16.666667, 40.0, 
	33.333333), ), ((26.666667, 40.0, 33.333333), ), ((36.666667, 40.0, 
	33.333333), ), ((46.666667, 40.0, 33.333333), ))
	p.Set(faces=faces, name='g4')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 43.333333, 16.666667), ), ((0.0, 46.666667, 33.333333), 
	), ((2.5, 41.666667, 33.333333), ), ((1.666667, 45.0, 33.333333), ), ((
	2.5, 48.333333, 33.333333), ), ((7.5, 41.666667, 33.333333), ), ((
	8.333333, 45.0, 33.333333), ), ((7.5, 48.333333, 33.333333), ), ((
	5.416667, 47.5, 33.333333), ), ((7.083333, 45.833333, 33.333333), ), ((
	6.666667, 43.333333, 33.333333), ), ((4.583333, 42.5, 33.333333), ), ((
	2.916667, 44.166667, 33.333333), ), ((3.333333, 46.666667, 33.333333), 
	), ((10.0, 43.333333, 16.666667), ), ((10.0, 46.666667, 33.333333), ), 
	((12.5, 41.666667, 33.333333), ), ((11.666667, 45.0, 33.333333), ), ((
	12.5, 48.333333, 33.333333), ), ((17.5, 41.666667, 33.333333), ), ((
	18.333333, 45.0, 33.333333), ), ((17.5, 48.333333, 33.333333), ), ((
	15.416667, 47.5, 33.333333), ), ((17.083333, 45.833333, 33.333333), ), 
	((16.666667, 43.333333, 33.333333), ), ((14.583333, 42.5, 33.333333), 
	), ((12.916667, 44.166667, 33.333333), ), ((13.333333, 46.666667, 
	33.333333), ), ((20.0, 43.333333, 16.666667), ), ((20.0, 46.666667, 
	33.333333), ), ((22.5, 41.666667, 33.333333), ), ((21.666667, 45.0, 
	33.333333), ), ((22.5, 48.333333, 33.333333), ), ((27.5, 41.666667, 
	33.333333), ), ((28.333333, 45.0, 33.333333), ), ((27.5, 48.333333, 
	33.333333), ), ((25.416667, 47.5, 33.333333), ), ((27.083333, 
	45.833333, 33.333333), ), ((26.666667, 43.333333, 33.333333), ), ((
	24.583333, 42.5, 33.333333), ), ((22.916667, 44.166667, 33.333333), ), 
	((23.333333, 46.666667, 33.333333), ), ((30.0, 43.333333, 16.666667), 
	), ((30.0, 46.666667, 33.333333), ), ((32.5, 41.666667, 33.333333), ), 
	((31.666667, 45.0, 33.333333), ), ((32.5, 48.333333, 33.333333), ), ((
	37.5, 41.666667, 33.333333), ), ((38.333333, 45.0, 33.333333), ), ((
	37.5, 48.333333, 33.333333), ), ((35.416667, 47.5, 33.333333), ), ((
	37.083333, 45.833333, 33.333333), ), ((36.666667, 43.333333, 
	33.333333), ), ((34.583333, 42.5, 33.333333), ), ((32.916667, 
	44.166667, 33.333333), ), ((33.333333, 46.666667, 33.333333), ), ((
	50.0, 46.666667, 16.666667), ), ((50.0, 43.333333, 33.333333), ), ((
	40.0, 43.333333, 16.666667), ), ((40.0, 46.666667, 33.333333), ), ((
	42.5, 41.666667, 33.333333), ), ((41.666667, 45.0, 33.333333), ), ((
	42.5, 48.333333, 33.333333), ), ((47.5, 41.666667, 33.333333), ), ((
	48.333333, 45.0, 33.333333), ), ((47.5, 48.333333, 33.333333), ), ((
	45.416667, 47.5, 33.333333), ), ((47.083333, 45.833333, 33.333333), ), 
	((46.666667, 43.333333, 33.333333), ), ((44.583333, 42.5, 33.333333), 
	), ((42.916667, 44.166667, 33.333333), ), ((43.333333, 46.666667, 
	33.333333), ), ((6.666667, 50.0, 33.333333), ), ((16.666667, 50.0, 
	33.333333), ), ((26.666667, 50.0, 33.333333), ), ((36.666667, 50.0, 
	33.333333), ), ((46.666667, 50.0, 33.333333), ))
	p.Set(faces=faces, name='g5')

def gt100():
	gt50()
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 53.333333, 16.666667), ), ((0.0, 56.666667, 33.333333), 
	), ((2.5, 51.666667, 33.333333), ), ((1.666667, 55.0, 33.333333), ), ((
	2.5, 58.333333, 33.333333), ), ((7.5, 51.666667, 33.333333), ), ((
	8.333333, 55.0, 33.333333), ), ((7.5, 58.333333, 33.333333), ), ((
	5.416667, 57.5, 33.333333), ), ((7.083333, 55.833333, 33.333333), ), ((
	6.666667, 53.333333, 33.333333), ), ((4.583333, 52.5, 33.333333), ), ((
	2.916667, 54.166667, 33.333333), ), ((3.333333, 56.666667, 33.333333), 
	), ((10.0, 53.333333, 16.666667), ), ((10.0, 56.666667, 33.333333), ), 
	((12.5, 51.666667, 33.333333), ), ((11.666667, 55.0, 33.333333), ), ((
	12.5, 58.333333, 33.333333), ), ((17.5, 51.666667, 33.333333), ), ((
	18.333333, 55.0, 33.333333), ), ((17.5, 58.333333, 33.333333), ), ((
	15.416667, 57.5, 33.333333), ), ((17.083333, 55.833333, 33.333333), ), 
	((16.666667, 53.333333, 33.333333), ), ((14.583333, 52.5, 33.333333), 
	), ((12.916667, 54.166667, 33.333333), ), ((13.333333, 56.666667, 
	33.333333), ), ((20.0, 53.333333, 16.666667), ), ((20.0, 56.666667, 
	33.333333), ), ((22.5, 51.666667, 33.333333), ), ((21.666667, 55.0, 
	33.333333), ), ((22.5, 58.333333, 33.333333), ), ((27.5, 51.666667, 
	33.333333), ), ((28.333333, 55.0, 33.333333), ), ((27.5, 58.333333, 
	33.333333), ), ((25.416667, 57.5, 33.333333), ), ((27.083333, 
	55.833333, 33.333333), ), ((26.666667, 53.333333, 33.333333), ), ((
	24.583333, 52.5, 33.333333), ), ((22.916667, 54.166667, 33.333333), ), 
	((23.333333, 56.666667, 33.333333), ), ((30.0, 53.333333, 16.666667), 
	), ((30.0, 56.666667, 33.333333), ), ((32.5, 51.666667, 33.333333), ), 
	((31.666667, 55.0, 33.333333), ), ((32.5, 58.333333, 33.333333), ), ((
	37.5, 51.666667, 33.333333), ), ((38.333333, 55.0, 33.333333), ), ((
	37.5, 58.333333, 33.333333), ), ((35.416667, 57.5, 33.333333), ), ((
	37.083333, 55.833333, 33.333333), ), ((36.666667, 53.333333, 
	33.333333), ), ((34.583333, 52.5, 33.333333), ), ((32.916667, 
	54.166667, 33.333333), ), ((33.333333, 56.666667, 33.333333), ), ((
	50.0, 56.666667, 16.666667), ), ((50.0, 53.333333, 33.333333), ), ((
	40.0, 53.333333, 16.666667), ), ((40.0, 56.666667, 33.333333), ), ((
	42.5, 51.666667, 33.333333), ), ((41.666667, 55.0, 33.333333), ), ((
	42.5, 58.333333, 33.333333), ), ((47.5, 51.666667, 33.333333), ), ((
	48.333333, 55.0, 33.333333), ), ((47.5, 58.333333, 33.333333), ), ((
	45.416667, 57.5, 33.333333), ), ((47.083333, 55.833333, 33.333333), ), 
	((46.666667, 53.333333, 33.333333), ), ((44.583333, 52.5, 33.333333), 
	), ((42.916667, 54.166667, 33.333333), ), ((43.333333, 56.666667, 
	33.333333), ), ((6.666667, 60.0, 33.333333), ), ((16.666667, 60.0, 
	33.333333), ), ((26.666667, 60.0, 33.333333), ), ((36.666667, 60.0, 
	33.333333), ), ((46.666667, 60.0, 33.333333), ))
	p.Set(faces=faces, name='g6')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 63.333333, 16.666667), ), ((0.0, 66.666667, 33.333333), 
	), ((2.5, 61.666667, 33.333333), ), ((1.666667, 65.0, 33.333333), ), ((
	2.5, 68.333333, 33.333333), ), ((7.5, 61.666667, 33.333333), ), ((
	8.333333, 65.0, 33.333333), ), ((7.5, 68.333333, 33.333333), ), ((
	5.416667, 67.5, 33.333333), ), ((7.083333, 65.833333, 33.333333), ), ((
	6.666667, 63.333333, 33.333333), ), ((4.583333, 62.5, 33.333333), ), ((
	2.916667, 64.166667, 33.333333), ), ((3.333333, 66.666667, 33.333333), 
	), ((10.0, 63.333333, 16.666667), ), ((10.0, 66.666667, 33.333333), ), 
	((12.5, 61.666667, 33.333333), ), ((11.666667, 65.0, 33.333333), ), ((
	12.5, 68.333333, 33.333333), ), ((17.5, 61.666667, 33.333333), ), ((
	18.333333, 65.0, 33.333333), ), ((17.5, 68.333333, 33.333333), ), ((
	15.416667, 67.5, 33.333333), ), ((17.083333, 65.833333, 33.333333), ), 
	((16.666667, 63.333333, 33.333333), ), ((14.583333, 62.5, 33.333333), 
	), ((12.916667, 64.166667, 33.333333), ), ((13.333333, 66.666667, 
	33.333333), ), ((20.0, 63.333333, 16.666667), ), ((20.0, 66.666667, 
	33.333333), ), ((22.5, 61.666667, 33.333333), ), ((21.666667, 65.0, 
	33.333333), ), ((22.5, 68.333333, 33.333333), ), ((27.5, 61.666667, 
	33.333333), ), ((28.333333, 65.0, 33.333333), ), ((27.5, 68.333333, 
	33.333333), ), ((25.416667, 67.5, 33.333333), ), ((27.083333, 
	65.833333, 33.333333), ), ((26.666667, 63.333333, 33.333333), ), ((
	24.583333, 62.5, 33.333333), ), ((22.916667, 64.166667, 33.333333), ), 
	((23.333333, 66.666667, 33.333333), ), ((30.0, 63.333333, 16.666667), 
	), ((30.0, 66.666667, 33.333333), ), ((32.5, 61.666667, 33.333333), ), 
	((31.666667, 65.0, 33.333333), ), ((32.5, 68.333333, 33.333333), ), ((
	37.5, 61.666667, 33.333333), ), ((38.333333, 65.0, 33.333333), ), ((
	37.5, 68.333333, 33.333333), ), ((35.416667, 67.5, 33.333333), ), ((
	37.083333, 65.833333, 33.333333), ), ((36.666667, 63.333333, 
	33.333333), ), ((34.583333, 62.5, 33.333333), ), ((32.916667, 
	64.166667, 33.333333), ), ((33.333333, 66.666667, 33.333333), ), ((
	50.0, 66.666667, 16.666667), ), ((50.0, 63.333333, 33.333333), ), ((
	40.0, 63.333333, 16.666667), ), ((40.0, 66.666667, 33.333333), ), ((
	42.5, 61.666667, 33.333333), ), ((41.666667, 65.0, 33.333333), ), ((
	42.5, 68.333333, 33.333333), ), ((47.5, 61.666667, 33.333333), ), ((
	48.333333, 65.0, 33.333333), ), ((47.5, 68.333333, 33.333333), ), ((
	45.416667, 67.5, 33.333333), ), ((47.083333, 65.833333, 33.333333), ), 
	((46.666667, 63.333333, 33.333333), ), ((44.583333, 62.5, 33.333333), 
	), ((42.916667, 64.166667, 33.333333), ), ((43.333333, 66.666667, 
	33.333333), ), ((6.666667, 70.0, 33.333333), ), ((16.666667, 70.0, 
	33.333333), ), ((26.666667, 70.0, 33.333333), ), ((36.666667, 70.0, 
	33.333333), ), ((46.666667, 70.0, 33.333333), ))
	p.Set(faces=faces, name='g7')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 73.333333, 16.666667), ), ((0.0, 76.666667, 33.333333), 
	), ((2.5, 71.666667, 33.333333), ), ((1.666667, 75.0, 33.333333), ), ((
	2.5, 78.333333, 33.333333), ), ((7.5, 71.666667, 33.333333), ), ((
	8.333333, 75.0, 33.333333), ), ((7.5, 78.333333, 33.333333), ), ((
	5.416667, 77.5, 33.333333), ), ((7.083333, 75.833333, 33.333333), ), ((
	6.666667, 73.333333, 33.333333), ), ((4.583333, 72.5, 33.333333), ), ((
	2.916667, 74.166667, 33.333333), ), ((3.333333, 76.666667, 33.333333), 
	), ((10.0, 73.333333, 16.666667), ), ((10.0, 76.666667, 33.333333), ), 
	((12.5, 71.666667, 33.333333), ), ((11.666667, 75.0, 33.333333), ), ((
	12.5, 78.333333, 33.333333), ), ((17.5, 71.666667, 33.333333), ), ((
	18.333333, 75.0, 33.333333), ), ((17.5, 78.333333, 33.333333), ), ((
	15.416667, 77.5, 33.333333), ), ((17.083333, 75.833333, 33.333333), ), 
	((16.666667, 73.333333, 33.333333), ), ((14.583333, 72.5, 33.333333), 
	), ((12.916667, 74.166667, 33.333333), ), ((13.333333, 76.666667, 
	33.333333), ), ((20.0, 73.333333, 16.666667), ), ((20.0, 76.666667, 
	33.333333), ), ((22.5, 71.666667, 33.333333), ), ((21.666667, 75.0, 
	33.333333), ), ((22.5, 78.333333, 33.333333), ), ((27.5, 71.666667, 
	33.333333), ), ((28.333333, 75.0, 33.333333), ), ((27.5, 78.333333, 
	33.333333), ), ((25.416667, 77.5, 33.333333), ), ((27.083333, 
	75.833333, 33.333333), ), ((26.666667, 73.333333, 33.333333), ), ((
	24.583333, 72.5, 33.333333), ), ((22.916667, 74.166667, 33.333333), ), 
	((23.333333, 76.666667, 33.333333), ), ((30.0, 73.333333, 16.666667), 
	), ((30.0, 76.666667, 33.333333), ), ((32.5, 71.666667, 33.333333), ), 
	((31.666667, 75.0, 33.333333), ), ((32.5, 78.333333, 33.333333), ), ((
	37.5, 71.666667, 33.333333), ), ((38.333333, 75.0, 33.333333), ), ((
	37.5, 78.333333, 33.333333), ), ((35.416667, 77.5, 33.333333), ), ((
	37.083333, 75.833333, 33.333333), ), ((36.666667, 73.333333, 
	33.333333), ), ((34.583333, 72.5, 33.333333), ), ((32.916667, 
	74.166667, 33.333333), ), ((33.333333, 76.666667, 33.333333), ), ((
	50.0, 76.666667, 16.666667), ), ((50.0, 73.333333, 33.333333), ), ((
	40.0, 73.333333, 16.666667), ), ((40.0, 76.666667, 33.333333), ), ((
	42.5, 71.666667, 33.333333), ), ((41.666667, 75.0, 33.333333), ), ((
	42.5, 78.333333, 33.333333), ), ((47.5, 71.666667, 33.333333), ), ((
	48.333333, 75.0, 33.333333), ), ((47.5, 78.333333, 33.333333), ), ((
	45.416667, 77.5, 33.333333), ), ((47.083333, 75.833333, 33.333333), ), 
	((46.666667, 73.333333, 33.333333), ), ((44.583333, 72.5, 33.333333), 
	), ((42.916667, 74.166667, 33.333333), ), ((43.333333, 76.666667, 
	33.333333), ), ((6.666667, 80.0, 33.333333), ), ((16.666667, 80.0, 
	33.333333), ), ((26.666667, 80.0, 33.333333), ), ((36.666667, 80.0, 
	33.333333), ), ((46.666667, 80.0, 33.333333), ))
	p.Set(faces=faces, name='g8')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 83.333333, 16.666667), ), ((0.0, 86.666667, 33.333333), 
	), ((2.5, 81.666667, 33.333333), ), ((1.666667, 85.0, 33.333333), ), ((
	2.5, 88.333333, 33.333333), ), ((7.5, 81.666667, 33.333333), ), ((
	8.333333, 85.0, 33.333333), ), ((7.5, 88.333333, 33.333333), ), ((
	5.416667, 87.5, 33.333333), ), ((7.083333, 85.833333, 33.333333), ), ((
	6.666667, 83.333333, 33.333333), ), ((4.583333, 82.5, 33.333333), ), ((
	2.916667, 84.166667, 33.333333), ), ((3.333333, 86.666667, 33.333333), 
	), ((10.0, 83.333333, 16.666667), ), ((10.0, 86.666667, 33.333333), ), 
	((12.5, 81.666667, 33.333333), ), ((11.666667, 85.0, 33.333333), ), ((
	12.5, 88.333333, 33.333333), ), ((17.5, 81.666667, 33.333333), ), ((
	18.333333, 85.0, 33.333333), ), ((17.5, 88.333333, 33.333333), ), ((
	15.416667, 87.5, 33.333333), ), ((17.083333, 85.833333, 33.333333), ), 
	((16.666667, 83.333333, 33.333333), ), ((14.583333, 82.5, 33.333333), 
	), ((12.916667, 84.166667, 33.333333), ), ((13.333333, 86.666667, 
	33.333333), ), ((20.0, 83.333333, 16.666667), ), ((20.0, 86.666667, 
	33.333333), ), ((22.5, 81.666667, 33.333333), ), ((21.666667, 85.0, 
	33.333333), ), ((22.5, 88.333333, 33.333333), ), ((27.5, 81.666667, 
	33.333333), ), ((28.333333, 85.0, 33.333333), ), ((27.5, 88.333333, 
	33.333333), ), ((25.416667, 87.5, 33.333333), ), ((27.083333, 
	85.833333, 33.333333), ), ((26.666667, 83.333333, 33.333333), ), ((
	24.583333, 82.5, 33.333333), ), ((22.916667, 84.166667, 33.333333), ), 
	((23.333333, 86.666667, 33.333333), ), ((30.0, 83.333333, 16.666667), 
	), ((30.0, 86.666667, 33.333333), ), ((32.5, 81.666667, 33.333333), ), 
	((31.666667, 85.0, 33.333333), ), ((32.5, 88.333333, 33.333333), ), ((
	37.5, 81.666667, 33.333333), ), ((38.333333, 85.0, 33.333333), ), ((
	37.5, 88.333333, 33.333333), ), ((35.416667, 87.5, 33.333333), ), ((
	37.083333, 85.833333, 33.333333), ), ((36.666667, 83.333333, 
	33.333333), ), ((34.583333, 82.5, 33.333333), ), ((32.916667, 
	84.166667, 33.333333), ), ((33.333333, 86.666667, 33.333333), ), ((
	50.0, 86.666667, 16.666667), ), ((50.0, 83.333333, 33.333333), ), ((
	40.0, 83.333333, 16.666667), ), ((40.0, 86.666667, 33.333333), ), ((
	42.5, 81.666667, 33.333333), ), ((41.666667, 85.0, 33.333333), ), ((
	42.5, 88.333333, 33.333333), ), ((47.5, 81.666667, 33.333333), ), ((
	48.333333, 85.0, 33.333333), ), ((47.5, 88.333333, 33.333333), ), ((
	45.416667, 87.5, 33.333333), ), ((47.083333, 85.833333, 33.333333), ), 
	((46.666667, 83.333333, 33.333333), ), ((44.583333, 82.5, 33.333333), 
	), ((42.916667, 84.166667, 33.333333), ), ((43.333333, 86.666667, 
	33.333333), ), ((6.666667, 90.0, 33.333333), ), ((16.666667, 90.0, 
	33.333333), ), ((26.666667, 90.0, 33.333333), ), ((36.666667, 90.0, 
	33.333333), ), ((46.666667, 90.0, 33.333333), ))
	p.Set(faces=faces, name='g9')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 93.333333, 16.666667), ), ((0.0, 96.666667, 33.333333), 
	), ((2.5, 91.666667, 33.333333), ), ((1.666667, 95.0, 33.333333), ), ((
	2.5, 98.333333, 33.333333), ), ((7.5, 91.666667, 33.333333), ), ((
	8.333333, 95.0, 33.333333), ), ((7.5, 98.333333, 33.333333), ), ((
	5.416667, 97.5, 33.333333), ), ((7.083333, 95.833333, 33.333333), ), ((
	6.666667, 93.333333, 33.333333), ), ((4.583333, 92.5, 33.333333), ), ((
	2.916667, 94.166667, 33.333333), ), ((3.333333, 96.666667, 33.333333), 
	), ((10.0, 93.333333, 16.666667), ), ((10.0, 96.666667, 33.333333), ), 
	((12.5, 91.666667, 33.333333), ), ((11.666667, 95.0, 33.333333), ), ((
	12.5, 98.333333, 33.333333), ), ((17.5, 91.666667, 33.333333), ), ((
	18.333333, 95.0, 33.333333), ), ((17.5, 98.333333, 33.333333), ), ((
	15.416667, 97.5, 33.333333), ), ((17.083333, 95.833333, 33.333333), ), 
	((16.666667, 93.333333, 33.333333), ), ((14.583333, 92.5, 33.333333), 
	), ((12.916667, 94.166667, 33.333333), ), ((13.333333, 96.666667, 
	33.333333), ), ((20.0, 93.333333, 16.666667), ), ((20.0, 96.666667, 
	33.333333), ), ((22.5, 91.666667, 33.333333), ), ((21.666667, 95.0, 
	33.333333), ), ((22.5, 98.333333, 33.333333), ), ((27.5, 91.666667, 
	33.333333), ), ((28.333333, 95.0, 33.333333), ), ((27.5, 98.333333, 
	33.333333), ), ((25.416667, 97.5, 33.333333), ), ((27.083333, 
	95.833333, 33.333333), ), ((26.666667, 93.333333, 33.333333), ), ((
	24.583333, 92.5, 33.333333), ), ((22.916667, 94.166667, 33.333333), ), 
	((23.333333, 96.666667, 33.333333), ), ((30.0, 93.333333, 16.666667), 
	), ((30.0, 96.666667, 33.333333), ), ((32.5, 91.666667, 33.333333), ), 
	((31.666667, 95.0, 33.333333), ), ((32.5, 98.333333, 33.333333), ), ((
	37.5, 91.666667, 33.333333), ), ((38.333333, 95.0, 33.333333), ), ((
	37.5, 98.333333, 33.333333), ), ((35.416667, 97.5, 33.333333), ), ((
	37.083333, 95.833333, 33.333333), ), ((36.666667, 93.333333, 
	33.333333), ), ((34.583333, 92.5, 33.333333), ), ((32.916667, 
	94.166667, 33.333333), ), ((33.333333, 96.666667, 33.333333), ), ((
	50.0, 96.666667, 16.666667), ), ((50.0, 93.333333, 33.333333), ), ((
	40.0, 93.333333, 16.666667), ), ((40.0, 96.666667, 33.333333), ), ((
	42.5, 91.666667, 33.333333), ), ((41.666667, 95.0, 33.333333), ), ((
	42.5, 98.333333, 33.333333), ), ((47.5, 91.666667, 33.333333), ), ((
	48.333333, 95.0, 33.333333), ), ((47.5, 98.333333, 33.333333), ), ((
	45.416667, 97.5, 33.333333), ), ((47.083333, 95.833333, 33.333333), ), 
	((46.666667, 93.333333, 33.333333), ), ((44.583333, 92.5, 33.333333), 
	), ((42.916667, 94.166667, 33.333333), ), ((43.333333, 96.666667, 
	33.333333), ), ((6.666667, 100.0, 33.333333), ), ((16.666667, 100.0, 
	33.333333), ), ((26.666667, 100.0, 33.333333), ), ((36.666667, 100.0, 
	33.333333), ), ((46.666667, 100.0, 33.333333), ))
	p.Set(faces=faces, name='g10')

def gt150():
	gt100()
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 103.333333, 16.666667), ), ((0.0, 106.666667, 
	33.333333), ), ((2.5, 101.666667, 33.333333), ), ((1.666667, 105.0, 
	33.333333), ), ((2.5, 108.333333, 33.333333), ), ((7.5, 101.666667, 
	33.333333), ), ((8.333333, 105.0, 33.333333), ), ((7.5, 108.333333, 
	33.333333), ), ((5.416667, 107.5, 33.333333), ), ((7.083333, 
	105.833333, 33.333333), ), ((6.666667, 103.333333, 33.333333), ), ((
	4.583333, 102.5, 33.333333), ), ((2.916667, 104.166667, 33.333333), ), 
	((3.333333, 106.666667, 33.333333), ), ((10.0, 103.333333, 16.666667), 
	), ((10.0, 106.666667, 33.333333), ), ((12.5, 101.666667, 33.333333), 
	), ((11.666667, 105.0, 33.333333), ), ((12.5, 108.333333, 33.333333), 
	), ((17.5, 101.666667, 33.333333), ), ((18.333333, 105.0, 33.333333), 
	), ((17.5, 108.333333, 33.333333), ), ((15.416667, 107.5, 33.333333), 
	), ((17.083333, 105.833333, 33.333333), ), ((16.666667, 103.333333, 
	33.333333), ), ((14.583333, 102.5, 33.333333), ), ((12.916667, 
	104.166667, 33.333333), ), ((13.333333, 106.666667, 33.333333), ), ((
	20.0, 103.333333, 16.666667), ), ((20.0, 106.666667, 33.333333), ), ((
	22.5, 101.666667, 33.333333), ), ((21.666667, 105.0, 33.333333), ), ((
	22.5, 108.333333, 33.333333), ), ((27.5, 101.666667, 33.333333), ), ((
	28.333333, 105.0, 33.333333), ), ((27.5, 108.333333, 33.333333), ), ((
	25.416667, 107.5, 33.333333), ), ((27.083333, 105.833333, 33.333333), 
	), ((26.666667, 103.333333, 33.333333), ), ((24.583333, 102.5, 
	33.333333), ), ((22.916667, 104.166667, 33.333333), ), ((23.333333, 
	106.666667, 33.333333), ), ((30.0, 103.333333, 16.666667), ), ((30.0, 
	106.666667, 33.333333), ), ((32.5, 101.666667, 33.333333), ), ((
	31.666667, 105.0, 33.333333), ), ((32.5, 108.333333, 33.333333), ), ((
	37.5, 101.666667, 33.333333), ), ((38.333333, 105.0, 33.333333), ), ((
	37.5, 108.333333, 33.333333), ), ((35.416667, 107.5, 33.333333), ), ((
	37.083333, 105.833333, 33.333333), ), ((36.666667, 103.333333, 
	33.333333), ), ((34.583333, 102.5, 33.333333), ), ((32.916667, 
	104.166667, 33.333333), ), ((33.333333, 106.666667, 33.333333), ), ((
	50.0, 106.666667, 16.666667), ), ((50.0, 103.333333, 33.333333), ), ((
	40.0, 103.333333, 16.666667), ), ((40.0, 106.666667, 33.333333), ), ((
	42.5, 101.666667, 33.333333), ), ((41.666667, 105.0, 33.333333), ), ((
	42.5, 108.333333, 33.333333), ), ((47.5, 101.666667, 33.333333), ), ((
	48.333333, 105.0, 33.333333), ), ((47.5, 108.333333, 33.333333), ), ((
	45.416667, 107.5, 33.333333), ), ((47.083333, 105.833333, 33.333333), 
	), ((46.666667, 103.333333, 33.333333), ), ((44.583333, 102.5, 
	33.333333), ), ((42.916667, 104.166667, 33.333333), ), ((43.333333, 
	106.666667, 33.333333), ), ((6.666667, 110.0, 33.333333), ), ((
	16.666667, 110.0, 33.333333), ), ((26.666667, 110.0, 33.333333), ), ((
	36.666667, 110.0, 33.333333), ), ((46.666667, 110.0, 33.333333), ))
	p.Set(faces=faces, name='g11')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 113.333333, 16.666667), ), ((0.0, 116.666667, 
	33.333333), ), ((2.5, 111.666667, 33.333333), ), ((1.666667, 115.0, 
	33.333333), ), ((2.5, 118.333333, 33.333333), ), ((7.5, 111.666667, 
	33.333333), ), ((8.333333, 115.0, 33.333333), ), ((7.5, 118.333333, 
	33.333333), ), ((5.416667, 117.5, 33.333333), ), ((7.083333, 
	115.833333, 33.333333), ), ((6.666667, 113.333333, 33.333333), ), ((
	4.583333, 112.5, 33.333333), ), ((2.916667, 114.166667, 33.333333), ), 
	((3.333333, 116.666667, 33.333333), ), ((10.0, 113.333333, 16.666667), 
	), ((10.0, 116.666667, 33.333333), ), ((12.5, 111.666667, 33.333333), 
	), ((11.666667, 115.0, 33.333333), ), ((12.5, 118.333333, 33.333333), 
	), ((17.5, 111.666667, 33.333333), ), ((18.333333, 115.0, 33.333333), 
	), ((17.5, 118.333333, 33.333333), ), ((15.416667, 117.5, 33.333333), 
	), ((17.083333, 115.833333, 33.333333), ), ((16.666667, 113.333333, 
	33.333333), ), ((14.583333, 112.5, 33.333333), ), ((12.916667, 
	114.166667, 33.333333), ), ((13.333333, 116.666667, 33.333333), ), ((
	20.0, 113.333333, 16.666667), ), ((20.0, 116.666667, 33.333333), ), ((
	22.5, 111.666667, 33.333333), ), ((21.666667, 115.0, 33.333333), ), ((
	22.5, 118.333333, 33.333333), ), ((27.5, 111.666667, 33.333333), ), ((
	28.333333, 115.0, 33.333333), ), ((27.5, 118.333333, 33.333333), ), ((
	25.416667, 117.5, 33.333333), ), ((27.083333, 115.833333, 33.333333), 
	), ((26.666667, 113.333333, 33.333333), ), ((24.583333, 112.5, 
	33.333333), ), ((22.916667, 114.166667, 33.333333), ), ((23.333333, 
	116.666667, 33.333333), ), ((30.0, 113.333333, 16.666667), ), ((30.0, 
	116.666667, 33.333333), ), ((32.5, 111.666667, 33.333333), ), ((
	31.666667, 115.0, 33.333333), ), ((32.5, 118.333333, 33.333333), ), ((
	37.5, 111.666667, 33.333333), ), ((38.333333, 115.0, 33.333333), ), ((
	37.5, 118.333333, 33.333333), ), ((35.416667, 117.5, 33.333333), ), ((
	37.083333, 115.833333, 33.333333), ), ((36.666667, 113.333333, 
	33.333333), ), ((34.583333, 112.5, 33.333333), ), ((32.916667, 
	114.166667, 33.333333), ), ((33.333333, 116.666667, 33.333333), ), ((
	50.0, 116.666667, 16.666667), ), ((50.0, 113.333333, 33.333333), ), ((
	40.0, 113.333333, 16.666667), ), ((40.0, 116.666667, 33.333333), ), ((
	42.5, 111.666667, 33.333333), ), ((41.666667, 115.0, 33.333333), ), ((
	42.5, 118.333333, 33.333333), ), ((47.5, 111.666667, 33.333333), ), ((
	48.333333, 115.0, 33.333333), ), ((47.5, 118.333333, 33.333333), ), ((
	45.416667, 117.5, 33.333333), ), ((47.083333, 115.833333, 33.333333), 
	), ((46.666667, 113.333333, 33.333333), ), ((44.583333, 112.5, 
	33.333333), ), ((42.916667, 114.166667, 33.333333), ), ((43.333333, 
	116.666667, 33.333333), ), ((6.666667, 120.0, 33.333333), ), ((
	16.666667, 120.0, 33.333333), ), ((26.666667, 120.0, 33.333333), ), ((
	36.666667, 120.0, 33.333333), ), ((46.666667, 120.0, 33.333333), ))
	p.Set(faces=faces, name='g12')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 123.333333, 16.666667), ), ((0.0, 126.666667, 
	33.333333), ), ((2.5, 121.666667, 33.333333), ), ((1.666667, 125.0, 
	33.333333), ), ((2.5, 128.333333, 33.333333), ), ((7.5, 121.666667, 
	33.333333), ), ((8.333333, 125.0, 33.333333), ), ((7.5, 128.333333, 
	33.333333), ), ((5.416667, 127.5, 33.333333), ), ((7.083333, 
	125.833333, 33.333333), ), ((6.666667, 123.333333, 33.333333), ), ((
	4.583333, 122.5, 33.333333), ), ((2.916667, 124.166667, 33.333333), ), 
	((3.333333, 126.666667, 33.333333), ), ((10.0, 123.333333, 16.666667), 
	), ((10.0, 126.666667, 33.333333), ), ((12.5, 121.666667, 33.333333), 
	), ((11.666667, 125.0, 33.333333), ), ((12.5, 128.333333, 33.333333), 
	), ((17.5, 121.666667, 33.333333), ), ((18.333333, 125.0, 33.333333), 
	), ((17.5, 128.333333, 33.333333), ), ((15.416667, 127.5, 33.333333), 
	), ((17.083333, 125.833333, 33.333333), ), ((16.666667, 123.333333, 
	33.333333), ), ((14.583333, 122.5, 33.333333), ), ((12.916667, 
	124.166667, 33.333333), ), ((13.333333, 126.666667, 33.333333), ), ((
	20.0, 123.333333, 16.666667), ), ((20.0, 126.666667, 33.333333), ), ((
	22.5, 121.666667, 33.333333), ), ((21.666667, 125.0, 33.333333), ), ((
	22.5, 128.333333, 33.333333), ), ((27.5, 121.666667, 33.333333), ), ((
	28.333333, 125.0, 33.333333), ), ((27.5, 128.333333, 33.333333), ), ((
	25.416667, 127.5, 33.333333), ), ((27.083333, 125.833333, 33.333333), 
	), ((26.666667, 123.333333, 33.333333), ), ((24.583333, 122.5, 
	33.333333), ), ((22.916667, 124.166667, 33.333333), ), ((23.333333, 
	126.666667, 33.333333), ), ((30.0, 123.333333, 16.666667), ), ((30.0, 
	126.666667, 33.333333), ), ((32.5, 121.666667, 33.333333), ), ((
	31.666667, 125.0, 33.333333), ), ((32.5, 128.333333, 33.333333), ), ((
	37.5, 121.666667, 33.333333), ), ((38.333333, 125.0, 33.333333), ), ((
	37.5, 128.333333, 33.333333), ), ((35.416667, 127.5, 33.333333), ), ((
	37.083333, 125.833333, 33.333333), ), ((36.666667, 123.333333, 
	33.333333), ), ((34.583333, 122.5, 33.333333), ), ((32.916667, 
	124.166667, 33.333333), ), ((33.333333, 126.666667, 33.333333), ), ((
	50.0, 126.666667, 16.666667), ), ((50.0, 123.333333, 33.333333), ), ((
	40.0, 123.333333, 16.666667), ), ((40.0, 126.666667, 33.333333), ), ((
	42.5, 121.666667, 33.333333), ), ((41.666667, 125.0, 33.333333), ), ((
	42.5, 128.333333, 33.333333), ), ((47.5, 121.666667, 33.333333), ), ((
	48.333333, 125.0, 33.333333), ), ((47.5, 128.333333, 33.333333), ), ((
	45.416667, 127.5, 33.333333), ), ((47.083333, 125.833333, 33.333333), 
	), ((46.666667, 123.333333, 33.333333), ), ((44.583333, 122.5, 
	33.333333), ), ((42.916667, 124.166667, 33.333333), ), ((43.333333, 
	126.666667, 33.333333), ), ((6.666667, 130.0, 33.333333), ), ((
	16.666667, 130.0, 33.333333), ), ((26.666667, 130.0, 33.333333), ), ((
	36.666667, 130.0, 33.333333), ), ((46.666667, 130.0, 33.333333), ))
	p.Set(faces=faces, name='g13')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 133.333333, 16.666667), ), ((0.0, 136.666667, 
	33.333333), ), ((2.5, 131.666667, 33.333333), ), ((1.666667, 135.0, 
	33.333333), ), ((2.5, 138.333333, 33.333333), ), ((7.5, 131.666667, 
	33.333333), ), ((8.333333, 135.0, 33.333333), ), ((7.5, 138.333333, 
	33.333333), ), ((5.416667, 137.5, 33.333333), ), ((7.083333, 
	135.833333, 33.333333), ), ((6.666667, 133.333333, 33.333333), ), ((
	4.583333, 132.5, 33.333333), ), ((2.916667, 134.166667, 33.333333), ), 
	((3.333333, 136.666667, 33.333333), ), ((10.0, 133.333333, 16.666667), 
	), ((10.0, 136.666667, 33.333333), ), ((12.5, 131.666667, 33.333333), 
	), ((11.666667, 135.0, 33.333333), ), ((12.5, 138.333333, 33.333333), 
	), ((17.5, 131.666667, 33.333333), ), ((18.333333, 135.0, 33.333333), 
	), ((17.5, 138.333333, 33.333333), ), ((15.416667, 137.5, 33.333333), 
	), ((17.083333, 135.833333, 33.333333), ), ((16.666667, 133.333333, 
	33.333333), ), ((14.583333, 132.5, 33.333333), ), ((12.916667, 
	134.166667, 33.333333), ), ((13.333333, 136.666667, 33.333333), ), ((
	20.0, 133.333333, 16.666667), ), ((20.0, 136.666667, 33.333333), ), ((
	22.5, 131.666667, 33.333333), ), ((21.666667, 135.0, 33.333333), ), ((
	22.5, 138.333333, 33.333333), ), ((27.5, 131.666667, 33.333333), ), ((
	28.333333, 135.0, 33.333333), ), ((27.5, 138.333333, 33.333333), ), ((
	25.416667, 137.5, 33.333333), ), ((27.083333, 135.833333, 33.333333), 
	), ((26.666667, 133.333333, 33.333333), ), ((24.583333, 132.5, 
	33.333333), ), ((22.916667, 134.166667, 33.333333), ), ((23.333333, 
	136.666667, 33.333333), ), ((30.0, 133.333333, 16.666667), ), ((30.0, 
	136.666667, 33.333333), ), ((32.5, 131.666667, 33.333333), ), ((
	31.666667, 135.0, 33.333333), ), ((32.5, 138.333333, 33.333333), ), ((
	37.5, 131.666667, 33.333333), ), ((38.333333, 135.0, 33.333333), ), ((
	37.5, 138.333333, 33.333333), ), ((35.416667, 137.5, 33.333333), ), ((
	37.083333, 135.833333, 33.333333), ), ((36.666667, 133.333333, 
	33.333333), ), ((34.583333, 132.5, 33.333333), ), ((32.916667, 
	134.166667, 33.333333), ), ((33.333333, 136.666667, 33.333333), ), ((
	50.0, 136.666667, 16.666667), ), ((50.0, 133.333333, 33.333333), ), ((
	40.0, 133.333333, 16.666667), ), ((40.0, 136.666667, 33.333333), ), ((
	42.5, 131.666667, 33.333333), ), ((41.666667, 135.0, 33.333333), ), ((
	42.5, 138.333333, 33.333333), ), ((47.5, 131.666667, 33.333333), ), ((
	48.333333, 135.0, 33.333333), ), ((47.5, 138.333333, 33.333333), ), ((
	45.416667, 137.5, 33.333333), ), ((47.083333, 135.833333, 33.333333), 
	), ((46.666667, 133.333333, 33.333333), ), ((44.583333, 132.5, 
	33.333333), ), ((42.916667, 134.166667, 33.333333), ), ((43.333333, 
	136.666667, 33.333333), ), ((6.666667, 140.0, 33.333333), ), ((
	16.666667, 140.0, 33.333333), ), ((26.666667, 140.0, 33.333333), ), ((
	36.666667, 140.0, 33.333333), ), ((46.666667, 140.0, 33.333333), ))
	p.Set(faces=faces, name='g14')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 143.333333, 16.666667), ), ((0.0, 146.666667, 
	33.333333), ), ((2.5, 141.666667, 33.333333), ), ((1.666667, 145.0, 
	33.333333), ), ((2.5, 148.333333, 33.333333), ), ((7.5, 141.666667, 
	33.333333), ), ((8.333333, 145.0, 33.333333), ), ((7.5, 148.333333, 
	33.333333), ), ((5.416667, 147.5, 33.333333), ), ((7.083333, 
	145.833333, 33.333333), ), ((6.666667, 143.333333, 33.333333), ), ((
	4.583333, 142.5, 33.333333), ), ((2.916667, 144.166667, 33.333333), ), 
	((3.333333, 146.666667, 33.333333), ), ((10.0, 143.333333, 16.666667), 
	), ((10.0, 146.666667, 33.333333), ), ((12.5, 141.666667, 33.333333), 
	), ((11.666667, 145.0, 33.333333), ), ((12.5, 148.333333, 33.333333), 
	), ((17.5, 141.666667, 33.333333), ), ((18.333333, 145.0, 33.333333), 
	), ((17.5, 148.333333, 33.333333), ), ((15.416667, 147.5, 33.333333), 
	), ((17.083333, 145.833333, 33.333333), ), ((16.666667, 143.333333, 
	33.333333), ), ((14.583333, 142.5, 33.333333), ), ((12.916667, 
	144.166667, 33.333333), ), ((13.333333, 146.666667, 33.333333), ), ((
	20.0, 143.333333, 16.666667), ), ((20.0, 146.666667, 33.333333), ), ((
	22.5, 141.666667, 33.333333), ), ((21.666667, 145.0, 33.333333), ), ((
	22.5, 148.333333, 33.333333), ), ((27.5, 141.666667, 33.333333), ), ((
	28.333333, 145.0, 33.333333), ), ((27.5, 148.333333, 33.333333), ), ((
	25.416667, 147.5, 33.333333), ), ((27.083333, 145.833333, 33.333333), 
	), ((26.666667, 143.333333, 33.333333), ), ((24.583333, 142.5, 
	33.333333), ), ((22.916667, 144.166667, 33.333333), ), ((23.333333, 
	146.666667, 33.333333), ), ((30.0, 143.333333, 16.666667), ), ((30.0, 
	146.666667, 33.333333), ), ((32.5, 141.666667, 33.333333), ), ((
	31.666667, 145.0, 33.333333), ), ((32.5, 148.333333, 33.333333), ), ((
	37.5, 141.666667, 33.333333), ), ((38.333333, 145.0, 33.333333), ), ((
	37.5, 148.333333, 33.333333), ), ((35.416667, 147.5, 33.333333), ), ((
	37.083333, 145.833333, 33.333333), ), ((36.666667, 143.333333, 
	33.333333), ), ((34.583333, 142.5, 33.333333), ), ((32.916667, 
	144.166667, 33.333333), ), ((33.333333, 146.666667, 33.333333), ), ((
	50.0, 146.666667, 16.666667), ), ((50.0, 143.333333, 33.333333), ), ((
	40.0, 143.333333, 16.666667), ), ((40.0, 146.666667, 33.333333), ), ((
	42.5, 141.666667, 33.333333), ), ((41.666667, 145.0, 33.333333), ), ((
	42.5, 148.333333, 33.333333), ), ((47.5, 141.666667, 33.333333), ), ((
	48.333333, 145.0, 33.333333), ), ((47.5, 148.333333, 33.333333), ), ((
	45.416667, 147.5, 33.333333), ), ((47.083333, 145.833333, 33.333333), 
	), ((46.666667, 143.333333, 33.333333), ), ((44.583333, 142.5, 
	33.333333), ), ((42.916667, 144.166667, 33.333333), ), ((43.333333, 
	146.666667, 33.333333), ), ((6.666667, 150.0, 33.333333), ), ((
	16.666667, 150.0, 33.333333), ), ((26.666667, 150.0, 33.333333), ), ((
	36.666667, 150.0, 33.333333), ), ((46.666667, 150.0, 33.333333), ))
	p.Set(faces=faces, name='g15')

def gt200():
	gt150()
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 153.333333, 16.666667), ), ((0.0, 156.666667, 
	33.333333), ), ((2.5, 151.666667, 33.333333), ), ((1.666667, 155.0, 
	33.333333), ), ((2.5, 158.333333, 33.333333), ), ((7.5, 151.666667, 
	33.333333), ), ((8.333333, 155.0, 33.333333), ), ((7.5, 158.333333, 
	33.333333), ), ((5.416667, 157.5, 33.333333), ), ((7.083333, 
	155.833333, 33.333333), ), ((6.666667, 153.333333, 33.333333), ), ((
	4.583333, 152.5, 33.333333), ), ((2.916667, 154.166667, 33.333333), ), 
	((3.333333, 156.666667, 33.333333), ), ((10.0, 153.333333, 16.666667), 
	), ((10.0, 156.666667, 33.333333), ), ((12.5, 151.666667, 33.333333), 
	), ((11.666667, 155.0, 33.333333), ), ((12.5, 158.333333, 33.333333), 
	), ((17.5, 151.666667, 33.333333), ), ((18.333333, 155.0, 33.333333), 
	), ((17.5, 158.333333, 33.333333), ), ((15.416667, 157.5, 33.333333), 
	), ((17.083333, 155.833333, 33.333333), ), ((16.666667, 153.333333, 
	33.333333), ), ((14.583333, 152.5, 33.333333), ), ((12.916667, 
	154.166667, 33.333333), ), ((13.333333, 156.666667, 33.333333), ), ((
	20.0, 153.333333, 16.666667), ), ((20.0, 156.666667, 33.333333), ), ((
	22.5, 151.666667, 33.333333), ), ((21.666667, 155.0, 33.333333), ), ((
	22.5, 158.333333, 33.333333), ), ((27.5, 151.666667, 33.333333), ), ((
	28.333333, 155.0, 33.333333), ), ((27.5, 158.333333, 33.333333), ), ((
	25.416667, 157.5, 33.333333), ), ((27.083333, 155.833333, 33.333333), 
	), ((26.666667, 153.333333, 33.333333), ), ((24.583333, 152.5, 
	33.333333), ), ((22.916667, 154.166667, 33.333333), ), ((23.333333, 
	156.666667, 33.333333), ), ((30.0, 153.333333, 16.666667), ), ((30.0, 
	156.666667, 33.333333), ), ((32.5, 151.666667, 33.333333), ), ((
	31.666667, 155.0, 33.333333), ), ((32.5, 158.333333, 33.333333), ), ((
	37.5, 151.666667, 33.333333), ), ((38.333333, 155.0, 33.333333), ), ((
	37.5, 158.333333, 33.333333), ), ((35.416667, 157.5, 33.333333), ), ((
	37.083333, 155.833333, 33.333333), ), ((36.666667, 153.333333, 
	33.333333), ), ((34.583333, 152.5, 33.333333), ), ((32.916667, 
	154.166667, 33.333333), ), ((33.333333, 156.666667, 33.333333), ), ((
	50.0, 156.666667, 16.666667), ), ((50.0, 153.333333, 33.333333), ), ((
	40.0, 153.333333, 16.666667), ), ((40.0, 156.666667, 33.333333), ), ((
	42.5, 151.666667, 33.333333), ), ((41.666667, 155.0, 33.333333), ), ((
	42.5, 158.333333, 33.333333), ), ((47.5, 151.666667, 33.333333), ), ((
	48.333333, 155.0, 33.333333), ), ((47.5, 158.333333, 33.333333), ), ((
	45.416667, 157.5, 33.333333), ), ((47.083333, 155.833333, 33.333333), 
	), ((46.666667, 153.333333, 33.333333), ), ((44.583333, 152.5, 
	33.333333), ), ((42.916667, 154.166667, 33.333333), ), ((43.333333, 
	156.666667, 33.333333), ), ((6.666667, 160.0, 33.333333), ), ((
	16.666667, 160.0, 33.333333), ), ((26.666667, 160.0, 33.333333), ), ((
	36.666667, 160.0, 33.333333), ), ((46.666667, 160.0, 33.333333), ))
	p.Set(faces=faces, name='g16')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 163.333333, 16.666667), ), ((0.0, 166.666667, 
	33.333333), ), ((2.5, 161.666667, 33.333333), ), ((1.666667, 165.0, 
	33.333333), ), ((2.5, 168.333333, 33.333333), ), ((7.5, 161.666667, 
	33.333333), ), ((8.333333, 165.0, 33.333333), ), ((7.5, 168.333333, 
	33.333333), ), ((5.416667, 167.5, 33.333333), ), ((7.083333, 
	165.833333, 33.333333), ), ((6.666667, 163.333333, 33.333333), ), ((
	4.583333, 162.5, 33.333333), ), ((2.916667, 164.166667, 33.333333), ), 
	((3.333333, 166.666667, 33.333333), ), ((10.0, 163.333333, 16.666667), 
	), ((10.0, 166.666667, 33.333333), ), ((12.5, 161.666667, 33.333333), 
	), ((11.666667, 165.0, 33.333333), ), ((12.5, 168.333333, 33.333333), 
	), ((17.5, 161.666667, 33.333333), ), ((18.333333, 165.0, 33.333333), 
	), ((17.5, 168.333333, 33.333333), ), ((15.416667, 167.5, 33.333333), 
	), ((17.083333, 165.833333, 33.333333), ), ((16.666667, 163.333333, 
	33.333333), ), ((14.583333, 162.5, 33.333333), ), ((12.916667, 
	164.166667, 33.333333), ), ((13.333333, 166.666667, 33.333333), ), ((
	20.0, 163.333333, 16.666667), ), ((20.0, 166.666667, 33.333333), ), ((
	22.5, 161.666667, 33.333333), ), ((21.666667, 165.0, 33.333333), ), ((
	22.5, 168.333333, 33.333333), ), ((27.5, 161.666667, 33.333333), ), ((
	28.333333, 165.0, 33.333333), ), ((27.5, 168.333333, 33.333333), ), ((
	25.416667, 167.5, 33.333333), ), ((27.083333, 165.833333, 33.333333), 
	), ((26.666667, 163.333333, 33.333333), ), ((24.583333, 162.5, 
	33.333333), ), ((22.916667, 164.166667, 33.333333), ), ((23.333333, 
	166.666667, 33.333333), ), ((30.0, 163.333333, 16.666667), ), ((30.0, 
	166.666667, 33.333333), ), ((32.5, 161.666667, 33.333333), ), ((
	31.666667, 165.0, 33.333333), ), ((32.5, 168.333333, 33.333333), ), ((
	37.5, 161.666667, 33.333333), ), ((38.333333, 165.0, 33.333333), ), ((
	37.5, 168.333333, 33.333333), ), ((35.416667, 167.5, 33.333333), ), ((
	37.083333, 165.833333, 33.333333), ), ((36.666667, 163.333333, 
	33.333333), ), ((34.583333, 162.5, 33.333333), ), ((32.916667, 
	164.166667, 33.333333), ), ((33.333333, 166.666667, 33.333333), ), ((
	50.0, 166.666667, 16.666667), ), ((50.0, 163.333333, 33.333333), ), ((
	40.0, 163.333333, 16.666667), ), ((40.0, 166.666667, 33.333333), ), ((
	42.5, 161.666667, 33.333333), ), ((41.666667, 165.0, 33.333333), ), ((
	42.5, 168.333333, 33.333333), ), ((47.5, 161.666667, 33.333333), ), ((
	48.333333, 165.0, 33.333333), ), ((47.5, 168.333333, 33.333333), ), ((
	45.416667, 167.5, 33.333333), ), ((47.083333, 165.833333, 33.333333), 
	), ((46.666667, 163.333333, 33.333333), ), ((44.583333, 162.5, 
	33.333333), ), ((42.916667, 164.166667, 33.333333), ), ((43.333333, 
	166.666667, 33.333333), ), ((6.666667, 170.0, 33.333333), ), ((
	16.666667, 170.0, 33.333333), ), ((26.666667, 170.0, 33.333333), ), ((
	36.666667, 170.0, 33.333333), ), ((46.666667, 170.0, 33.333333), ))
	p.Set(faces=faces, name='g17')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 173.333333, 16.666667), ), ((0.0, 176.666667, 
	33.333333), ), ((2.5, 171.666667, 33.333333), ), ((1.666667, 175.0, 
	33.333333), ), ((2.5, 178.333333, 33.333333), ), ((7.5, 171.666667, 
	33.333333), ), ((8.333333, 175.0, 33.333333), ), ((7.5, 178.333333, 
	33.333333), ), ((5.416667, 177.5, 33.333333), ), ((7.083333, 
	175.833333, 33.333333), ), ((6.666667, 173.333333, 33.333333), ), ((
	4.583333, 172.5, 33.333333), ), ((2.916667, 174.166667, 33.333333), ), 
	((3.333333, 176.666667, 33.333333), ), ((10.0, 173.333333, 16.666667), 
	), ((10.0, 176.666667, 33.333333), ), ((12.5, 171.666667, 33.333333), 
	), ((11.666667, 175.0, 33.333333), ), ((12.5, 178.333333, 33.333333), 
	), ((17.5, 171.666667, 33.333333), ), ((18.333333, 175.0, 33.333333), 
	), ((17.5, 178.333333, 33.333333), ), ((15.416667, 177.5, 33.333333), 
	), ((17.083333, 175.833333, 33.333333), ), ((16.666667, 173.333333, 
	33.333333), ), ((14.583333, 172.5, 33.333333), ), ((12.916667, 
	174.166667, 33.333333), ), ((13.333333, 176.666667, 33.333333), ), ((
	20.0, 173.333333, 16.666667), ), ((20.0, 176.666667, 33.333333), ), ((
	22.5, 171.666667, 33.333333), ), ((21.666667, 175.0, 33.333333), ), ((
	22.5, 178.333333, 33.333333), ), ((27.5, 171.666667, 33.333333), ), ((
	28.333333, 175.0, 33.333333), ), ((27.5, 178.333333, 33.333333), ), ((
	25.416667, 177.5, 33.333333), ), ((27.083333, 175.833333, 33.333333), 
	), ((26.666667, 173.333333, 33.333333), ), ((24.583333, 172.5, 
	33.333333), ), ((22.916667, 174.166667, 33.333333), ), ((23.333333, 
	176.666667, 33.333333), ), ((30.0, 173.333333, 16.666667), ), ((30.0, 
	176.666667, 33.333333), ), ((32.5, 171.666667, 33.333333), ), ((
	31.666667, 175.0, 33.333333), ), ((32.5, 178.333333, 33.333333), ), ((
	37.5, 171.666667, 33.333333), ), ((38.333333, 175.0, 33.333333), ), ((
	37.5, 178.333333, 33.333333), ), ((35.416667, 177.5, 33.333333), ), ((
	37.083333, 175.833333, 33.333333), ), ((36.666667, 173.333333, 
	33.333333), ), ((34.583333, 172.5, 33.333333), ), ((32.916667, 
	174.166667, 33.333333), ), ((33.333333, 176.666667, 33.333333), ), ((
	50.0, 176.666667, 16.666667), ), ((50.0, 173.333333, 33.333333), ), ((
	40.0, 173.333333, 16.666667), ), ((40.0, 176.666667, 33.333333), ), ((
	42.5, 171.666667, 33.333333), ), ((41.666667, 175.0, 33.333333), ), ((
	42.5, 178.333333, 33.333333), ), ((47.5, 171.666667, 33.333333), ), ((
	48.333333, 175.0, 33.333333), ), ((47.5, 178.333333, 33.333333), ), ((
	45.416667, 177.5, 33.333333), ), ((47.083333, 175.833333, 33.333333), 
	), ((46.666667, 173.333333, 33.333333), ), ((44.583333, 172.5, 
	33.333333), ), ((42.916667, 174.166667, 33.333333), ), ((43.333333, 
	176.666667, 33.333333), ), ((6.666667, 180.0, 33.333333), ), ((
	16.666667, 180.0, 33.333333), ), ((26.666667, 180.0, 33.333333), ), ((
	36.666667, 180.0, 33.333333), ), ((46.666667, 180.0, 33.333333), ))
	p.Set(faces=faces, name='g18')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((0.0, 183.333333, 16.666667), ), ((0.0, 186.666667, 
	33.333333), ), ((2.5, 181.666667, 33.333333), ), ((1.666667, 185.0, 
	33.333333), ), ((2.5, 188.333333, 33.333333), ), ((7.5, 181.666667, 
	33.333333), ), ((8.333333, 185.0, 33.333333), ), ((7.5, 188.333333, 
	33.333333), ), ((5.416667, 187.5, 33.333333), ), ((7.083333, 
	185.833333, 33.333333), ), ((6.666667, 183.333333, 33.333333), ), ((
	4.583333, 182.5, 33.333333), ), ((2.916667, 184.166667, 33.333333), ), 
	((3.333333, 186.666667, 33.333333), ), ((10.0, 183.333333, 16.666667), 
	), ((10.0, 186.666667, 33.333333), ), ((12.5, 181.666667, 33.333333), 
	), ((11.666667, 185.0, 33.333333), ), ((12.5, 188.333333, 33.333333), 
	), ((17.5, 181.666667, 33.333333), ), ((18.333333, 185.0, 33.333333), 
	), ((17.5, 188.333333, 33.333333), ), ((15.416667, 187.5, 33.333333), 
	), ((17.083333, 185.833333, 33.333333), ), ((16.666667, 183.333333, 
	33.333333), ), ((14.583333, 182.5, 33.333333), ), ((12.916667, 
	184.166667, 33.333333), ), ((13.333333, 186.666667, 33.333333), ), ((
	20.0, 183.333333, 16.666667), ), ((20.0, 186.666667, 33.333333), ), ((
	22.5, 181.666667, 33.333333), ), ((21.666667, 185.0, 33.333333), ), ((
	22.5, 188.333333, 33.333333), ), ((27.5, 181.666667, 33.333333), ), ((
	28.333333, 185.0, 33.333333), ), ((27.5, 188.333333, 33.333333), ), ((
	25.416667, 187.5, 33.333333), ), ((27.083333, 185.833333, 33.333333), 
	), ((26.666667, 183.333333, 33.333333), ), ((24.583333, 182.5, 
	33.333333), ), ((22.916667, 184.166667, 33.333333), ), ((23.333333, 
	186.666667, 33.333333), ), ((30.0, 183.333333, 16.666667), ), ((30.0, 
	186.666667, 33.333333), ), ((32.5, 181.666667, 33.333333), ), ((
	31.666667, 185.0, 33.333333), ), ((32.5, 188.333333, 33.333333), ), ((
	37.5, 181.666667, 33.333333), ), ((38.333333, 185.0, 33.333333), ), ((
	37.5, 188.333333, 33.333333), ), ((35.416667, 187.5, 33.333333), ), ((
	37.083333, 185.833333, 33.333333), ), ((36.666667, 183.333333, 
	33.333333), ), ((34.583333, 182.5, 33.333333), ), ((32.916667, 
	184.166667, 33.333333), ), ((33.333333, 186.666667, 33.333333), ), ((
	50.0, 186.666667, 16.666667), ), ((50.0, 183.333333, 33.333333), ), ((
	40.0, 183.333333, 16.666667), ), ((40.0, 186.666667, 33.333333), ), ((
	42.5, 181.666667, 33.333333), ), ((41.666667, 185.0, 33.333333), ), ((
	42.5, 188.333333, 33.333333), ), ((47.5, 181.666667, 33.333333), ), ((
	48.333333, 185.0, 33.333333), ), ((47.5, 188.333333, 33.333333), ), ((
	45.416667, 187.5, 33.333333), ), ((47.083333, 185.833333, 33.333333), 
	), ((46.666667, 183.333333, 33.333333), ), ((44.583333, 182.5, 
	33.333333), ), ((42.916667, 184.166667, 33.333333), ), ((43.333333, 
	186.666667, 33.333333), ), ((6.666667, 190.0, 33.333333), ), ((
	16.666667, 190.0, 33.333333), ), ((26.666667, 190.0, 33.333333), ), ((
	36.666667, 190.0, 33.333333), ), ((46.666667, 190.0, 33.333333), ))
	p.Set(faces=faces, name='g19')
	p = mdb.models['Model-1'].parts['Foam']
	f = p.faces
	faces = f.findAt(((3.333333, 200.0, 33.333333), ), ((0.0, 193.333333, 
	16.666667), ), ((0.0, 196.666667, 33.333333), ), ((2.5, 191.666667, 
	33.333333), ), ((1.666667, 195.0, 33.333333), ), ((2.5, 198.333333, 
	33.333333), ), ((7.5, 191.666667, 33.333333), ), ((8.333333, 195.0, 
	33.333333), ), ((7.5, 198.333333, 33.333333), ), ((5.416667, 197.5, 
	33.333333), ), ((7.083333, 195.833333, 33.333333), ), ((6.666667, 
	193.333333, 33.333333), ), ((4.583333, 192.5, 33.333333), ), ((
	2.916667, 194.166667, 33.333333), ), ((3.333333, 196.666667, 
	33.333333), ), ((13.333333, 200.0, 33.333333), ), ((10.0, 193.333333, 
	16.666667), ), ((10.0, 196.666667, 33.333333), ), ((12.5, 191.666667, 
	33.333333), ), ((11.666667, 195.0, 33.333333), ), ((12.5, 198.333333, 
	33.333333), ), ((17.5, 191.666667, 33.333333), ), ((18.333333, 195.0, 
	33.333333), ), ((17.5, 198.333333, 33.333333), ), ((15.416667, 197.5, 
	33.333333), ), ((17.083333, 195.833333, 33.333333), ), ((16.666667, 
	193.333333, 33.333333), ), ((14.583333, 192.5, 33.333333), ), ((
	12.916667, 194.166667, 33.333333), ), ((13.333333, 196.666667, 
	33.333333), ), ((23.333333, 200.0, 33.333333), ), ((20.0, 193.333333, 
	16.666667), ), ((20.0, 196.666667, 33.333333), ), ((22.5, 191.666667, 
	33.333333), ), ((21.666667, 195.0, 33.333333), ), ((22.5, 198.333333, 
	33.333333), ), ((27.5, 191.666667, 33.333333), ), ((28.333333, 195.0, 
	33.333333), ), ((27.5, 198.333333, 33.333333), ), ((25.416667, 197.5, 
	33.333333), ), ((27.083333, 195.833333, 33.333333), ), ((26.666667, 
	193.333333, 33.333333), ), ((24.583333, 192.5, 33.333333), ), ((
	22.916667, 194.166667, 33.333333), ), ((23.333333, 196.666667, 
	33.333333), ), ((33.333333, 200.0, 33.333333), ), ((30.0, 193.333333, 
	16.666667), ), ((30.0, 196.666667, 33.333333), ), ((32.5, 191.666667, 
	33.333333), ), ((31.666667, 195.0, 33.333333), ), ((32.5, 198.333333, 
	33.333333), ), ((37.5, 191.666667, 33.333333), ), ((38.333333, 195.0, 
	33.333333), ), ((37.5, 198.333333, 33.333333), ), ((35.416667, 197.5, 
	33.333333), ), ((37.083333, 195.833333, 33.333333), ), ((36.666667, 
	193.333333, 33.333333), ), ((34.583333, 192.5, 33.333333), ), ((
	32.916667, 194.166667, 33.333333), ), ((33.333333, 196.666667, 
	33.333333), ), ((50.0, 196.666667, 16.666667), ), ((50.0, 193.333333, 
	33.333333), ), ((43.333333, 200.0, 33.333333), ), ((40.0, 193.333333, 
	16.666667), ), ((40.0, 196.666667, 33.333333), ), ((42.5, 191.666667, 
	33.333333), ), ((41.666667, 195.0, 33.333333), ), ((42.5, 198.333333, 
	33.333333), ), ((47.5, 191.666667, 33.333333), ), ((48.333333, 195.0, 
	33.333333), ), ((47.5, 198.333333, 33.333333), ), ((45.416667, 197.5, 
	33.333333), ), ((47.083333, 195.833333, 33.333333), ), ((46.666667, 
	193.333333, 33.333333), ), ((44.583333, 192.5, 33.333333), ), ((
	42.916667, 194.166667, 33.333333), ), ((43.333333, 196.666667, 
	33.333333), ))
	p.Set(faces=faces, name='g20')

	

#read from list

		
simulationNumber=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71]

foamType=['UT','UT','UT','UT','UT','UT','UT','UT','UT','UT','UT','UT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','SWT','AT','AT','AT','AT','AT','AT','AT','AT','AT','AT','AT','AT','AT','AT','AT','AT','AT','AT','AT','AT','AT','AT','AT','AT','GT','GT','GT','GT','GT','GT','GT','GT','GT','GT','GT','GT']

foamLength=[50,50,50,100,100,100,150,150,150,200,200,200,50,50,50,50,50,50,100,100,100,100,100,100,150,150,150,150,150,150,200,200,200,200,200,200,50,50,50,50,50,50,100,100,100,100,100,100,150,150,150,150,150,150,200,200,200,200,200,200,50,50,50,100,100,100,150,150,150,200,200,200]

Thickness1=[0.2,0.4,0.6,0.2,0.4,0.6,0.2,0.4,0.6,0.2,0.4,0.6,0.2,0.2,0.4,0.4,0.6,0.6,0.2,0.2,0.4,0.4,0.6,0.6,0.2,0.2,0.4,0.4,0.6,0.6,0.2,0.2,0.4,0.4,0.6,0.6,0.2,0.2,0.4,0.4,0.6,0.6,0.2,0.2,0.4,0.4,0.6,0.6,0.2,0.2,0.4,0.4,0.6,0.6,0.2,0.2,0.4,0.4,0.6,0.6,0.2,0.2,0.4,0.2,0.2,0.4,0.2,0.2,0.4,0.2,0.2,0.4]

Thickness2=[0,0,0,0,0,0,0,0,0,0,0,0,0.4,0.6,0.2,0.6,0.2,0.4,0.4,0.6,0.2,0.6,0.2,0.4,0.4,0.6,0.2,0.6,0.2,0.4,0.4,0.6,0.2,0.6,0.2,0.4,0.4,0.6,0.2,0.6,0.2,0.4,0.4,0.6,0.2,0.6,0.2,0.4,0.4,0.6,0.2,0.6,0.2,0.4,0.4,0.6,0.2,0.6,0.2,0.4,0.4,0.6,0.6,0.4,0.6,0.6,0.4,0.6,0.6,0.4,0.6,0.6]

stepTime=[0.005,0.005,0.005,0.01,0.01,0.01,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.005,0.005,0.005,0.005,0.005,0.005,0.01,0.01,0.01,0.01,0.01,0.01,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.005,0.005,0.005,0.005,0.005,0.005,0.01,0.01,0.01,0.01,0.01,0.01,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.005,0.005,0.005,0.01,0.01,0.01,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498,0.0142498]
		
for n in range(len(simulationNumber)):	
	Mdb()
	#setup the viewport
	session.viewports['Viewport: 1'].setValues(displayedObject=None)
	sub=simulationFolderSub[n]
	sub=str(sub)
	simnum=simulationNumber[n]
	simnum=str(simnum)
	sim=foamLength[n]
	sim=str(sim)
	sim1=foamType[n]
	sim=sim1+sim+'-'+simnum
	simpath=simulationFolderMain+sub+'/'+sim+'.cae'
	if os.path.exists(simpath):
		continue
	
	#create the model
	metalFoam = mdb.models['Model-1']

	#create the cellular structure sketch and part
	metalFoamProfile= metalFoam.ConstrainedSketch(name='Foam Sketch', sheetSize=5)
	rect1=metalFoamProfile.Line(point1=(0.0,0.0), point2=(10.0,0.0))
	rect2=metalFoamProfile.Line(point1=(10.0,0.0), point2=(10.0,10.0))
	rect3=metalFoamProfile.Line(point1=(10.0,10.0), point2=(0.0,10.0))
	rect4=metalFoamProfile.Line(point1=(0.0,10.0), point2=(0.0,0.0))
	L1=metalFoamProfile.Line(point1=(0.0,0.0), point2=(3.75,2.5))
	L2=metalFoamProfile.Line(point1=(0.0,5.0), point2=(2.5,5.0))
	L3=metalFoamProfile.Line(point1=(0.0,10.0), point2=(3.75,7.5))
	R1=metalFoamProfile.Line(point1=(10.0,0.0), point2=(6.25,2.5))
	R2=metalFoamProfile.Line(point1=(10.0,5.0), point2=(7.5,5.0))
	R3=metalFoamProfile.Line(point1=(10.0,10.0), point2=(6.25,7.5))
	H1=metalFoamProfile.Line(point1=(3.75,7.5), point2=(6.25,7.5))
	H2=metalFoamProfile.Line(point1=(6.25,7.5), point2=(7.5,5.0))
	H3=metalFoamProfile.Line(point1=(7.5,5.0), point2=(6.25,2.5))
	H4=metalFoamProfile.Line(point1=(6.25,2.5), point2=(3.75,2.5))
	H5=metalFoamProfile.Line(point1=(3.75,2.5), point2=(2.5,5.0))
	H6=metalFoamProfile.Line(point1=(2.5,5.0), point2=(3.75,7.5))

	#make linear pattern of unit cell
	length=foamLength[n]/10
	metalFoamProfile.linearPattern(geomList=(L1,L2,L3,R1,R2,R3,H1,H2,H3,H4,H5,H6,rect1,rect2,rect3,rect4), number1=5, spacing1=10.0, angle1=0.0, 
		number2=length, spacing2=10.0, angle2=90.0)

	#make part & extrude
	foam=metalFoam.Part(name='Foam', dimensionality=THREE_D, type=DEFORMABLE_BODY)
	foam.BaseShellExtrude(metalFoamProfile, depth=50)
	print 'Cellular structure created!'

	#create top plate sketch & part
	topPlateProfile = metalFoam.ConstrainedSketch(name='Top Sketch', sheetSize=5)
	topPlateProfile.rectangle(point1=(-30.0,-30.0), point2=(30.0,30.0))
	top=metalFoam.Part(name='Top', dimensionality=THREE_D, type=DISCRETE_RIGID_SURFACE)
	top.BaseShell(sketch=topPlateProfile)	
	print 'Top plate created!'

	#create bottom plate sketch & part
	bottomPlateProfile = metalFoam.ConstrainedSketch(name='Bottom Sketch', sheetSize=5)
	bottomPlateProfile.rectangle(point1=(-30.0,-30.0), point2=(30.0,30.0))
	bottom=metalFoam.Part(name='Bottom', dimensionality=THREE_D, type=DISCRETE_RIGID_SURFACE)
	bottom.BaseShell(sketch=topPlateProfile)	
	print 'Bottom plate created!'

	#insert reference point
	rp=(25.0,0.0,25.0)
	metalFoam.parts['Foam'].ReferencePoint(rp)
	mdb.models['Model-1'].parts['Foam'].features.changeKey(fromName='RP', toName='Foam')
	rp1=(0.0,0.0,0.0)
	metalFoam.parts['Top'].ReferencePoint(rp1)
	mdb.models['Model-1'].parts['Top'].features.changeKey(fromName='RP', toName='Top')
	metalFoam.parts['Bottom'].ReferencePoint(rp1)
	mdb.models['Model-1'].parts['Bottom'].features.changeKey(fromName='RP', toName='Bottom')
	print 'Reference points added!'
	
	#add material
	mdb.models['Model-1'].Material('AA2024')
	mdb.models['Model-1'].materials['AA2024'].Density(table=((2.780e-09, ), ))
	mdb.models['Model-1'].materials['AA2024'].Elastic(table=((73100.0, 0.33), ))
	mdb.models['Model-1'].materials['AA2024'].Plastic(hardening=JOHNSON_COOK, table=((275.9767, 700.43,  0.4208, 1.368, 502, 413), ))
	mdb.models['Model-1'].materials['AA2024'].plastic.RateDependent(type=JOHNSON_COOK, table=((0.0001726, 1.0), ))
	print "Material AA2024 added!"
	
	#add inertia
	p = mdb.models['Model-1'].parts['Top']
	r = p.referencePoints
	refPoints=(r[2], )
	region=p.Set(referencePoints=refPoints, name='Set-1')
	mdb.models['Model-1'].parts['Top'].engineeringFeatures.PointMassInertia(
		name='Inertia-1', region=region, mass=0.275, alpha=0.0, composite=0.0)
		
	#assign sections and sehll thickness
	if foamType[n] == 'UT':
		if foamLength[n]==50:
			ut50()
			regionName='ut50'
			vecTop=(0.0,51.0,0.0)
		elif foamLength[n]==100:
			ut100()
			regionName='ut100'
			vecTop=(0.0,101.0,0.0)
		elif foamLength[n]==150:
			ut150()
			regionName='ut150'
			vecTop=(0.0,151.0,0.0)
		elif foamLength[n]==200:
			ut200()
			regionName='ut200'
			vecTop=(0.0,201.0,0.0)
		mdb.models['Model-1'].HomogeneousShellSection(name='Section-1', 
		preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
		thickness=Thickness1[n], thicknessField='', idealization=NO_IDEALIZATION, 
		poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
		useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
		p = mdb.models['Model-1'].parts['Foam']
		region = p.sets[regionName]
		p = mdb.models['Model-1'].parts['Foam']
		p.SectionAssignment(region=region, sectionName='Section-1', offset=0.0, offsetType=MIDDLE_SURFACE, 
		offsetField='', thicknessAssignment=FROM_SECTION)
	elif foamType[n] == 'SWT':
		if foamLength[n]==50:
			swt50()
			regionName1='swt50s'
			regionName2='swt50w'
			vecTop=(0.0,51.0,0.0)
		elif foamLength[n]==100:
			swt100()
			regionName1='swt100s'
			regionName2='swt100w'
			vecTop=(0.0,101.0,0.0)
		elif foamLength[n]==150:
			swt150()
			regionName1='swt150s'
			regionName2='swt150w'
			vecTop=(0.0,151.0,0.0)
		elif foamLength[n]==200:
			swt200()
			regionName1='swt200s'
			regionName2='swt200w'
			vecTop=(0.0,201.0,0.0)
		mdb.models['Model-1'].HomogeneousShellSection(name='Section-1', 
		preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
		thickness=Thickness1[n], thicknessField='', idealization=NO_IDEALIZATION, 
		poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
		useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
		mdb.models['Model-1'].HomogeneousShellSection(name='Section-2', 
		preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
		thickness=Thickness2[n], thicknessField='', idealization=NO_IDEALIZATION, 
		poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
		useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
		p = mdb.models['Model-1'].parts['Foam']
		region = p.sets[regionName1]
		p = mdb.models['Model-1'].parts['Foam']
		p.SectionAssignment(region=region, sectionName='Section-1', offset=0.0, offsetType=MIDDLE_SURFACE, 
		offsetField='', thicknessAssignment=FROM_SECTION)
		p = mdb.models['Model-1'].parts['Foam']
		region = p.sets[regionName2]
		p = mdb.models['Model-1'].parts['Foam']
		p.SectionAssignment(region=region, sectionName='Section-2', offset=0.0, offsetType=MIDDLE_SURFACE, 
		offsetField='', thicknessAssignment=FROM_SECTION)
		
	elif foamType[n] == 'AT':
		if foamLength[n]==50:
			at200on()
			at200off()
			regionName1='on'
			regionName2='off'
			vecTop=(0.0,51.0,0.0)
		elif foamLength[n]==100:
			at200on()
			at200off()
			regionName1='on'
			regionName2='off'
			vecTop=(0.0,101.0,0.0)
		elif foamLength[n]==150:
			at200on()
			at200off()
			regionName1='on'
			regionName2='off'
			vecTop=(0.0,151.0,0.0)
		elif foamLength[n]==200:
			at200on()
			at200off()
			regionName1='on'
			regionName2='off'
			vecTop=(0.0,201.0,0.0)
		mdb.models['Model-1'].HomogeneousShellSection(name='Section-1', 
		preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
		thickness=Thickness1[n], thicknessField='', idealization=NO_IDEALIZATION, 
		poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
		useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
		mdb.models['Model-1'].HomogeneousShellSection(name='Section-2', 
		preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
		thickness=Thickness2[n], thicknessField='', idealization=NO_IDEALIZATION, 
		poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
		useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
		p = mdb.models['Model-1'].parts['Foam']
		region = p.sets[regionName1]
		p = mdb.models['Model-1'].parts['Foam']
		p.SectionAssignment(region=region, sectionName='Section-1', offset=0.0, offsetType=MIDDLE_SURFACE, 
		offsetField='', thicknessAssignment=FROM_SECTION)
		p = mdb.models['Model-1'].parts['Foam']
		region = p.sets[regionName2]
		p = mdb.models['Model-1'].parts['Foam']
		p.SectionAssignment(region=region, sectionName='Section-2', offset=0.0, offsetType=MIDDLE_SURFACE, 
		offsetField='', thicknessAssignment=FROM_SECTION)
	elif foamType[n]=='GT':
		if foamLength[n]==50:
			gt50()
			regionName1='g'
			regionName2='g1'
			regionName3='g2'
			regionName4='g3'
			regionName5='g4'
			regionName6='g5'
			vecTop=(0.0,51.0,0.0)
			g=Thickness1[n]
			g5=Thickness2[n]
			if g==0.2 and g5==0.6:
				g1=0.28
				g2=0.36
				g3=0.44
				g4=0.52
			elif g==0.2 and g5==0.4:
				g1=0.24
				g2=0.28
				g3=0.32
				g4=0.36
			elif g==0.4 and g5==0.6:
				g1=0.44
				g2=0.48
				g3=0.52
				g4=0.56
			
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-1', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-2', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g1, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-3', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g2, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-4', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g3, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-5', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g4, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-6', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g5, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName1]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-1', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName2]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-2', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName3]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-3', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName4]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-4', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName5]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-5', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName6]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-6', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
		elif foamLength[n]==100:
			gt100()
			regionName1='g'
			regionName2='g1'
			regionName3='g2'
			regionName4='g3'
			regionName5='g4'
			regionName6='g5'
			regionName7='g6'
			regionName8='g7'
			regionName9='g8'
			regionName10='g9'
			regionName11='g10'
			vecTop=(0.0,101.0,0.0)
			g=Thickness1[n]
			g10=Thickness2[n]
			if g==0.2 and g10==0.6:
				g1=0.24
				g2=0.28
				g3=0.32
				g4=0.36
				g5=0.4
				g6=0.44
				g7=0.48
				g8=0.52
				g9=0.56
			elif g==0.2 and g10==0.4:
				g1=0.22
				g2=0.24
				g3=0.26
				g4=0.28
				g5=0.3
				g6=0.32
				g7=0.34
				g8=0.36
				g9=0.38
			elif g==0.4 and g10==0.6:
				g1=0.42
				g2=0.44
				g3=0.46
				g4=0.48
				g5=0.5
				g6=0.52
				g7=0.54
				g8=0.56
				g9=0.58
			
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-1', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-2', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g1, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-3', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g2, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-4', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g3, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-5', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g4, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-6', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g5, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-7', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g6, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-8', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g7, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-9', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g8, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-10', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g9, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-11', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g10, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName1]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-1', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName2]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-2', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName3]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-3', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName4]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-4', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName5]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-5', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName6]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-6', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName7]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-7', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName8]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-8', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName9]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-9', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName10]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-10', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName11]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-11', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
		elif foamLength[n]==150:
			gt150()
			regionName1='g'
			regionName2='g1'
			regionName3='g2'
			regionName4='g3'
			regionName5='g4'
			regionName6='g5'
			regionName7='g6'
			regionName8='g7'
			regionName9='g8'
			regionName10='g9'
			regionName11='g10'
			regionName12='g11'
			regionName13='g12'
			regionName14='g13'
			regionName15='g14'
			regionName16='g15'
			vecTop=(0.0,151.0,0.0)
			g=Thickness1[n]
			g15=Thickness2[n]
			if g==0.2 and g15==0.6:
				g1=0.22666667
				g2=0.25333333
				g3=0.28
				g4=0.30666667
				g5=0.33333333
				g6= 0.36 
				g7=0.38666667
				g8=0.41333333
				g9=0.44  
				g10=0.46666667
				g11=0.49333333
				g12=0.52   
				g13=0.54666667
				g14=0.57333333
			elif g==0.2 and g15==0.4:
				g1=0.21333333
				g2=0.22666667
				g3=0.24 
				g4=0.25333333
				g5= 0.26666667
				g6=0.28 
				g7=0.29333333
				g8=0.30666667
				g9=0.32
				g10= 0.33333333
				g11=0.34666667
				g12=0.36
				g13=0.37333333
				g14=0.38666667
			elif g==0.4 and g15==0.6:
				g1=0.21333333
				g2=0.22666667
				g3=0.24 
				g4= 0.25333333
				g5=0.26666667
				g6=0.28
				g7=0.29333333
				g8=0.30666667
				g9=0.32   
				g10=0.33333333
				g11=0.34666667
				g12= 0.36 
				g13= 0.37333333
				g14=0.38666667
			
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-1', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-2', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g1, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-3', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g2, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-4', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g3, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-5', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g4, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-6', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g5, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-7', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g6, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-8', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g7, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-9', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g8, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-10', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g9, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-11', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g10, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-12', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g11, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-13', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g12, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-14', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g13, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-15', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g14, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-16', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g15, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName1]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-1', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName2]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-2', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName3]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-3', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName4]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-4', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName5]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-5', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName6]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-6', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName7]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-7', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName8]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-8', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName9]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-9', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName10]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-10', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName11]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-11', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName12]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-12', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName13]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-13', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName14]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-14', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName15]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-15', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName16]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-16', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
		elif foamLength[n]==200:
			gt200()
			regionName1='g'
			regionName2='g1'
			regionName3='g2'
			regionName4='g3'
			regionName5='g4'
			regionName6='g5'
			regionName7='g6'
			regionName8='g7'
			regionName9='g8'
			regionName10='g9'
			regionName11='g10'
			regionName12='g11'
			regionName13='g12'
			regionName14='g13'
			regionName15='g14'
			regionName16='g15'
			regionName17='g16'
			regionName18='g17'
			regionName19='g18'
			regionName20='g19'
			regionName21='g20'
			vecTop=(0.0,201.0,0.0)
			g=Thickness1[n]
			g20=Thickness2[n]
			if g==0.2 and g20==0.6:
				g1=0.22
				g2=0.24
				g3=0.26
				g4=0.28
				g5=0.3
				g6=0.32
				g7=0.34
				g8=0.36
				g9=0.38
				g10=0.4
				g11=0.42
				g12=0.44
				g13=0.46
				g14=0.48
				g15=0.5
				g16=0.52
				g17=0.54
				g18=0.56
				g19=0.58
				
			elif g==0.2 and g20==0.4:
				g1=0.21
				g2=0.22
				g3=0.23
				g4=0.24
				g5=0.25
				g6=0.26
				g7=0.27
				g8=0.28
				g9=0.29
				g10=0.3
				g11=0.31
				g12=0.32
				g13=0.33
				g14=0.34
				g15=0.35
				g16=0.36
				g17=0.37
				g18=0.38
				g19=0.39
			elif g==0.4 and g20==0.6:
				g1=0.41
				g2=0.41
				g3=0.43
				g4=0.44
				g5=0.45
				g6=0.46
				g7=0.47
				g8=0.48
				g9=0.49
				g10=0.5
				g11=0.51
				g12=0.52
				g13=0.53
				g14=0.54
				g15=0.55
				g16=0.56
				g17=0.57
				g18=0.58
				g19=0.59
			
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-1', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-2', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g1, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-3', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g2, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-4', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g3, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-5', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g4, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-6', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g5, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-7', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g6, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-8', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g7, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-9', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g8, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-10', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g9, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-11', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g10, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-12', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g11, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-13', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g12, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-14', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g13, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-15', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g14, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-16', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g15, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-17', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g16, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-18', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g17, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-19', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g18, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-20', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g19, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			mdb.models['Model-1'].HomogeneousShellSection(name='Section-21', 
			preIntegrate=OFF, material='AA2024', thicknessType=UNIFORM, 
			thickness=g20, thicknessField='', idealization=NO_IDEALIZATION, 
			poissonDefinition=DEFAULT, thicknessModulus=None, temperature=GRADIENT, 
			useDensity=OFF, integrationRule=SIMPSON, numIntPts=5)
			
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName1]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-1', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName2]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-2', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName3]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-3', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName4]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-4', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName5]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-5', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName6]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-6', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName7]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-7', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName8]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-8', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName9]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-9', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName10]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-10', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName11]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-11', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName12]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-12', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName13]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-13', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName14]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-14', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName15]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-15', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName16]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-16', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName17]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-17', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName18]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-18', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName19]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-19', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName20]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-20', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
			p = mdb.models['Model-1'].parts['Foam']
			region = p.sets[regionName21]
			p = mdb.models['Model-1'].parts['Foam']
			p.SectionAssignment(region=region, sectionName='Section-21', offset=0.0, offsetType=MIDDLE_SURFACE, 
			offsetField='', thicknessAssignment=FROM_SECTION)
	#make assembly
	a = mdb.models['Model-1'].rootAssembly
	a.DatumCsysByDefault(CARTESIAN)
	p = mdb.models['Model-1'].parts['Bottom']
	a.Instance(name='Bottom-1', part=p, dependent=OFF)
	a = mdb.models['Model-1'].rootAssembly
	p = mdb.models['Model-1'].parts['Foam']
	a.Instance(name='Foam-1', part=p, dependent=OFF)
	a = mdb.models['Model-1'].rootAssembly
	p = mdb.models['Model-1'].parts['Top']
	a.Instance(name='Top-1', part=p, dependent=OFF)
	a = mdb.models['Model-1'].rootAssembly
	a.rotate(instanceList=('Bottom-1', ), axisPoint=(0.0, 0.0, 0.0), axisDirection=(10.0, 0.0, 0.0), angle=90.0)
	a = mdb.models['Model-1'].rootAssembly
	a.rotate(instanceList=('Top-1', ), axisPoint=(0.0, 0.0, 0.0), axisDirection=(10.0, 0.0, 0.0), angle=90.0)
	a = mdb.models['Model-1'].rootAssembly
	a.translate(instanceList=('Top-1', ), vector=vecTop)
	a = mdb.models['Model-1'].rootAssembly
	a.translate(instanceList=('Foam-1', ), vector=(-25.0, 0.0, -25.0))
	#create step
	mdb.models['Model-1'].ExplicitDynamicsStep(name='Crash', previous='Initial', timePeriod=stepTime[n])
	mdb.models['Model-1'].fieldOutputRequests['F-Output-1'].setValues(numIntervals=200)
	
	#create interaction
	a = mdb.models['Model-1'].rootAssembly
	s1 = a.instances['Bottom-1'].faces
	side2Faces1 = s1.findAt(((-10.0, 0.0, -10.0), ))
	region1=a.Surface(side2Faces=side2Faces1, name='m_Surf-3')
	a = mdb.models['Model-1'].rootAssembly
	s1 = a.instances['Foam-1'].edges
	side1Edges1 = s1.findAt(((-17.5, 0.0, 25.0), ), ((-22.5, 0.0, -25.0), ), ((
	-7.5, 0.0, 25.0), ), ((-12.5, 0.0, -25.0), ), ((2.5, 0.0, 25.0), ), ((
	-2.5, 0.0, -25.0), ), ((12.5, 0.0, 25.0), ), ((7.5, 0.0, -25.0), ), ((
	22.5, 0.0, 25.0), ), ((17.5, 0.0, -25.0), ), ((25.0, 0.0, -12.5), ))
	side2Edges1 = s1.findAt(((-25.0, 0.0, -12.5), ))
	region2=a.Surface(side1Edges=side1Edges1, side2Edges=side2Edges1, name='s_Surf-3')
	mdb.models['Model-1'].Tie(name='Constraint-1', master=region1, slave=region2, positionToleranceMethod=COMPUTED, adjust=ON, tieRotations=ON, thickness=ON)
	mdb.models['Model-1'].ContactProperty('IntProp-1')
	mdb.models['Model-1'].interactionProperties['IntProp-1'].TangentialBehavior(
	formulation=PENALTY, directionality=ISOTROPIC, slipRateDependency=OFF, 
	pressureDependency=OFF, temperatureDependency=OFF, dependencies=0, 
	table=((0.2, ), ), shearStressLimit=None, maximumElasticSlip=FRACTION, 
	fraction=0.005, elasticSlipStiffness=None)
	
	mdb.models['Model-1'].ContactExp(name='Int-1', createStepName='Initial')
	mdb.models['Model-1'].interactions['Int-1'].includedPairs.setValuesInStep(
	stepName='Initial', useAllstar=ON)
	mdb.models['Model-1'].interactions['Int-1'].contactPropertyAssignments.appendInStep(
	stepName='Initial', assignments=((GLOBAL, SELF, 'IntProp-1'), ))
	
	#create load
	a = mdb.models['Model-1'].rootAssembly
	r1 = a.instances['Bottom-1'].referencePoints
	refPoints1=(r1[2], )
	region = a.Set(referencePoints=refPoints1, name='Set-1')
	mdb.models['Model-1'].EncastreBC(name='BC-1', createStepName='Initial', 
	region=region, localCsys=None)
	session.viewports['Viewport: 1'].view.setValues(session.views['Iso'])
	a = mdb.models['Model-1'].rootAssembly
	r1 = a.instances['Top-1'].referencePoints
	refPoints1=(r1[2], )
	region = a.Set(referencePoints=refPoints1, name='Set-2')
	mdb.models['Model-1'].DisplacementBC(name='BC-2', createStepName='Initial', 
	region=region, u1=SET, u2=UNSET, u3=SET, ur1=SET, ur2=SET, ur3=SET, 
	amplitude=UNSET, distributionType=UNIFORM, fieldName='', 
	localCsys=None)
	a = mdb.models['Model-1'].rootAssembly
	r1 = a.instances['Top-1'].referencePoints
	refPoints1=(r1[2], )
	region = a.Set(referencePoints=refPoints1, name='Set-3')
	mdb.models['Model-1'].Velocity(name='Predefined Field-1', region=region, 
	field='', distributionType=MAGNITUDE, velocity1=0.0, 
	velocity2=-15000.0, velocity3=0.0, omega=0.0)
	
	#create mesh
	a = mdb.models['Model-1'].rootAssembly
	partInstances =(a.instances['Foam-1'], )
	a.seedPartInstance(regions=partInstances, size=0.8, deviationFactor=0.1, 
	minSizeFactor=0.1)
	a = mdb.models['Model-1'].rootAssembly
	partInstances =(a.instances['Foam-1'], )
	a.generateMesh(regions=partInstances)
	a = mdb.models['Model-1'].rootAssembly
	partInstances =(a.instances['Top-1'], a.instances['Bottom-1'], )
	a.seedPartInstance(regions=partInstances, size=5.0, deviationFactor=0.1, 
	minSizeFactor=0.1)
	a = mdb.models['Model-1'].rootAssembly
	partInstances =(a.instances['Top-1'], a.instances['Bottom-1'], )
	a.generateMesh(regions=partInstances)
	
	#create job
	mdb.Job(name=sim, model='Model-1', description='', type=ANALYSIS, 
	atTime=None, waitMinutes=0, waitHours=0, queue=None, memory=90, 
	memoryUnits=PERCENTAGE, explicitPrecision=SINGLE, 
	nodalOutputPrecision=SINGLE, echoPrint=OFF, modelPrint=OFF, 
	contactPrint=OFF, historyPrint=OFF, userSubroutine='', scratch='', 
	resultsFormat=ODB, parallelizationMethodExplicit=DOMAIN, numDomains=2, 
	activateLoadBalancing=False, multiprocessingMode=DEFAULT, numCpus=2)
	
	#save file
	if not os.path.exists(simpath):
		mdb.saveAs(pathName=simpath)
	else:
		print 'done!'
print "All is well"
			

































